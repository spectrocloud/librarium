# This workflow runs the set of core vale checks on the entire repo.
# The workflow runs every Monday at 8 am UTC.
# Any image that is not referenced in the repository is considered unused.
# This workflow supports on-demand execution using the workflow_dispatch event.

name: Check Vale Entire Repo

on:
  schedule:
    # Every Monday at 8AM UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:

concurrency:
  group: check-vale-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_vale:
    name: Run Vale Spell Check
    runs-on: ubuntu-latest

    steps:
    
      - id: checkout
        name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install & Configure Vale
        run: |
          curl -fsSL https://install.goreleaser.com/github.com/errata-ai/vale.sh | sh
          # Copy contents from vale-spellcheck.ini to vale.ini
          cp vale-spellcheck.ini vale.ini
          vale sync

      - name: Run Vale Spell Check
        run: |
          mkdir -p vale-results
          # Copy the vale output to a file names vale-output-2.txt
          vale docs/**/*.md > vale-results/vale-output.txt

      # - name: Check Vale Results
      #   run: |
      #     if [ -s vale-results/vale-output.txt ]; then
      #       echo "VALE_ERRORS_FOUND=true" >> $GITHUB_ENV
      #     else
      #       echo "VALE_ERRORS_FOUND=false" >> $GITHUB_ENV
      #     fi

      # - name: Upload Vale Results
      #   if: env.VALE_ERRORS_FOUND == 'true'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: "vale-spellcheck-results"
      #     path: vale-results/vale-output.txt
      #     if-no-files-found: error
      #     retention-days: 7

      # - name: Slack Notification
      #   if: ${{ env.GITHUB_CREATED_CLEANUP_PR  != ''}}
      #   uses: rtCamp/action-slack-notify@v2.3.2
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_PRIVATE_TEAM_WEBHOOK }}
      #     SLACK_USERNAME: "spectromate"
      #     SLACK_ICON_EMOJI: ":ok_hand:"
      #     SLACK_COLOR: ${{ job.status }}
      #     SLACKIFY_MARKDOWN: true
      #     ENABLE_ESCAPES: true
      #     SLACK_MESSAGE: 'A new PR with unused images to clean up was created. Please review ${{env.GITHUB_CREATED_CLEANUP_PR}} for more details.'

      # - name: Failure Slack Notification
      #   if: ${{ failure() }}
      #   uses: rtCamp/action-slack-notify@v2.3.2
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_PRIVATE_TEAM_WEBHOOK }}
      #     SLACK_COLOR: ${{ job.status }}
      #     SLACKIFY_MARKDOWN: true
      #     ENABLE_ESCAPES: true
      #     SLACK_MESSAGE: 'The clean-up-unused-images job in `${{ github.repository }}` failed. [View details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).'