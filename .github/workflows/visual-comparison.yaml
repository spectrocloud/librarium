name: Visual Comparison

on:
  push:
    branches: [visual-tests]
# on:
#   push:
#     paths:
#       - 'src/**'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
  AWS_DEFAULT_REGION: us-east-1
  APPZI_TOKEN: ${{ secrets.APPZI_TOKEN }}
  MENDABLE_API_KEY: ${{ secrets.MENDABLE_API_KEY }}
  FULLSTORY_ORGID: ${{ secrets.FULLSTORY_ORGID }}
  ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
  ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
  ALGOLIA_SEARCH_KEY: ${{ secrets.ALGOLIA_SEARCH_KEY }}



concurrency:
  group: "visual-comparison-${{ github.workflow }}"
  cancel-in-progress: false


jobs:
  take-screenshots:

    environment:
      name: github-pages
      url: ${{ steps.take-screenshots.outputs.page_url }}
      HTML_REPORT_URL_PATH: reports/${{ github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}

    permissions:
      contents: write
      pages: write
      id-token: write

    name: Visual Comparison
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build the website
        run: make build

      - name: Take screenshots with Playwright
        run: make test-visual-ci

      - name: Push HTML Report
        timeout-minutes: 3
        run: |
          git add .
          git commit -m "workflow: add HTML report for run-id ${{ github.run_id }} (attempt:  ${{ github.run_attempt }})"
          while true; do
            git pull --rebase
            if [ $? -ne 0 ]; then
              echo "Failed to rebase. Please review manually."
              exit 1
            fi

            git push
            if [ $? -eq 0 ]; then
              echo "Successfully pushed HTML report to repo."
              exit 0
            fi
          done


      - name: Download URLs
        run:  |
          echo 'Screenshots URL is ${{ steps.screenshots.outputs.artifact-url }}'
          echo 'Report URL is ${{ steps.report.outputs.artifact-url }}'

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Unique Folder Name
        run : mkdir -p ${{ github.sha }} && cp -r playwright-report/* ${{ github.sha }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: playwright-report/
          destination_dir: ${{ github.sha }}
          keep_files: true

          
      - name: GH Pages URL
        run: |
          echo "::notice title=ðŸ“‹ Published Playwright Test Report::https://spectrocloud.github.io/librarium/$HTML_REPORT_URL_PATH"




