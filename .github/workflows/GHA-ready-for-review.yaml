# This workflow is triggered on a pull request labeled with 'ready_for_review'. 
# The workflow invokes a Slack notification to alert the team that a pull request is ready for review.
# This is primarily used on pull requests that are not in draft status.
# This workflow is not needed for pull requests that are in draft status, as they are not ready for review.

name: Ready for Review

on:
   pull_request:
    types: ["labeled"] # Trigger on PR ready for review, review requested, opened, or reopened

permissions:
  contents: read # Allows the workflow to read the repository contents
  pull-requests: read # Allows the workflow to read pull request information

concurrency:
  group: readyforreviewci-${{ github.ref }} # Ensures that only one workflow runs at a time for the same branch
  cancel-in-progress: true # Cancels any in-progress runs of this workflow for the same branch

jobs:
  notify-slack:
    # Run only if PR is not a draft and has the 'notify-slack' label
    if: > 
      github.event.pull_request.draft == false && 
      contains(github.event.pull_request.labels.*.name, 'notify-slack')

    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2.3.3
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_PRIVATE_TEAM_TEST_WEBHOOK }}
          SLACK_USERNAME: "spectromate"
        #   SLACK_ICON_EMOJI: ":robot_panic:"
        #   SLACK_COLOR: ${{ job.status }}
        #   SLACK_MESSAGE: 'Linus test ${{env.GITHUB_BRANCH}} .'

      - name: Send Slack Notification (custom message)
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_PRIVATE_TEAM_TEST_WEBHOOK }}
        shell: bash
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}" 
          PR_URL="${{ github.event.pull_request.html_url }}" 
          PR_AUTHOR="${{ github.event.pull_request.user.login }}" 

          PAYLOAD=$(cat <<EOM
          {
            "text": ":eyes: *New PR Ready for Review!* :review: ",
            "attachments": [
              {
                "title": "${PR_TITLE}",
                "title_link": "${PR_URL}",
                "text": "Author: ${PR_AUTHOR}",
                "color": "#cc00cc"
              }
            ]
          }
          EOM
          )

          curl -X POST -H 'Content-type: application/json' --data "${PAYLOAD}" "${SLACK_WEBHOOK}"
