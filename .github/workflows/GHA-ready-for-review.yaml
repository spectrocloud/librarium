# This workflow will post to Slack when a PR is labeled with "notify-slack". 
# Additionally, it will notify the appropriate reviewers based on the current UTC hour.

name: Ready for Review

on:
  pull_request:
    types: [labeled]

permissions:
  pull-requests: write  # Needed to read/write PR comments

concurrency:
  group: readyforreviewci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  notify-slack:
    if: contains(github.event.pull_request.labels.*.name, 'notify-slack') # Only run if the PR is labeled with "notify-slack"
    runs-on: ubuntu-latest

    env:
      SLACK_USER_BEN: ${{ secrets.SLACK_USER_BEN }} # add users to GitHub Secrets and then reference them here.
      SLACK_USER_ADELINA: ${{ secrets.SLACK_USER_ADELINA }}
      SLACK_USER_LINUS: ${{ secrets.SLACK_USER_LINUS }}
      SLACK_USER_AMANDA: ${{ secrets.SLACK_USER_AMANDA }}
      SLACK_USER_CAROLINA: ${{ secrets.SLACK_USER_CAROLINA }}
      SLACK_USER_LENNY: ${{ secrets.SLACK_USER_LENNY }}
      SLACK_USER_SVETA: ${{ secrets.SLACK_USER_SVETA }}

    steps:
      - name: Check for prior Slack notification comment # This step checks if the PR has already been notified in Slack to avoid duplicate notifications.
        id: check
        run: |
          COMMENTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments)
          echo "$COMMENTS" | grep -q "<!-- slack-notified -->" && echo "notified=true" >> $GITHUB_OUTPUT || echo "notified=false" >> $GITHUB_OUTPUT

          
      - name: Exit if already notified
        if: steps.check.outputs.notified == 'true'
        run: echo "Slack already notified. Exiting." # Script should exit here if already notified.

      - name: Get Current UTC Hour
        id: time
        run: echo "hour=$(date -u +'%H')" >> $GITHUB_OUTPUT

      - name: Choose Reviewers Based on Time
        id: pick
        run: |
          HOUR=${{ steps.time.outputs.hour }}
          REVIEWERS=""

          if [ "$HOUR" -ge 7 ] && [ "$HOUR" -lt 15 ]; then
            REVIEWERS+="<@$SLACK_USER_BEN> "
          fi
          if [ "$HOUR" -ge 10 ] && [ "$HOUR" -lt 18 ]; then
            REVIEWERS+="<@$SLACK_USER_ADELINA> "
          fi
          if [ "$HOUR" -ge 11 ] && [ "$HOUR" -lt 19 ]; then
            REVIEWERS+="<@$SLACK_USER_LINUS> "
          fi
          if [ "$HOUR" -ge 12 ] && [ "$HOUR" -lt 20 ]; then
            REVIEWERS+="<@$SLACK_USER_AMANDA> "
          fi
          if [ "$HOUR" -ge 12 ] && [ "$HOUR" -lt 21 ]; then
            REVIEWERS+="<@$SLACK_USER_CAROLINA> "
          fi
          if [ "$HOUR" -ge 15 ] && [ "$HOUR" -lt 22 ]; then
            REVIEWERS+="<@$SLACK_USER_LENNY> <@$SLACK_USER_SVETA>"
          fi

          echo "reviewers=$REVIEWERS" >> $GITHUB_OUTPUT

      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2.3.3
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_PRIVATE_TEAM_WEBHOOK }}
          SLACK_USERNAME: "spectromate"
          SLACK_ICON_EMOJI: ":robot_panic:"
          SLACK_COLOR: "#A020F0"
          SLACK_MESSAGE: |
            :review: *<${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>* is ready for review!
            Pinging: ${{ steps.pick.outputs.reviewers }}
            
      - name: Record Slack notification via comment # This step adds a comment to the PR to indicate that Slack has been notified.
        if: steps.check.outputs.notified == 'false'
        run: |
            curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\":\"âœ… Slack reviewers have been notified: ${{ steps.pick.outputs.reviewers }}\"}" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments