# Page snapshot

```yaml
- generic [active] [ref=e1]:
  - generic [ref=e2]:
    - region "Skip to main content":
      - link "Skip to main content" [ref=e3] [cursor=pointer]:
        - /url: "#__docusaurus_skipToContent_fallback"
    - navigation "Main" [ref=e4]:
      - generic [ref=e5]:
        - generic [ref=e6]:
          - link "Spectro cloud logo" [ref=e7] [cursor=pointer]:
            - /url: /
            - img "Spectro cloud logo" [ref=e9]
          - link "Docs" [ref=e10] [cursor=pointer]:
            - /url: /release-notes/
          - link "Tutorials" [ref=e11] [cursor=pointer]:
            - /url: /tutorials/
          - link "Downloads" [ref=e12] [cursor=pointer]:
            - /url: /downloads/
          - link "API" [ref=e13] [cursor=pointer]:
            - /url: /api/introduction/
          - button "latest" [ref=e15] [cursor=pointer]
        - generic [ref=e16]:
          - link "GitHub repository" [ref=e17] [cursor=pointer]:
            - /url: https://github.com/spectrocloud/librarium
          - button "Switch between dark and light mode (currently system mode)" [ref=e19] [cursor=pointer]:
            - img [ref=e20]
          - button "Search (Ctrl+K)" [ref=e23] [cursor=pointer]:
            - generic [ref=e24]:
              - img [ref=e25]
              - generic [ref=e27]: Search
    - generic [ref=e31]:
      - complementary [ref=e32]:
        - generic [ref=e34]:
          - link "Spectro cloud logo" [ref=e35] [cursor=pointer]:
            - /url: /
            - img "Spectro cloud logo" [ref=e36]
          - navigation "Docs sidebar" [ref=e37]:
            - list [ref=e38]:
              - listitem [ref=e39]:
                - generic [ref=e40]:
                  - link "Release Notes" [ref=e41] [cursor=pointer]:
                    - /url: /release-notes/
                    - img [ref=e43]
                    - text: Release Notes
                  - button "Toggle the collapsible sidebar category 'Release Notes'" [ref=e45] [cursor=pointer]
              - listitem [ref=e46]:
                - generic [ref=e47]:
                  - link "Security Bulletins" [ref=e48] [cursor=pointer]:
                    - /url: /security-bulletins/
                    - img [ref=e50]
                    - text: Security Bulletins
                  - button "Toggle the collapsible sidebar category 'Security Bulletins'" [ref=e52] [cursor=pointer]
              - listitem [ref=e53]:
                - generic [ref=e54]:
                  - link "What is Palette?" [ref=e55] [cursor=pointer]:
                    - /url: /
                    - img [ref=e57]
                    - text: What is Palette?
                  - button "Toggle the collapsible sidebar category 'What is Palette?'" [ref=e59] [cursor=pointer]
              - listitem [ref=e60]:
                - link "Getting Started" [ref=e61] [cursor=pointer]:
                  - /url: /getting-started/
                  - img [ref=e63]
                  - text: Getting Started
              - listitem [ref=e65]:
                - generic [ref=e66]:
                  - link "Architecture" [ref=e67] [cursor=pointer]:
                    - /url: /architecture/
                    - img [ref=e69]
                    - text: Architecture
                  - button "Toggle the collapsible sidebar category 'Architecture'" [ref=e71] [cursor=pointer]
              - listitem [ref=e72]:
                - generic [ref=e73]:
                  - link "Profiles" [ref=e74] [cursor=pointer]:
                    - /url: /profiles/
                    - img [ref=e76]
                    - text: Profiles
                  - button "Toggle the collapsible sidebar category 'Profiles'" [ref=e80] [cursor=pointer]
              - listitem [ref=e81]:
                - generic [ref=e82]:
                  - link "Deployment Modes" [ref=e83] [cursor=pointer]:
                    - /url: /deployment-modes/
                    - img [ref=e85]
                    - text: Deployment Modes
                  - button "Toggle the collapsible sidebar category 'Deployment Modes'" [ref=e87] [cursor=pointer]
              - listitem [ref=e88]:
                - generic [ref=e89]:
                  - link "Clusters" [ref=e90] [cursor=pointer]:
                    - /url: /clusters/
                    - img [ref=e92]
                    - text: Clusters
                  - button "Toggle the collapsible sidebar category 'Clusters'" [ref=e98] [cursor=pointer]
              - listitem [ref=e99]:
                - generic [ref=e100]:
                  - link "Bring Your Own OS (BYOOS)" [ref=e101] [cursor=pointer]:
                    - /url: /byoos/
                    - img [ref=e103]
                    - text: Bring Your Own OS (BYOOS)
                  - button "Toggle the collapsible sidebar category 'Bring Your Own OS (BYOOS)'" [ref=e105] [cursor=pointer]
              - listitem [ref=e106]:
                - generic [ref=e107]:
                  - link "Palette Dev Engine" [ref=e108] [cursor=pointer]:
                    - /url: /devx/
                    - img [ref=e110]
                    - text: Palette Dev Engine
                  - button "Toggle the collapsible sidebar category 'Palette Dev Engine'" [ref=e112] [cursor=pointer]
              - listitem [ref=e113]:
                - generic [ref=e114]:
                  - link "Virtual Machine Orchestrator" [ref=e115] [cursor=pointer]:
                    - /url: /vm-management/
                    - img [ref=e117]
                    - text: Virtual Machine Orchestrator
                  - button "Toggle the collapsible sidebar category 'Virtual Machine Orchestrator'" [ref=e119] [cursor=pointer]
              - listitem [ref=e120]:
                - generic [ref=e121]:
                  - link "Workspaces" [ref=e122] [cursor=pointer]:
                    - /url: /workspace/
                    - img [ref=e124]
                    - text: Workspaces
                  - button "Toggle the collapsible sidebar category 'Workspaces'" [ref=e126] [cursor=pointer]
              - listitem [ref=e127]:
                - generic [ref=e128]:
                  - link "Packs List" [ref=e129] [cursor=pointer]:
                    - /url: /integrations/
                    - img [ref=e131]
                    - text: Packs List
                  - button "Toggle the collapsible sidebar category 'Packs List'" [ref=e133] [cursor=pointer]
              - listitem [ref=e134]:
                - generic [ref=e135]:
                  - link "User & Role Management" [ref=e136] [cursor=pointer]:
                    - /url: /user-management/
                    - img [ref=e138]
                    - text: User & Role Management
                  - button "Toggle the collapsible sidebar category 'User & Role Management'" [ref=e140] [cursor=pointer]
              - listitem [ref=e141]:
                - generic [ref=e142]:
                  - link "Registries and Packs" [ref=e143] [cursor=pointer]:
                    - /url: /registries-and-packs/
                    - img [ref=e145]
                    - text: Registries and Packs
                  - button "Toggle the collapsible sidebar category 'Registries and Packs'" [ref=e147] [cursor=pointer]
              - listitem [ref=e148]:
                - generic [ref=e149]:
                  - link "Security" [ref=e150] [cursor=pointer]:
                    - /url: /security/
                    - img [ref=e152]
                    - text: Security
                  - button "Toggle the collapsible sidebar category 'Security'" [ref=e154] [cursor=pointer]
              - listitem [ref=e155]:
                - generic [ref=e156]:
                  - link "Audit Logs" [ref=e157] [cursor=pointer]:
                    - /url: /audit-logs/
                    - img [ref=e159]
                    - text: Audit Logs
                  - button "Toggle the collapsible sidebar category 'Audit Logs'" [ref=e161] [cursor=pointer]
              - listitem [ref=e162]:
                - generic [ref=e163]:
                  - link "Self-Hosted Palette" [ref=e164] [cursor=pointer]:
                    - /url: /enterprise-version/
                    - img [ref=e166]
                    - text: Self-Hosted Palette
                  - button "Toggle the collapsible sidebar category 'Self-Hosted Palette'" [ref=e168] [cursor=pointer]
              - listitem [ref=e169]:
                - generic [ref=e170]:
                  - link "Palette VerteX" [ref=e171] [cursor=pointer]:
                    - /url: /vertex/
                    - img [ref=e173]
                    - text: Palette VerteX
                  - button "Toggle the collapsible sidebar category 'Palette VerteX'" [ref=e175] [cursor=pointer]
              - listitem [ref=e176]:
                - generic [ref=e177]:
                  - link "Tenant Administration" [ref=e178] [cursor=pointer]:
                    - /url: /tenant-settings/
                    - img [ref=e180]
                    - text: Tenant Administration
                  - button "Toggle the collapsible sidebar category 'Tenant Administration'" [ref=e182] [cursor=pointer]
              - listitem [ref=e183]:
                - generic [ref=e184]:
                  - link "Automation" [ref=e185] [cursor=pointer]:
                    - /url: /automation/
                    - img [ref=e187]
                    - text: Automation
                  - button "Toggle the collapsible sidebar category 'Automation'" [ref=e189] [cursor=pointer]
              - listitem [ref=e190]:
                - generic [ref=e191]:
                  - link "Troubleshooting" [expanded] [ref=e192] [cursor=pointer]:
                    - /url: /troubleshooting/
                    - img [ref=e194]
                    - text: Troubleshooting
                  - button "Toggle the collapsible sidebar category 'Troubleshooting'" [ref=e196] [cursor=pointer]
                - list [ref=e197]:
                  - listitem [ref=e198]:
                    - link "Kubernetes Debugging" [ref=e199] [cursor=pointer]:
                      - /url: /troubleshooting/kubernetes-tips/
                  - listitem [ref=e200]:
                    - link "Automation" [ref=e201] [cursor=pointer]:
                      - /url: /troubleshooting/automation/
                  - listitem [ref=e202]:
                    - link "Cluster Deployment" [ref=e203] [cursor=pointer]:
                      - /url: /troubleshooting/cluster-deployment/
                  - listitem [ref=e204]:
                    - link "Nodes & Clusters" [ref=e205] [cursor=pointer]:
                      - /url: /troubleshooting/nodes/
                  - listitem [ref=e206]:
                    - link "Packs" [ref=e207] [cursor=pointer]:
                      - /url: /troubleshooting/pack-issues/
                  - listitem [ref=e208]:
                    - link "Palette Dev Engine" [ref=e209] [cursor=pointer]:
                      - /url: /troubleshooting/palette-dev-engine/
                  - listitem [ref=e210]:
                    - generic [ref=e211]:
                      - link "Edge" [ref=e212] [cursor=pointer]:
                        - /url: /troubleshooting/edge/
                      - button "Toggle the collapsible sidebar category 'Edge'" [ref=e213] [cursor=pointer]
                  - listitem [ref=e214]:
                    - link "Private Cloud Gateway" [ref=e215] [cursor=pointer]:
                      - /url: /troubleshooting/pcg/
                  - listitem [ref=e216]:
                    - link "Virtual Machine Orchestrator" [ref=e217] [cursor=pointer]:
                      - /url: /troubleshooting/vmo-issues/
                  - listitem [ref=e218]:
                    - link "Enterprise Install" [ref=e219] [cursor=pointer]:
                      - /url: /troubleshooting/enterprise-install/
                  - listitem [ref=e220]:
                    - link "Palette Upgrade" [ref=e221] [cursor=pointer]:
                      - /url: /troubleshooting/palette-upgrade/
                  - listitem [ref=e222]:
                    - link "Generate HAR Files" [ref=e223] [cursor=pointer]:
                      - /url: /troubleshooting/generate-har-files/
              - listitem [ref=e224]:
                - link "Glossary" [ref=e225] [cursor=pointer]:
                  - /url: /glossary-all/
                  - img [ref=e227]
                  - text: Glossary
              - listitem [ref=e229]:
                - generic [ref=e230]:
                  - link "Compliance & Legal" [ref=e231] [cursor=pointer]:
                    - /url: /legal-licenses/
                    - img [ref=e233]
                    - text: Compliance & Legal
                  - button "Toggle the collapsible sidebar category 'Compliance & Legal'" [ref=e235] [cursor=pointer]
              - listitem [ref=e236]:
                - button "Privacy Settings" [ref=e237] [cursor=pointer]:
                  - img [ref=e238]
                  - text: Privacy Settings
      - main [ref=e240]:
        - generic [ref=e242]:
          - generic [ref=e244]:
            - article [ref=e245]:
              - navigation "Breadcrumbs" [ref=e246]:
                - list [ref=e247]:
                  - listitem [ref=e248]:
                    - link "Home page" [ref=e249] [cursor=pointer]:
                      - /url: /
                      - img [ref=e250]
                  - listitem [ref=e252]:
                    - link "Troubleshooting" [ref=e253] [cursor=pointer]:
                      - /url: /troubleshooting/
                  - listitem [ref=e254]:
                    - generic [ref=e255]: Enterprise Install
              - generic [ref=e256]:
                - heading "Enterprise Install" [level=1] [ref=e258]
                - paragraph [ref=e259]: Refer to the following sections to troubleshoot errors encountered when installing an Enterprise Cluster.
                - heading "Scenario - VerteX Management Appliance Fails to Upgrade due to Stuck LINSTOR Satellite PodsDirect link to Scenario - VerteX Management Appliance Fails to Upgrade due to Stuck LINSTOR Satellite Pods" [level=2] [ref=e260]:
                  - text: Scenario - VerteX Management Appliance Fails to Upgrade due to Stuck LINSTOR Satellite Pods
                  - link "Direct link to Scenario - VerteX Management Appliance Fails to Upgrade due to Stuck LINSTOR Satellite Pods" [ref=e261] [cursor=pointer]:
                    - /url: "#scenario---vertex-management-appliance-fails-to-upgrade-due-to-stuck-linstor-satellite-pods"
                    - text: "#"
                - paragraph [ref=e262]:
                  - text: When attempting to upgrade the VerteX Management Appliance, the
                  - code [ref=e263]: linstor-satellite.*
                  - text: and
                  - code [ref=e264]: linstor-csi-node.*
                  - text: pods may become stuck, which causes the upgrade process to stall. This is because the
                  - code [ref=e265]: linstor-satellite.*
                  - text: pods may be using an incorrect
                  - link "Distributed Replicated Block Device (DRBD)" [ref=e266] [cursor=pointer]:
                    - /url: https://linbit.com/drbd-user-guide/drbd-guide-9_0-en/
                  - text: image for the
                  - code [ref=e267]: drbd-module-loader
                  - text: container.
                - paragraph [ref=e268]: To resolve this issue, you can check whether the pods are using an incorrect image and update them if necessary.
                - heading "Debug StepsDirect link to Debug Steps" [level=3] [ref=e269]:
                  - text: Debug Steps
                  - link "Direct link to Debug Steps" [ref=e270] [cursor=pointer]:
                    - /url: "#debug-steps"
                    - text: "#"
                - list [ref=e271]:
                  - listitem [ref=e272]:
                    - paragraph [ref=e273]:
                      - text: Log in to the Local UI of the leader node of your VerteX management cluster. By default, Local UI is accessible at
                      - code [ref=e274]: https://<node-ip>:5080
                      - text: . Replace
                      - code [ref=e275]: <node-ip>
                      - text: with the IP address of the leader node.
                  - listitem [ref=e276]:
                    - paragraph [ref=e277]:
                      - text: From the left main menu, click
                      - strong [ref=e278]: Cluster
                      - text: .
                  - listitem [ref=e279]:
                    - paragraph [ref=e280]:
                      - text: Under
                      - strong [ref=e281]: Environment
                      - text: ", download the"
                      - strong [ref=e282]: Admin Kubeconfig File
                      - text: by clicking on the
                      - code [ref=e283]: <cluster-name>.kubeconfig
                      - text: hyperlink.
                  - listitem [ref=e284]:
                    - paragraph [ref=e285]: Open a terminal session in an environment that has network access to the VerteX management cluster.
                  - listitem [ref=e286]:
                    - paragraph [ref=e287]:
                      - text: Issue the following command to set the
                      - code [ref=e288]: KUBECONFIG
                      - text: environment variable to the path of the kubeconfig file you downloaded in step 3.
                    - generic [ref=e290]:
                      - code [ref=e292]:
                        - generic [ref=e293]: export KUBECONFIG=<path-to-kubeconfig-file>
                      - button "Copy code to clipboard" [ref=e295] [cursor=pointer]:
                        - generic [ref=e296]:
                          - img [ref=e297]
                          - img [ref=e299]
                  - listitem [ref=e301]:
                    - paragraph [ref=e302]:
                      - text: Use the following command to check the status of these pods in the
                      - code [ref=e303]: piraeus-system
                      - text: namespace.
                    - generic [ref=e305]:
                      - code [ref=e307]:
                        - generic [ref=e308]: kubectl get pods --namespace piraeus-system
                      - button "Copy code to clipboard" [ref=e310] [cursor=pointer]:
                        - generic [ref=e311]:
                          - img [ref=e312]
                          - img [ref=e314]
                    - paragraph [ref=e316]:
                      - text: In the output, look for the status of the
                      - code [ref=e317]: linstor-satellite.*
                      - text: pods.
                    - generic [ref=e318]:
                      - generic [ref=e319]: Example output
                      - generic [ref=e320]:
                        - code [ref=e322]:
                          - generic [ref=e323]: NAME READY STATUS RESTARTS AGE
                          - generic [ref=e324]: ha-controller-2886l 1/1 Running 0 25h
                          - generic [ref=e325]: ha-controller-nnvqt 1/1 Running 1 (29m ago) 25h
                          - generic [ref=e326]: ha-controller-qhc26 1/1 Running 1 (36m ago) 25h
                          - generic [ref=e327]: linstor-controller-69b8ff6479-ccpzx 1/1 Running 0 31m
                          - generic [ref=e328]: linstor-csi-controller-78c8bc4d55-5gk2b 7/7 Running 4 (28m ago) 38m
                          - generic [ref=e329]: linstor-csi-node-dp8lm 0/3 Error 0 25h
                          - generic [ref=e330]: linstor-csi-node-r2hfv 0/3 Error 0 25h
                          - generic [ref=e331]: linstor-csi-node-tpt6h 3/3 Running 0 25h
                          - generic [ref=e332]: linstor-satellite.edge-1d3f3842cb0fdcef14b65cb510b5974f-5vkml 2/2 Running 0 25h
                          - generic [ref=e333]: linstor-satellite.edge-53583842350d90345a1f7251033cb228-8s7js 0/2 Init:CrashLoopBackOff 10 (2m54s ago) 26m
                          - generic [ref=e334]: linstor-satellite.edge-c0913842383ebd183d13d1458bb762c5-78q97 0/2 Init:CrashLoopBackOff 11 (3m46s ago) 33m
                          - generic [ref=e335]: piraeusoperator-piraeus-controller-manager-6f8988d598-b2v57 1/1 Running 1 (28m ago) 25h
                        - button "Toggle word wrap" [ref=e337] [cursor=pointer]:
                          - img [ref=e338]
                  - listitem [ref=e340]:
                    - paragraph [ref=e341]:
                      - text: If any of the
                      - code [ref=e342]: linstor-satellite.*
                      - text: pods are not in a
                      - strong [ref=e343]: Running
                      - text: state, use the following command to describe the pods. Replace
                      - code [ref=e344]: <pod-name>
                      - text: with the name of the LINSTOR satellite pod you want to inspect.
                    - generic [ref=e346]:
                      - code [ref=e348]:
                        - generic [ref=e349]: kubectl describe pod <pod-name> --namespace piraeus-system
                      - button "Copy code to clipboard" [ref=e351] [cursor=pointer]:
                        - generic [ref=e352]:
                          - img [ref=e353]
                          - img [ref=e355]
                    - paragraph [ref=e357]:
                      - text: Look for events indicating that the pod is attempting to use the
                      - code [ref=e358]: drbd9-jammy:v9.2.13
                      - text: image for the
                      - code [ref=e359]: drbd-module-loader
                      - text: container, such as the following example.
                    - generic [ref=e360]:
                      - generic [ref=e361]: Example output
                      - generic [ref=e362]:
                        - code [ref=e364]:
                          - generic [ref=e365]: ...
                          - generic [ref=e366]: "Events:"
                          - generic [ref=e367]: Type Reason Age From Message
                          - generic [ref=e368]: "---- ------ ---- ---- -------"
                          - generic [ref=e369]: Normal Scheduled 34m default-scheduler Successfully assigned piraeus-system/linstor-satellite.edge-c0913842383ebd183d13d1458bb762c5-78q97 to edge-c0913842383ebd183d13d1458bb762c5
                          - generic [ref=e370]: Warning BackOff 26m (x6 over 31m) kubelet Back-off restarting failed container drbd-module-loader in pod linstor-satellite.edge-c0913842383ebd183d13d1458bb762c5-78q97_piraeus-system(71ea7db5-cc2c-4585-b1f7-fcc19bf14891)
                          - generic [ref=e371]: Normal Pulled 26m (x5 over 34m) kubelet Container image "us-docker.pkg.dev/palette-images-fips/packs/piraeus-operator/2.8.1/drbd9-jammy:v9.2.13" already present on machine
                          - generic [ref=e372]: "Normal Created 26m (x5 over 34m) kubelet Created container: drbd-module-loader"
                          - generic [ref=e373]: Normal Started 26m (x5 over 34m) kubelet Started container drbd-module-loader
                          - generic [ref=e374]: Normal Pulled 5m58s (x7 over 25m) kubelet Container image "us-docker.pkg.dev/palette-images-fips/packs/piraeus-operator/2.8.1/drbd9-jammy:v9.2.13" already present on machine
                          - generic [ref=e375]: "Normal Created 5m58s (x7 over 25m) kubelet Created container: drbd-module-loader"
                          - generic [ref=e376]: Normal Started 5m58s (x7 over 25m) kubelet Started container drbd-module-loader
                          - generic [ref=e377]: Warning BackOff 3m41s (x53 over 23m) kubelet Back-off restarting failed container drbd-module-loader in pod linstor-satellite.edge-c0913842383ebd183d13d1458bb762c5-78q97_piraeus-system(71ea7db5-cc2c-4585-b1f7-fcc19bf14891)
                        - button "Toggle word wrap" [ref=e379] [cursor=pointer]:
                          - img [ref=e380]
                  - listitem [ref=e382]:
                    - paragraph [ref=e383]:
                      - text: If any of the
                      - code [ref=e384]: linstor-satellite.*
                      - text: pods are using the
                      - code [ref=e385]: drbd9-jammy:v9.2.13
                      - text: image, issue the following command to create a manifest that corrects the image reference for the
                      - code [ref=e386]: drbd-module-loader
                      - text: container.
                    - generic [ref=e388]:
                      - code [ref=e390]:
                        - generic [ref=e391]: kubectl apply --filename - <<EOF
                        - generic [ref=e392]: "apiVersion: piraeus.io/v1"
                        - generic [ref=e393]: "kind: LinstorSatelliteConfiguration"
                        - generic [ref=e394]: "metadata:"
                        - generic [ref=e395]: "name: custom-loader-image"
                        - generic [ref=e396]: "namespace: piraeus-system"
                        - generic [ref=e397]: "spec:"
                        - generic [ref=e398]: "podTemplate:"
                        - generic [ref=e399]: "spec:"
                        - generic [ref=e400]: "initContainers:"
                        - generic [ref=e401]: "- name: drbd-module-loader"
                        - generic [ref=e402]: "image: us-docker.pkg.dev/palette-images-fips/packs/piraeus-operator/2.8.1/dbrd-loader:v2.8.1"
                        - generic [ref=e403]: "imagePullPolicy: IfNotPresent"
                        - generic [ref=e404]: EOF
                      - generic [ref=e405]:
                        - button "Toggle word wrap" [ref=e406] [cursor=pointer]:
                          - img [ref=e407]
                        - button "Copy code to clipboard" [ref=e409] [cursor=pointer]:
                          - generic [ref=e410]:
                            - img [ref=e411]
                            - img [ref=e413]
                    - generic [ref=e415]:
                      - generic [ref=e416]: Expected output
                      - generic [ref=e417]:
                        - code [ref=e419]:
                          - generic [ref=e420]: linstorsatelliteconfiguration.piraeus.io/custom-loader-image created
                        - button "Toggle word wrap" [ref=e422] [cursor=pointer]:
                          - img [ref=e423]
                  - listitem [ref=e425]:
                    - paragraph [ref=e426]:
                      - text: Wait for the
                      - code [ref=e427]: linstor-satellite.*
                      - text: pods to be recreated with the new image.
                  - listitem [ref=e428]:
                    - paragraph [ref=e429]:
                      - text: Verify that the
                      - code [ref=e430]: drbd-module-loader
                      - text: container is using the new image by describing the
                      - code [ref=e431]: linstor-satellite.*
                      - text: pods. Replace
                      - code [ref=e432]: <pod-name>
                      - text: with the name of the pod you want to check. You may need to issue
                      - code [ref=e433]: kubectl get pods --namespace piraeus-system
                      - text: first as the pod names will have changed.
                    - generic [ref=e435]:
                      - code [ref=e437]:
                        - generic [ref=e438]: kubectl describe pods <pod-name> --namespace piraeus-system
                      - button "Copy code to clipboard" [ref=e440] [cursor=pointer]:
                        - generic [ref=e441]:
                          - img [ref=e442]
                          - img [ref=e444]
                    - paragraph [ref=e446]:
                      - text: Look for events indicating that the
                      - code [ref=e447]: drbd-module-loader
                      - text: container is now using the
                      - code [ref=e448]: dbrd-loader:v2.8.1
                      - text: image.
                    - generic [ref=e449]:
                      - generic [ref=e450]: Example output
                      - generic [ref=e451]:
                        - code [ref=e453]:
                          - generic [ref=e454]: ...
                          - generic [ref=e455]: "Events:"
                          - generic [ref=e456]: Type Reason Age From Message
                          - generic [ref=e457]: "---- ------ ---- ---- -------"
                          - generic [ref=e458]: Normal Scheduled 4m44s default-scheduler Successfully assigned piraeus-system/linstor-satellite.edge-c0913842383ebd183d13d1458bb762c5-wfd4q to edge-c0913842383ebd183d13d1458bb762c5
                          - generic [ref=e459]: Normal Pulled 4m45s kubelet Container image "us-docker.pkg.dev/palette-images-fips/packs/piraeus-operator/2.8.1/dbrd-loader:v2.8.1" already present on machine
                          - generic [ref=e460]: "Normal Created 4m45s kubelet Created container: drbd-module-loader"
                          - generic [ref=e461]: Normal Started 4m44s kubelet Started container drbd-module-loader
                        - button "Toggle word wrap" [ref=e463] [cursor=pointer]:
                          - img [ref=e464]
                - paragraph [ref=e466]: The VerteX Management Appliance upgrade process will then continue. You can monitor the upgrade progress in Local UI.
                - heading "Scenario - Palette/VerteX Management Appliance Installation Stalled due to piraeus-operator Pack in Error StateDirect link to Scenario - Palette/VerteX Management Appliance Installation Stalled due to piraeus-operator Pack in Error State" [level=2] [ref=e467]:
                  - text: Scenario - Palette/VerteX Management Appliance Installation Stalled due to piraeus-operator Pack in Error State
                  - link "Direct link to Scenario - Palette/VerteX Management Appliance Installation Stalled due to piraeus-operator Pack in Error State" [ref=e468] [cursor=pointer]:
                    - /url: "#scenario---palettevertex-management-appliance-installation-stalled-due-to-piraeus-operator-pack-in-error-state"
                    - text: "#"
                - paragraph [ref=e469]:
                  - text: During the installation of the
                  - link "Palette" [ref=e470] [cursor=pointer]:
                    - /url: /enterprise-version/install-palette/palette-management-appliance/
                  - text: or
                  - link "VerteX Management Appliance" [ref=e471] [cursor=pointer]:
                    - /url: /vertex/install-palette-vertex/vertex-management-appliance/
                  - text: ", the"
                  - code [ref=e472]: piraeus-operator
                  - text: pack can enter an error state in Local UI. This can be caused by stalled creation of Kubernetes secrets in the
                  - code [ref=e473]: piraeus-system
                  - text: namespace and can prevent the installation from completing successfully.
                - paragraph [ref=e474]:
                  - text: To resolve, you can manually delete any secrets in the
                  - code [ref=e475]: piraeus-system
                  - text: namespace that have a
                  - code [ref=e476]: pending-install
                  - text: status label. This will allow the
                  - code [ref=e477]: piraeus-operator
                  - text: pack to complete its deployment and the Palette/VerteX Management Appliance installation to proceed.
                - heading "Debug StepsDirect link to Debug Steps" [level=3] [ref=e478]:
                  - text: Debug Steps
                  - link "Direct link to Debug Steps" [ref=e479] [cursor=pointer]:
                    - /url: "#debug-steps-1"
                    - text: "#"
                - list [ref=e480]:
                  - listitem [ref=e481]:
                    - paragraph [ref=e482]:
                      - text: Log in to the Local UI of the leader node of your Palette/VerteX management cluster. By default, Local UI is accessible at
                      - code [ref=e483]: https://<node-ip>:5080
                      - text: . Replace
                      - code [ref=e484]: <node-ip>
                      - text: with the IP address of the leader node.
                  - listitem [ref=e485]:
                    - paragraph [ref=e486]:
                      - text: From the left main menu, click
                      - strong [ref=e487]: Cluster
                      - text: .
                  - listitem [ref=e488]:
                    - paragraph [ref=e489]:
                      - text: Download the
                      - strong [ref=e490]: Admin Kubeconfig File
                      - text: by clicking on the
                      - code [ref=e491]: <cluster-name>.kubeconfig
                      - text: hyperlink.
                  - listitem [ref=e492]:
                    - paragraph [ref=e493]: Open a terminal session in an environment that has network access to the Palette/VerteX management cluster.
                  - listitem [ref=e494]:
                    - paragraph [ref=e495]:
                      - text: Issue the following command to set the
                      - code [ref=e496]: KUBECONFIG
                      - text: environment variable to the path of the kubeconfig file you downloaded in step 3.
                    - generic [ref=e498]:
                      - code [ref=e500]:
                        - generic [ref=e501]: export KUBECONFIG=<path-to-kubeconfig-file>
                      - button "Copy code to clipboard" [ref=e503] [cursor=pointer]:
                        - generic [ref=e504]:
                          - img [ref=e505]
                          - img [ref=e507]
                  - listitem [ref=e509]:
                    - paragraph [ref=e510]:
                      - text: Use
                      - code [ref=e511]: kubectl
                      - text: to list all secrets in the
                      - code [ref=e512]: piraeus-system
                      - text: namespace.
                    - generic [ref=e514]:
                      - code [ref=e516]:
                        - generic [ref=e517]: kubectl get secrets --namespace piraeus-system
                      - button "Copy code to clipboard" [ref=e519] [cursor=pointer]:
                        - generic [ref=e520]:
                          - img [ref=e521]
                          - img [ref=e523]
                    - generic [ref=e525]:
                      - generic [ref=e526]: Example output
                      - generic [ref=e527]:
                        - code [ref=e529]:
                          - generic [ref=e530]: NAME TYPE DATA AGE
                          - generic [ref=e531]: sh.helm.release.v1.piraeusoperator-linstor-gui.v1 helm.sh/release.v1 1 1h
                          - generic [ref=e532]: sh.helm.release.v1.piraeusoperator-linstor-gui.v2 helm.sh/release.v1 1 1h
                          - generic [ref=e533]: sh.helm.release.v1.piraeusoperator-piraeus-cluster.v1 helm.sh/release.v1 1 1h
                          - generic [ref=e534]: sh.helm.release.v1.piraeusoperator-piraeus-dashboard.v1 helm.sh/release.v1 1 1h
                          - generic [ref=e535]: sh.helm.release.v1.piraeusoperator-piraeus.v1 helm.sh/release.v1 1 1h
                          - generic [ref=e536]: sh.helm.release.v1.piraeusoperator-piraeus.v2 helm.sh/release.v1 1 1h
                        - button "Toggle word wrap" [ref=e538] [cursor=pointer]:
                          - img [ref=e539]
                  - listitem [ref=e541]:
                    - paragraph [ref=e542]:
                      - text: Use the following command to check each secret for a
                      - code [ref=e543]: pending-install
                      - text: status label. Replace
                      - code [ref=e544]: <secret-name>
                      - text: with the name of the secret you want to check.
                    - generic [ref=e546]:
                      - code [ref=e548]:
                        - generic [ref=e549]: kubectl describe secrets <secret-name> --namespace piraeus-system
                      - generic [ref=e550]:
                        - button "Toggle word wrap" [ref=e551] [cursor=pointer]:
                          - img [ref=e552]
                        - button "Copy code to clipboard" [ref=e554] [cursor=pointer]:
                          - generic [ref=e555]:
                            - img [ref=e556]
                            - img [ref=e558]
                    - generic [ref=e560]:
                      - generic [ref=e561]: Example output
                      - generic [ref=e562]:
                        - code [ref=e564]:
                          - generic [ref=e565]: "Name: sh.helm.release.v1.piraeusoperator-piraeus-cluster.v1"
                          - generic [ref=e566]: "Namespace: piraeus-system"
                          - generic [ref=e567]: "Labels: modifiedAt=0123456789"
                          - generic [ref=e568]: name=piraeusoperator-piraeus-cluster
                          - generic [ref=e569]: owner=helm
                          - generic [ref=e570]: status=pending-install
                          - generic [ref=e571]: version=1
                          - generic [ref=e572]: "Annotations: <none>"
                          - generic [ref=e573]: "Type: helm.sh/release.v1"
                          - generic [ref=e574]: Data
                          - generic [ref=e575]: ====
                          - generic [ref=e576]: "release: 7156 bytes"
                        - button "Toggle word wrap" [ref=e578] [cursor=pointer]:
                          - img [ref=e579]
                    - generic [ref=e581]:
                      - generic [ref=e582]:
                        - img [ref=e584]
                        - text: tip
                      - generic [ref=e586]:
                        - paragraph [ref=e587]:
                          - text: You can also try using the following command to filter for secrets with a
                          - code [ref=e588]: pending-install
                          - text: status label.
                        - generic [ref=e590]:
                          - code [ref=e592]:
                            - generic [ref=e593]: kubectl describe secrets --namespace piraeus-system --selector status=pending-install
                          - generic [ref=e594]:
                            - button "Toggle word wrap" [ref=e595] [cursor=pointer]:
                              - img [ref=e596]
                            - button "Copy code to clipboard" [ref=e598] [cursor=pointer]:
                              - generic [ref=e599]:
                                - img [ref=e600]
                                - img [ref=e602]
                  - listitem [ref=e604]:
                    - paragraph [ref=e605]:
                      - text: If you find any secrets with this label, delete them using the following command. Replace
                      - code [ref=e606]: <secret-name>
                      - text: with the name of the secret you want to delete.
                    - generic [ref=e608]:
                      - code [ref=e610]:
                        - generic [ref=e611]: kubectl delete secrets <secret-name> --namespace piraeus-system
                      - button "Copy code to clipboard" [ref=e613] [cursor=pointer]:
                        - generic [ref=e614]:
                          - img [ref=e615]
                          - img [ref=e617]
                  - listitem [ref=e619]:
                    - paragraph [ref=e620]:
                      - text: After deleting any secrets with a
                      - code [ref=e621]: pending-install
                      - text: status label, wait for the
                      - code [ref=e622]: piraeus-operator
                      - text: pack to enter a
                      - strong [ref=e623]: Running
                      - text: status in Local UI. The installation of Palette/VerteX Management Appliance should then proceed successfully.
                - heading "Scenario - Unexpected Logouts in Tenant Console After Palette/VerteX Management Appliance InstallationDirect link to Scenario - Unexpected Logouts in Tenant Console After Palette/VerteX Management Appliance Installation" [level=2] [ref=e624]:
                  - text: Scenario - Unexpected Logouts in Tenant Console After Palette/VerteX Management Appliance Installation
                  - link "Direct link to Scenario - Unexpected Logouts in Tenant Console After Palette/VerteX Management Appliance Installation" [ref=e625] [cursor=pointer]:
                    - /url: "#scenario---unexpected-logouts-in-tenant-console-after-palettevertex-management-appliance-installation"
                    - text: "#"
                - paragraph [ref=e626]:
                  - text: After installing self-hosted Palette/Palette VerteX using the
                  - link "Palette Management Appliance" [ref=e627] [cursor=pointer]:
                    - /url: /enterprise-version/install-palette/palette-management-appliance/
                  - text: or
                  - link "VerteX Management Appliance" [ref=e628] [cursor=pointer]:
                    - /url: /vertex/install-palette-vertex/vertex-management-appliance/
                  - text: ", you may experience unexpected logouts when using the tenant console. This can be caused by a time skew on your Palette/VerteX management cluster nodes, which leads to authentication issues."
                - paragraph [ref=e629]: To verify the system time, open a terminal session on each node in your Palette/VerteX management cluster and issue the following command to check the system time.
                - generic [ref=e631]:
                  - code [ref=e633]:
                    - generic [ref=e634]: timedatectl
                  - button "Copy code to clipboard" [ref=e636] [cursor=pointer]:
                    - generic [ref=e637]:
                      - img [ref=e638]
                      - img [ref=e640]
                - paragraph [ref=e642]:
                  - text: An output similar to the following will be displayed. A time skew is indicated by the
                  - code [ref=e643]: Local time
                  - text: and
                  - code [ref=e644]: Universal time
                  - text: values being different across the nodes.
                - generic [ref=e645]:
                  - tablist [ref=e646]:
                    - tab "Example output from node 1" [selected] [ref=e647] [cursor=pointer]
                    - tab "Example output from node 2" [ref=e648] [cursor=pointer]
                    - tab "Example output from node 3" [ref=e649] [cursor=pointer]
                  - tabpanel [ref=e651]:
                    - code [ref=e655]:
                      - generic [ref=e656]: "Local time: Fri 2025-07-11 09:41:42 UTC"
                      - generic [ref=e657]: "Universal time: Fri 2025-07-11 09:41:42 UTC"
                      - generic [ref=e658]: "RTC time: Fri 2025-07-11 09:41:42"
                      - generic [ref=e659]: "Time zone: UTC (UTC, +0000)"
                      - generic [ref=e660]: "System clock synchronized: no"
                      - generic [ref=e661]: "NTP service: active"
                      - generic [ref=e662]: "RTC in local TZ: no"
                - paragraph [ref=e663]:
                  - text: You may also notice errors in the
                  - code [ref=e664]: auth-*
                  - text: pod logs in the
                  - code [ref=e665]: hubble-system
                  - text: namespace similar to the following.
                - generic [ref=e666]:
                  - generic [ref=e667]: Example command to extract logs from auth pod
                  - generic [ref=e668]:
                    - code [ref=e670]:
                      - generic [ref=e671]: kubectl logs --namespace hubble-system auth-5f95c77cb-49jtv
                    - button "Copy code to clipboard" [ref=e673] [cursor=pointer]:
                      - generic [ref=e674]:
                        - img [ref=e675]
                        - img [ref=e677]
                - generic [ref=e679]:
                  - generic [ref=e680]: Example output
                  - generic [ref=e681]:
                    - code [ref=e683]:
                      - generic [ref=e684]: auth-5f95c77cb-49jtv Jul 7 17:22:46.378 ERROR [hubble_token.go:426/hucontext.getClaimsFromToken] [Unable to parse the token 'abcd...1234' due to Token used before
                      - generic [ref=e685]: issued]
                      - generic [ref=e686]: auth-5f95c77cb-49jtv Jul 7 17:22:46.378 ERROR [auth_service.go:282/service.(*AuthService).Logout] [provided token 'xxxxx' is not valid Token used before issued]
                    - button "Toggle word wrap" [ref=e688] [cursor=pointer]:
                      - img [ref=e689]
                - paragraph [ref=e691]: This indicates that the system time on your Palette/VerteX management cluster nodes is not synchronized with a Network Time Protocol (NTP) server. To resolve this issue, you can configure an NTP server in the Palette/VerteX management cluster settings.
                - heading "Debug StepsDirect link to Debug Steps" [level=3] [ref=e692]:
                  - text: Debug Steps
                  - link "Direct link to Debug Steps" [ref=e693] [cursor=pointer]:
                    - /url: "#debug-steps-2"
                    - text: "#"
                - list [ref=e694]:
                  - listitem [ref=e695]:
                    - paragraph [ref=e696]: Log in to Local UI of the leader node of your Palette/VerteX management cluster.
                  - listitem [ref=e697]:
                    - paragraph [ref=e698]:
                      - text: On the left main menu, click
                      - strong [ref=e699]: Cluster
                      - text: .
                  - listitem [ref=e700]:
                    - paragraph [ref=e701]:
                      - text: Click
                      - strong [ref=e702]: Actions
                      - text: in the top-right corner and select
                      - strong [ref=e703]: Cluster Settings
                      - text: from the drop-down menu.
                  - listitem [ref=e704]:
                    - paragraph [ref=e705]:
                      - text: In the
                      - strong [ref=e706]: Network Time Protocol (NTP) (Optional)
                      - text: field, enter the NTP server that you want to use for your Palette/VerteX management cluster. For example, you can use
                      - code [ref=e707]: pool.ntp.org
                      - text: or any other NTP server that is accessible from your Palette/VerteX management cluster nodes.
                  - listitem [ref=e708]:
                    - paragraph [ref=e709]:
                      - text: Click
                      - strong [ref=e710]: Save Changes
                      - text: to apply the changes.
                - heading "Scenario - IP Pool Exhausted During Airgapped UpgradeDirect link to Scenario - IP Pool Exhausted During Airgapped Upgrade" [level=2] [ref=e711]:
                  - text: Scenario - IP Pool Exhausted During Airgapped Upgrade
                  - link "Direct link to Scenario - IP Pool Exhausted During Airgapped Upgrade" [ref=e712] [cursor=pointer]:
                    - /url: "#scenario---ip-pool-exhausted-during-airgapped-upgrade"
                    - text: "#"
                - paragraph [ref=e713]:
                  - text: When upgrading a self-hosted airgapped cluster to version 4.6.32, the IPAM controller may report an
                  - code [ref=e714]: Exhausted IP Pools
                  - text: error despite having available IP addresses. This is due to a race condition in CAPV version 1.12.0, which may lead to an orphaned IP claim when its associated VMware vSphere machine is deleted during the control plane rollout. When this occurs, the IP claim and IP address are not cleaned up, keeping the IP reserved and exhausting the IP pool. To complete the upgrade, you must manually release the orphaned claim holding the IP address.
                - heading "Debug StepsDirect link to Debug Steps" [level=3] [ref=e715]:
                  - text: Debug Steps
                  - link "Direct link to Debug Steps" [ref=e716] [cursor=pointer]:
                    - /url: "#debug-steps-3"
                    - text: "#"
                - list [ref=e717]:
                  - listitem [ref=e718]:
                    - paragraph [ref=e719]:
                      - text: Open up a terminal session in an environment that has network access to the cluster. Refer to
                      - link "Access Cluster with CLI" [ref=e720] [cursor=pointer]:
                        - /url: /clusters/cluster-management/palette-webctl/
                      - text: for additional guidance.
                  - listitem [ref=e721]:
                    - paragraph [ref=e722]: Issue the following command to list the IP addresses of the current nodes in the cluster.
                    - generic [ref=e723]:
                      - generic [ref=e724]:
                        - img [ref=e726]
                        - text: info
                      - paragraph [ref=e729]: The airgap support VM is not listed, only the nodes in the cluster.
                    - generic [ref=e731]:
                      - code [ref=e733]:
                        - generic [ref=e734]: kubectl get nodes \
                        - generic [ref=e735]: "--output jsonpath='{range .items[*]}{.status.addresses[?(@.type==\"InternalIP\")].address}{\"\\n\"}{end}'"
                      - generic [ref=e736]:
                        - button "Toggle word wrap" [ref=e737] [cursor=pointer]:
                          - img [ref=e738]
                        - button "Copy code to clipboard" [ref=e740] [cursor=pointer]:
                          - generic [ref=e741]:
                            - img [ref=e742]
                            - img [ref=e744]
                    - generic [ref=e746]:
                      - generic [ref=e747]: Example output
                      - code [ref=e750]:
                        - generic [ref=e751]: 10.10.227.13
                        - generic [ref=e752]: 10.10.227.11
                        - generic [ref=e753]: 10.10.227.14
                  - listitem [ref=e754]:
                    - paragraph [ref=e755]:
                      - text: List all IP claims in the
                      - code [ref=e756]: spectro-mgmt
                      - text: namespace. The base
                      - code [ref=e757]: spectro-mgmt-cluster
                      - text: claim belongs to the airgap support VM.
                    - generic [ref=e759]:
                      - code [ref=e761]:
                        - generic [ref=e762]: kubectl get ipclaim --namespace spectro-mgmt
                      - button "Copy code to clipboard" [ref=e764] [cursor=pointer]:
                        - generic [ref=e765]:
                          - img [ref=e766]
                          - img [ref=e768]
                    - generic [ref=e770]:
                      - generic [ref=e771]: Example output
                      - code [ref=e774]:
                        - generic [ref=e775]: NAMESPACE NAME AGE
                        - generic [ref=e776]: spectro-mgmt spectro-mgmt-cluster 29h
                        - generic [ref=e777]: spectro-mgmt spectro-mgmt-cluster-cp-43978-dw858-0 14h
                        - generic [ref=e778]: spectro-mgmt spectro-mgmt-cluster-cp-43978-p2bpg-0 29h
                        - generic [ref=e779]: spectro-mgmt spectro-mgmt-cluster-cp-dt44d-0 14h
                        - generic [ref=e780]: spectro-mgmt spectro-mgmt-cluster-cp-qx4vw-0 6m
                  - listitem [ref=e781]:
                    - paragraph [ref=e782]: Map each claim to its allocated IP.
                    - generic [ref=e784]:
                      - code [ref=e786]:
                        - generic [ref=e787]: kubectl get ipclaim --namespace spectro-mgmt \
                        - generic [ref=e788]: "--output jsonpath='{range .items[*]}{.metadata.name}{\"\\t\"}{.status.address.name}{\"\\n\"}{end}'"
                      - generic [ref=e789]:
                        - button "Toggle word wrap" [ref=e790] [cursor=pointer]:
                          - img [ref=e791]
                        - button "Copy code to clipboard" [ref=e793] [cursor=pointer]:
                          - generic [ref=e794]:
                            - img [ref=e795]
                            - img [ref=e797]
                    - paragraph [ref=e799]:
                      - text: Compare the IP addresses of the nodes in the cluster to the IP addresses in the claim list, ignoring the
                      - code [ref=e800]: spectro-mgmt-cluster
                      - text: claim of the airgap support VM. The IP that appears in the claim list that does not appear in the node list is the orphaned claim. In the below example, the orphaned claim is
                      - code [ref=e801]: spectro-mgmt-cluster-cp-qx4vw-0
                      - text: ", which is tied to the IP address 10.10.227.12 ("
                      - code [ref=e802]: spectro-mgmt-cluster-cluster1-10-10-227-12
                      - text: ).
                    - generic [ref=e803]:
                      - generic [ref=e804]: Example output
                      - generic [ref=e805]:
                        - code [ref=e807]:
                          - generic [ref=e808]: spectro-mgmt-cluster spectro-mgmt-cluster-cluster1-10-10-227-10
                          - generic [ref=e809]: spectro-mgmt-cluster-cp-43978-dw858-0 spectro-mgmt-cluster-cluster1-10-10-227-14
                          - generic [ref=e810]: spectro-mgmt-cluster-cp-43978-p2bpg-0 spectro-mgmt-cluster-cluster1-10-10-227-13
                          - generic [ref=e811]: spectro-mgmt-cluster-cp-dt44d-0 spectro-mgmt-cluster-cluster1-10-10-227-11
                          - generic [ref=e812]: spectro-mgmt-cluster-cp-qx4vw-0 spectro-mgmt-cluster-cluster1-10-10-227-12
                        - button "Toggle word wrap" [ref=e814] [cursor=pointer]:
                          - img [ref=e815]
                  - listitem [ref=e817]:
                    - paragraph [ref=e818]: Delete the orphaned claim.
                    - generic [ref=e820]:
                      - code [ref=e822]:
                        - generic [ref=e823]: kubectl delete ipclaim --namespace spectro-mgmt <claim-name>
                      - button "Copy code to clipboard" [ref=e825] [cursor=pointer]:
                        - generic [ref=e826]:
                          - img [ref=e827]
                          - img [ref=e829]
                    - generic [ref=e831]:
                      - generic [ref=e832]: Example command
                      - generic [ref=e833]:
                        - code [ref=e835]:
                          - generic [ref=e836]: kubectl delete ipclaim --namespace spectro-mgmt spectro-mgmt-cluster-cp-qx4vw-0
                        - button "Toggle word wrap" [ref=e838] [cursor=pointer]:
                          - img [ref=e839]
                  - listitem [ref=e841]:
                    - paragraph [ref=e842]:
                      - text: Re-run the upgrade. For guidance, refer to the applicable upgrade guide for your airgapped instance of
                      - link "Palette" [ref=e843] [cursor=pointer]:
                        - /url: /enterprise-version/upgrade/upgrade-vmware/airgap/
                      - text: or
                      - link "VerteX" [ref=e844] [cursor=pointer]:
                        - /url: /vertex/upgrade/upgrade-vmware/airgap/
                      - text: .
                - heading "Scenario - Self-Linking ErrorDirect link to Scenario - Self-Linking Error" [level=2] [ref=e845]:
                  - text: Scenario - Self-Linking Error
                  - link "Direct link to Scenario - Self-Linking Error" [ref=e846] [cursor=pointer]:
                    - /url: "#scenario---self-linking-error"
                    - text: "#"
                - paragraph [ref=e847]: When installing an Enterprise Cluster, you may encounter an error stating that the enterprise cluster is unable to self-link. Self-linking is the process of Palette or VerteX becoming aware of the Kubernetes cluster it is installed on. This error may occur if the self-hosted pack registry specified in the installation is missing the Certificate Authority (CA). This issue can be resolved by adding the CA to the pack registry.
                - heading "Debug StepsDirect link to Debug Steps" [level=3] [ref=e848]:
                  - text: Debug Steps
                  - link "Direct link to Debug Steps" [ref=e849] [cursor=pointer]:
                    - /url: "#debug-steps-4"
                    - text: "#"
                - list [ref=e850]:
                  - listitem [ref=e851]:
                    - paragraph [ref=e852]: Log in to the pack registry server that you specified in the Palette or VerteX installation.
                  - listitem [ref=e853]:
                    - paragraph [ref=e854]:
                      - text: Download the CA certificate from the pack registry server. Different OCI registries have different methods for downloading the CA certificate. For Harbor, check out the
                      - link "Download the Harbor Certificate" [ref=e855] [cursor=pointer]:
                        - /url: https://goharbor.io/docs/1.10/working-with-projects/working-with-images/pulling-pushing-images/#download-the-harbor-certificate
                      - text: guide.
                  - listitem [ref=e856]:
                    - paragraph [ref=e857]:
                      - text: Log in to the system console. Refer to
                      - link "Access Palette system console" [ref=e858] [cursor=pointer]:
                        - /url: /enterprise-version/system-management/#access-the-system-console
                      - text: or
                      - link "Access Vertex system console" [ref=e859] [cursor=pointer]:
                        - /url: /vertex/system-management/#access-the-system-console
                      - text: for additional guidance.
                  - listitem [ref=e860]:
                    - paragraph [ref=e861]:
                      - text: From the left navigation menu, select
                      - strong [ref=e862]: Administration
                      - text: and click on the
                      - strong [ref=e863]: Pack Registries
                      - text: tab.
                  - listitem [ref=e864]:
                    - paragraph [ref=e865]:
                      - text: Click on the
                      - strong [ref=e866]: three-dot Menu
                      - text: icon for the pack registry that you specified in the installation and select
                      - strong [ref=e867]: Edit
                      - text: .
                  - listitem [ref=e868]:
                    - paragraph [ref=e869]:
                      - text: Click on the
                      - strong [ref=e870]: Upload file
                      - text: button and upload the CA certificate that you downloaded in step 2.
                  - listitem [ref=e871]:
                    - paragraph [ref=e872]:
                      - text: Check the box
                      - strong [ref=e873]: Insecure Skip TLS Verify
                      - text: and click on
                      - strong [ref=e874]: Confirm
                      - text: .
                - paragraph [ref=e875]:
                  - img "A pack registry configuration screen." [ref=e876]
                - paragraph [ref=e877]:
                  - text: After a few moments, a system profile will be created and Palette or VerteX will be able to self-link successfully. If you continue to encounter issues, contact our support team by emailing
                  - link "support@spectrocloud.com" [ref=e878] [cursor=pointer]:
                    - /url: mailto:support@spectrocloud.com
                  - text: so that we can provide you with further guidance.
                - heading "Scenario - Enterprise Backup StuckDirect link to Scenario - Enterprise Backup Stuck" [level=2] [ref=e879]:
                  - text: Scenario - Enterprise Backup Stuck
                  - link "Direct link to Scenario - Enterprise Backup Stuck" [ref=e880] [cursor=pointer]:
                    - /url: "#scenario---enterprise-backup-stuck"
                    - text: "#"
                - paragraph [ref=e881]: In the scenario where an enterprise backup is stuck, a restart of the management pod may resolve the issue. Use the following steps to restart the management pod.
                - heading "Debug StepsDirect link to Debug Steps" [level=3] [ref=e882]:
                  - text: Debug Steps
                  - link "Direct link to Debug Steps" [ref=e883] [cursor=pointer]:
                    - /url: "#debug-steps-5"
                    - text: "#"
                - list [ref=e884]:
                  - listitem [ref=e885]:
                    - paragraph [ref=e886]:
                      - text: Open up a terminal session in an environment that has network access to the Kubernetes cluster. Refer to the
                      - link "Access Cluster with CLI" [ref=e887] [cursor=pointer]:
                        - /url: /clusters/cluster-management/palette-webctl/
                      - text: for additional guidance.
                  - listitem [ref=e888]:
                    - paragraph [ref=e889]:
                      - text: Identify the
                      - code [ref=e890]: mgmt
                      - text: pod in the
                      - code [ref=e891]: hubble-system
                      - text: namespace. Use the following command to list all pods in the
                      - code [ref=e892]: hubble-system
                      - text: namespace and filter for the
                      - code [ref=e893]: mgmt
                      - text: pod.
                    - generic [ref=e895]:
                      - code [ref=e897]:
                        - generic [ref=e898]: kubectl get pods --namespace hubble-system | grep mgmt
                      - button "Copy code to clipboard" [ref=e900] [cursor=pointer]:
                        - generic [ref=e901]:
                          - img [ref=e902]
                          - img [ref=e904]
                    - generic [ref=e907]:
                      - code [ref=e909]:
                        - generic [ref=e910]: mgmt-f7f97f4fd-lds69 1/1 Running 0 45m
                      - button "Toggle word wrap" [ref=e912] [cursor=pointer]:
                        - img [ref=e913]
                  - listitem [ref=e915]:
                    - paragraph [ref=e916]:
                      - text: Restart the
                      - code [ref=e917]: mgmt
                      - text: pod by deleting it. Use the following command to delete the
                      - code [ref=e918]: mgmt
                      - text: pod. Replace
                      - code [ref=e919]: <mgmt-pod-name>
                      - text: with the actual name of the
                      - code [ref=e920]: mgmt
                      - text: pod that you identified in step 2.
                    - generic [ref=e922]:
                      - code [ref=e924]:
                        - generic [ref=e925]: kubectl delete pod <mgmt-pod-name> --namespace hubble-system
                      - button "Copy code to clipboard" [ref=e927] [cursor=pointer]:
                        - generic [ref=e928]:
                          - img [ref=e929]
                          - img [ref=e931]
                    - code [ref=e936]:
                      - generic [ref=e937]: pod "mgmt-f7f97f4fd-lds69" deleted
                - heading "Scenario - Non-Unique vSphere CNS MappingDirect link to Scenario - Non-Unique vSphere CNS Mapping" [level=2] [ref=e938]:
                  - text: Scenario - Non-Unique vSphere CNS Mapping
                  - link "Direct link to Scenario - Non-Unique vSphere CNS Mapping" [ref=e939] [cursor=pointer]:
                    - /url: "#scenario---non-unique-vsphere-cns-mapping"
                    - text: "#"
                - paragraph [ref=e940]: In Palette and VerteX releases 4.4.8 and earlier, Persistent Volume Claims (PVCs) metadata do not use a unique identifier for self-hosted Palette clusters. This causes incorrect Cloud Native Storage (CNS) mappings in vSphere, potentially leading to issues during node operations and upgrades.
                - paragraph [ref=e941]: This issue is resolved in Palette and VerteX releases starting with 4.4.14. However, upgrading to 4.4.14 will not automatically resolve this issue. If you have self-hosted instances of Palette in your vSphere environment older than 4.4.14, you should execute the following utility script manually to make the CNS mapping unique for the associated PVC.
                - heading "Debug StepsDirect link to Debug Steps" [level=3] [ref=e942]:
                  - text: Debug Steps
                  - link "Direct link to Debug Steps" [ref=e943] [cursor=pointer]:
                    - /url: "#debug-steps-6"
                    - text: "#"
                - list [ref=e944]:
                  - listitem [ref=e945]:
                    - paragraph [ref=e946]:
                      - text: Ensure your machine has network access to your self-hosted Palette instance with
                      - code [ref=e947]: kubectl
                      - text: . Alternatively, establish an SSH connection to a machine where you can access your self-hosted Palette instance with
                      - code [ref=e948]: kubectl
                      - text: .
                  - listitem [ref=e949]:
                    - paragraph [ref=e950]: Log in to your self-hosted Palette instance System Console.
                  - listitem [ref=e951]:
                    - paragraph [ref=e952]:
                      - text: In the
                      - strong [ref=e953]: Main Menu
                      - text: ", click"
                      - strong [ref=e954]: Enterprise Cluster
                      - text: .
                  - listitem [ref=e955]:
                    - paragraph [ref=e956]:
                      - text: In the cluster details page, scroll down to the
                      - strong [ref=e957]: Kubernetes Config File
                      - text: field and download the kubeconfig file.
                  - listitem [ref=e958]:
                    - paragraph [ref=e959]: Issue the following command to download the utility script.
                    - generic [ref=e961]:
                      - code [ref=e963]:
                        - generic [ref=e964]: curl --output csi-helper https://software.spectrocloud.com/tools/csi-helper/csi-helper
                      - generic [ref=e965]:
                        - button "Toggle word wrap" [ref=e966] [cursor=pointer]:
                          - img [ref=e967]
                        - button "Copy code to clipboard" [ref=e969] [cursor=pointer]:
                          - generic [ref=e970]:
                            - img [ref=e971]
                            - img [ref=e973]
                  - listitem [ref=e975]:
                    - paragraph [ref=e976]: Adjust the permission of the script.
                    - generic [ref=e978]:
                      - code [ref=e980]:
                        - generic [ref=e981]: chmod +x csi-helper
                      - button "Copy code to clipboard" [ref=e983] [cursor=pointer]:
                        - generic [ref=e984]:
                          - img [ref=e985]
                          - img [ref=e987]
                  - listitem [ref=e989]:
                    - paragraph [ref=e990]: Issue the following command to execute the utility script. Replace the placeholder with the path to your kubeconfig file.
                    - generic [ref=e992]:
                      - code [ref=e994]:
                        - generic [ref=e995]: ./csi-helper --kubeconfig=<PATH_TO_KUBECONFIG>
                      - button "Copy code to clipboard" [ref=e997] [cursor=pointer]:
                        - generic [ref=e998]:
                          - img [ref=e999]
                          - img [ref=e1001]
                  - listitem [ref=e1003]:
                    - paragraph [ref=e1004]: Issue the following command to verify that the script has updated the cluster ID.
                    - generic [ref=e1006]:
                      - code [ref=e1008]:
                        - generic [ref=e1009]: kubectl describe configmap vsphere-cloud-config --namespace=kube-system
                      - generic [ref=e1010]:
                        - button "Toggle word wrap" [ref=e1011] [cursor=pointer]:
                          - img [ref=e1012]
                        - button "Copy code to clipboard" [ref=e1014] [cursor=pointer]:
                          - generic [ref=e1015]:
                            - img [ref=e1016]
                            - img [ref=e1018]
                    - paragraph [ref=e1020]:
                      - text: If the update is successful, the cluster ID in the ConfigMap will have a unique ID assigned instead of
                      - code [ref=e1021]: spectro-mgmt/spectro-mgmt-cluster
                      - text: .
                    - code [ref=e1025]:
                      - generic [ref=e1026]: "Name: vsphere-cloud-config"
                      - generic [ref=e1027]: "Namespace: kube-system"
                      - generic [ref=e1028]: "Labels: component=cloud-controller-manager"
                      - generic [ref=e1029]: vsphere-cpi-infra=config
                      - generic [ref=e1030]: "Annotations: cluster.spectrocloud.com/last-applied-hash: 17721994478134573986"
                      - generic [ref=e1031]: Data
                      - generic [ref=e1032]: ====
                      - generic [ref=e1033]: "vsphere.conf:"
                      - generic [ref=e1034]: "----"
                      - generic [ref=e1035]: "[Global]"
                      - generic [ref=e1036]: cluster-id = "896d25b9-bfac-414f-bb6f-52fd469d3a6c/spectro-mgmt-cluster"
                      - generic [ref=e1037]: "[VirtualCenter \"vcenter.spectrocloud.dev\"]"
                      - generic [ref=e1038]: insecure-flag = "true"
                      - generic [ref=e1039]: user = "example@vsphere.local"
                      - generic [ref=e1040]: password = "************"
                      - generic [ref=e1041]: "[Labels]"
                      - generic [ref=e1042]: zone = "k8s-zone"
                      - generic [ref=e1043]: region = "k8s-region"
                      - generic [ref=e1044]: BinaryData
                      - generic [ref=e1045]: ====
                      - generic [ref=e1046]: "Events: <none>"
                - heading "Scenario - \"Too Many Open Files\" in ClusterDirect link to Scenario - \"Too Many Open Files\" in Cluster" [level=2] [ref=e1047]:
                  - text: Scenario - "Too Many Open Files" in Cluster
                  - link "Direct link to Scenario - \"Too Many Open Files\" in Cluster" [ref=e1048] [cursor=pointer]:
                    - /url: "#scenario---too-many-open-files-in-cluster"
                    - text: "#"
                - paragraph [ref=e1049]:
                  - text: When viewing logs for Enterprise or
                  - link "Private Cloud Gateway" [ref=e1050] [cursor=pointer]:
                    - /url: /clusters/pcg/
                  - text: clusters, you may encounter a "too many open files" error, which prevents logs from tailing after a certain point. To resolve this issue, you must increase the maximum number of file descriptors for each node on your cluster.
                - heading "Debug StepsDirect link to Debug Steps" [level=3] [ref=e1051]:
                  - text: Debug Steps
                  - link "Direct link to Debug Steps" [ref=e1052] [cursor=pointer]:
                    - /url: "#debug-steps-7"
                    - text: "#"
                - paragraph [ref=e1053]: Repeat the following process for each node in your cluster.
                - list [ref=e1054]:
                  - listitem [ref=e1055]:
                    - paragraph [ref=e1056]: Log in to a node in your cluster.
                    - generic [ref=e1058]:
                      - code [ref=e1060]:
                        - generic [ref=e1061]: ssh -i <key-name> <spectro@hostname>
                      - button "Copy code to clipboard" [ref=e1063] [cursor=pointer]:
                        - generic [ref=e1064]:
                          - img [ref=e1065]
                          - img [ref=e1067]
                  - listitem [ref=e1069]:
                    - paragraph [ref=e1070]:
                      - text: Switch to
                      - code [ref=e1071]: sudo
                      - text: mode using the command that best fits your system and preferences.
                    - generic [ref=e1073]:
                      - code [ref=e1075]:
                        - generic [ref=e1076]: sudo --login
                      - button "Copy code to clipboard" [ref=e1078] [cursor=pointer]:
                        - generic [ref=e1079]:
                          - img [ref=e1080]
                          - img [ref=e1082]
                  - listitem [ref=e1084]:
                    - paragraph [ref=e1085]: Increase the maximum number of file descriptors that the kernel can allocate system-wide.
                    - generic [ref=e1087]:
                      - code [ref=e1089]:
                        - generic [ref=e1090]: echo "fs.file-max = 1000000" > /etc/sysctl.d/99-maxfiles.conf
                      - button "Copy code to clipboard" [ref=e1092] [cursor=pointer]:
                        - generic [ref=e1093]:
                          - img [ref=e1094]
                          - img [ref=e1096]
                  - listitem [ref=e1098]:
                    - paragraph [ref=e1099]:
                      - text: Apply the updated
                      - code [ref=e1100]: sysctl
                      - text: settings. The increased limit is returned.
                    - generic [ref=e1102]:
                      - code [ref=e1104]:
                        - generic [ref=e1105]: sysctl -p /etc/sysctl.d/99-maxfiles.conf
                      - button "Copy code to clipboard" [ref=e1107] [cursor=pointer]:
                        - generic [ref=e1108]:
                          - img [ref=e1109]
                          - img [ref=e1111]
                    - code [ref=e1116]:
                      - generic [ref=e1117]: fs.file-max = 1000000
                  - listitem [ref=e1118]:
                    - paragraph [ref=e1119]:
                      - text: Restart the
                      - code [ref=e1120]: kubelet
                      - text: and
                      - code [ref=e1121]: containerd
                      - text: services.
                    - generic [ref=e1123]:
                      - code [ref=e1125]:
                        - generic [ref=e1126]: systemctl restart kubelet containerd
                      - button "Copy code to clipboard" [ref=e1128] [cursor=pointer]:
                        - generic [ref=e1129]:
                          - img [ref=e1130]
                          - img [ref=e1132]
                  - listitem [ref=e1134]:
                    - paragraph [ref=e1135]: Confirm that the change was applied.
                    - generic [ref=e1137]:
                      - code [ref=e1139]:
                        - generic [ref=e1140]: sysctl fs.file-max
                      - button "Copy code to clipboard" [ref=e1142] [cursor=pointer]:
                        - generic [ref=e1143]:
                          - img [ref=e1144]
                          - img [ref=e1146]
                    - code [ref=e1151]:
                      - generic [ref=e1152]: fs.file-max = 1000000
                - heading "Scenario - MAAS and VMware vSphere Clusters Fail Image Resolution in Non-Airgap EnvironmentsDirect link to Scenario - MAAS and VMware vSphere Clusters Fail Image Resolution in Non-Airgap Environments" [level=2] [ref=e1153]:
                  - text: Scenario - MAAS and VMware vSphere Clusters Fail Image Resolution in Non-Airgap Environments
                  - link "Direct link to Scenario - MAAS and VMware vSphere Clusters Fail Image Resolution in Non-Airgap Environments" [ref=e1154] [cursor=pointer]:
                    - /url: "#scenario---maas-and-vmware-vsphere-clusters-fail-image-resolution-in-non-airgap-environments"
                    - text: "#"
                - paragraph [ref=e1155]: In Palette or VerteX non-airgap installations with versions 4.2.13 to 4.5.22, MAAS and VMware vSphere clusters may fail to provision due to image resolution errors. These environments have incorrectly configured default image endpoints. To resolve this issue, you must manually set these endpoints.
                - heading "Debug StepsDirect link to Debug Steps" [level=3] [ref=e1156]:
                  - text: Debug Steps
                  - link "Direct link to Debug Steps" [ref=e1157] [cursor=pointer]:
                    - /url: "#debug-steps-8"
                    - text: "#"
                - list [ref=e1158]:
                  - listitem [ref=e1159]:
                    - paragraph [ref=e1160]: Open a terminal with connectivity to your self-hosted environment.
                  - listitem [ref=e1161]:
                    - paragraph [ref=e1162]:
                      - text: Execute the following command to save the base URL of your Palette instance API to the
                      - code [ref=e1163]: BASE_URL
                      - text: environment value. Add your correct URL in place of
                      - code [ref=e1164]: REPLACE_ME
                      - text: .
                    - generic [ref=e1166]:
                      - code [ref=e1168]:
                        - generic [ref=e1169]: export BASE_URL="REPLACE ME"
                      - button "Copy code to clipboard" [ref=e1171] [cursor=pointer]:
                        - generic [ref=e1172]:
                          - img [ref=e1173]
                          - img [ref=e1175]
                  - listitem [ref=e1177]:
                    - paragraph [ref=e1178]:
                      - text: Use the following command to log in to the Palette System API by using the
                      - code [ref=e1179]: /v1/auth/syslogin
                      - text: endpoint. Ensure you replace the credentials below with your system console credentials.
                    - generic [ref=e1181]:
                      - code [ref=e1183]:
                        - generic [ref=e1184]: curl --location '$BASE_URL/v1/auth/syslogin' \
                        - generic [ref=e1185]: "--header 'Content-Type: application/json' \\"
                        - generic [ref=e1186]: "--data '{"
                        - generic [ref=e1187]: "\"password\": \"**********\","
                        - generic [ref=e1188]: "\"username\": \"**********\""
                        - generic [ref=e1189]: "}'"
                      - button "Copy code to clipboard" [ref=e1191] [cursor=pointer]:
                        - generic [ref=e1192]:
                          - img [ref=e1193]
                          - img [ref=e1195]
                    - paragraph [ref=e1197]: The output displays the authorization token.
                    - code [ref=e1201]:
                      - generic [ref=e1202]: "{"
                      - generic [ref=e1203]: "\"Authorization\": \"**********.\","
                      - generic [ref=e1204]: "\"IsPasswordReset\": true"
                      - generic [ref=e1205]: "}"
                  - listitem [ref=e1206]:
                    - paragraph [ref=e1207]: Copy the authorization token to your clipboard and assign it to an environment variable. Replace the placeholder below with the value from the output.
                    - code [ref=e1211]:
                      - generic [ref=e1212]: export TOKEN=**********
                  - listitem [ref=e1213]:
                    - paragraph [ref=e1214]:
                      - text: Execute the following command to set the MAAS image endpoint to
                      - code [ref=e1215]: https://maasgoldenimage.s3.amazonaws.com
                      - text: . Replace the
                      - code [ref=e1216]: caCert
                      - text: value below with the Certificate Authority (CA) certificate for your self-hosted environment.
                    - generic [ref=e1218]:
                      - code [ref=e1220]:
                        - generic [ref=e1221]: curl --request PUT '$BASE_URL/v1/system/config/maas/image' \
                        - generic [ref=e1222]: "--header 'Authorization: $TOKEN' \\"
                        - generic [ref=e1223]: "--header 'Content-Type: application/json' \\"
                        - generic [ref=e1224]: "--data '{"
                        - generic [ref=e1225]: "\"spec\": {"
                        - generic [ref=e1226]: "\"imagesHostEndpoint\": \"https://maasgoldenimage.s3.amazonaws.com\","
                        - generic [ref=e1227]: "\"insecureSkipVerify\": false,"
                        - generic [ref=e1228]: "\"caCert\": \"**********\""
                        - generic [ref=e1229]: "}"
                        - generic [ref=e1230]: "}'"
                      - generic [ref=e1231]:
                        - button "Toggle word wrap" [ref=e1232] [cursor=pointer]:
                          - img [ref=e1233]
                        - button "Copy code to clipboard" [ref=e1235] [cursor=pointer]:
                          - generic [ref=e1236]:
                            - img [ref=e1237]
                            - img [ref=e1239]
                  - listitem [ref=e1241]:
                    - paragraph [ref=e1242]:
                      - text: Execute the following command to set the VMware vSphere image endpoint to
                      - code [ref=e1243]: https://vmwaregoldenimage.s3.amazonaws.com
                      - text: . Replace the
                      - code [ref=e1244]: caCert
                      - text: value below with the Certificate Authority (CA) certificate for your self-hosted environment.
                    - generic [ref=e1246]:
                      - code [ref=e1248]:
                        - generic [ref=e1249]: curl --request PUT '$BASE_URL/v1/system/config/vsphere/image' \
                        - generic [ref=e1250]: "--header 'Authorization: $TOKEN' \\"
                        - generic [ref=e1251]: "--header 'Content-Type: application/json' \\"
                        - generic [ref=e1252]: "--data '{"
                        - generic [ref=e1253]: "\"spec\": {"
                        - generic [ref=e1254]: "\"imagesHostEndpoint\": \"https://vmwaregoldenimage.s3.amazonaws.com\","
                        - generic [ref=e1255]: "\"insecureSkipVerify\": false,"
                        - generic [ref=e1256]: "\"caCert\": \"**********\""
                        - generic [ref=e1257]: "}"
                        - generic [ref=e1258]: "}'"
                      - generic [ref=e1259]:
                        - button "Toggle word wrap" [ref=e1260] [cursor=pointer]:
                          - img [ref=e1261]
                        - button "Copy code to clipboard" [ref=e1263] [cursor=pointer]:
                          - generic [ref=e1264]:
                            - img [ref=e1265]
                            - img [ref=e1267]
                - paragraph [ref=e1269]: MAAS and VMware vSphere clusters will now be successfully provisioned on your self-hosted Palette environment.
              - generic [ref=e1270]:
                - generic [ref=e1272]:
                  - text: "Tags:"
                  - list [ref=e1273]:
                    - listitem [ref=e1274]:
                      - link "troubleshooting" [ref=e1275] [cursor=pointer]:
                        - /url: /tags/troubleshooting/
                    - listitem [ref=e1276]:
                      - link "self-hosted" [ref=e1277] [cursor=pointer]:
                        - /url: /tags/self-hosted/
                    - listitem [ref=e1278]:
                      - link "palette" [ref=e1279] [cursor=pointer]:
                        - /url: /tags/palette/
                    - listitem [ref=e1280]:
                      - link "vertex" [ref=e1281] [cursor=pointer]:
                        - /url: /tags/vertex/
                - link "Edit this page" [ref=e1284] [cursor=pointer]:
                  - /url: https://github.com/spectrocloud/librarium/blob/master/docs/docs-content/troubleshooting/enterprise-install.md
                  - img [ref=e1285]
                  - text: Edit this page
            - navigation "Docs pages" [ref=e1289]:
              - link "Previous « Virtual Machine Orchestrator" [ref=e1290] [cursor=pointer]:
                - /url: /troubleshooting/vmo-issues/
                - generic [ref=e1291]: Previous
                - generic [ref=e1292]: « Virtual Machine Orchestrator
              - link "Next Palette Upgrade »" [ref=e1293] [cursor=pointer]:
                - /url: /troubleshooting/palette-upgrade/
                - generic [ref=e1294]: Next
                - generic [ref=e1295]: Palette Upgrade »
          - list [ref=e1298]:
            - listitem [ref=e1299]:
              - link "Scenario - VerteX Management Appliance Fails to Upgrade due to Stuck LINSTOR Satellite Pods" [ref=e1300] [cursor=pointer]:
                - /url: "#scenario---vertex-management-appliance-fails-to-upgrade-due-to-stuck-linstor-satellite-pods"
              - list [ref=e1301]:
                - listitem [ref=e1302]:
                  - link "Debug Steps" [ref=e1303] [cursor=pointer]:
                    - /url: "#debug-steps"
            - listitem [ref=e1304]:
              - link "Scenario - Palette/VerteX Management Appliance Installation Stalled due to piraeus-operator Pack in Error State" [ref=e1305] [cursor=pointer]:
                - /url: "#scenario---palettevertex-management-appliance-installation-stalled-due-to-piraeus-operator-pack-in-error-state"
              - list [ref=e1306]:
                - listitem [ref=e1307]:
                  - link "Debug Steps" [ref=e1308] [cursor=pointer]:
                    - /url: "#debug-steps-1"
            - listitem [ref=e1309]:
              - link "Scenario - Unexpected Logouts in Tenant Console After Palette/VerteX Management Appliance Installation" [ref=e1310] [cursor=pointer]:
                - /url: "#scenario---unexpected-logouts-in-tenant-console-after-palettevertex-management-appliance-installation"
              - list [ref=e1311]:
                - listitem [ref=e1312]:
                  - link "Debug Steps" [ref=e1313] [cursor=pointer]:
                    - /url: "#debug-steps-2"
            - listitem [ref=e1314]:
              - link "Scenario - IP Pool Exhausted During Airgapped Upgrade" [ref=e1315] [cursor=pointer]:
                - /url: "#scenario---ip-pool-exhausted-during-airgapped-upgrade"
              - list [ref=e1316]:
                - listitem [ref=e1317]:
                  - link "Debug Steps" [ref=e1318] [cursor=pointer]:
                    - /url: "#debug-steps-3"
            - listitem [ref=e1319]:
              - link "Scenario - Self-Linking Error" [ref=e1320] [cursor=pointer]:
                - /url: "#scenario---self-linking-error"
              - list [ref=e1321]:
                - listitem [ref=e1322]:
                  - link "Debug Steps" [ref=e1323] [cursor=pointer]:
                    - /url: "#debug-steps-4"
            - listitem [ref=e1324]:
              - link "Scenario - Enterprise Backup Stuck" [ref=e1325] [cursor=pointer]:
                - /url: "#scenario---enterprise-backup-stuck"
              - list [ref=e1326]:
                - listitem [ref=e1327]:
                  - link "Debug Steps" [ref=e1328] [cursor=pointer]:
                    - /url: "#debug-steps-5"
            - listitem [ref=e1329]:
              - link "Scenario - Non-Unique vSphere CNS Mapping" [ref=e1330] [cursor=pointer]:
                - /url: "#scenario---non-unique-vsphere-cns-mapping"
              - list [ref=e1331]:
                - listitem [ref=e1332]:
                  - link "Debug Steps" [ref=e1333] [cursor=pointer]:
                    - /url: "#debug-steps-6"
            - listitem [ref=e1334]:
              - link "Scenario - \"Too Many Open Files\" in Cluster" [ref=e1335] [cursor=pointer]:
                - /url: "#scenario---too-many-open-files-in-cluster"
              - list [ref=e1336]:
                - listitem [ref=e1337]:
                  - link "Debug Steps" [ref=e1338] [cursor=pointer]:
                    - /url: "#debug-steps-7"
            - listitem [ref=e1339]:
              - link "Scenario - MAAS and VMware vSphere Clusters Fail Image Resolution in Non-Airgap Environments" [ref=e1340] [cursor=pointer]:
                - /url: "#scenario---maas-and-vmware-vsphere-clusters-fail-image-resolution-in-non-airgap-environments"
              - list [ref=e1341]:
                - listitem [ref=e1342]:
                  - link "Debug Steps" [ref=e1343] [cursor=pointer]:
                    - /url: "#debug-steps-8"
  - button "Project Logo Ask AI" [ref=e1344] [cursor=pointer]:
    - generic [ref=e1347]:
      - img "Project Logo" [ref=e1348]
      - paragraph [ref=e1349]: Ask AI
```