# Page snapshot

```yaml
- generic [active] [ref=e1]:
  - generic [ref=e2]:
    - region "Skip to main content":
      - link "Skip to main content" [ref=e3] [cursor=pointer]:
        - /url: "#__docusaurus_skipToContent_fallback"
    - navigation "Main" [ref=e4]:
      - generic [ref=e5]:
        - generic [ref=e6]:
          - link "Spectro cloud logo" [ref=e7] [cursor=pointer]:
            - /url: /
            - img "Spectro cloud logo" [ref=e9]
          - link "Docs" [ref=e10] [cursor=pointer]:
            - /url: /release-notes/
          - link "Tutorials" [ref=e11] [cursor=pointer]:
            - /url: /tutorials/
          - link "Downloads" [ref=e12] [cursor=pointer]:
            - /url: /downloads/
          - link "API" [ref=e13] [cursor=pointer]:
            - /url: /api/introduction/
          - button "latest" [ref=e15] [cursor=pointer]
        - generic [ref=e16]:
          - link "GitHub repository" [ref=e17] [cursor=pointer]:
            - /url: https://github.com/spectrocloud/librarium
          - button "Switch between dark and light mode (currently system mode)" [ref=e19] [cursor=pointer]:
            - img [ref=e20]
          - button "Search (Ctrl+K)" [ref=e23] [cursor=pointer]:
            - generic [ref=e24]:
              - img [ref=e25]
              - generic [ref=e27]: Search
    - generic [ref=e31]:
      - complementary [ref=e32]:
        - generic [ref=e34]:
          - link "Spectro cloud logo" [ref=e35] [cursor=pointer]:
            - /url: /
            - img "Spectro cloud logo" [ref=e36]
          - navigation "Docs sidebar" [ref=e37]:
            - list [ref=e38]:
              - listitem [ref=e39]:
                - link "Palette Tutorials" [ref=e40] [cursor=pointer]:
                  - /url: /tutorials/
                  - img [ref=e42]
                  - text: Palette Tutorials
              - listitem [ref=e44]:
                - generic [ref=e45]:
                  - link "Getting Started" [ref=e46] [cursor=pointer]:
                    - /url: /tutorials/getting-started/
                    - img [ref=e48]
                    - text: Getting Started
                  - button "Toggle the collapsible sidebar category 'Getting Started'" [ref=e50] [cursor=pointer]
              - listitem [ref=e51]:
                - generic [ref=e52]:
                  - link "Packs and Registries" [ref=e53] [cursor=pointer]:
                    - /url: /tutorials/packs-registries/
                    - img [ref=e55]
                    - text: Packs and Registries
                  - button "Toggle the collapsible sidebar category 'Packs and Registries'" [ref=e57] [cursor=pointer]
              - listitem [ref=e58]:
                - generic [ref=e59]:
                  - link "Profiles" [ref=e60] [cursor=pointer]:
                    - /url: /tutorials/profiles/
                    - img [ref=e62]
                    - text: Profiles
                  - button "Toggle the collapsible sidebar category 'Profiles'" [ref=e66] [cursor=pointer]
              - listitem [ref=e67]:
                - generic [ref=e68]:
                  - link "Clusters" [expanded] [ref=e69] [cursor=pointer]:
                    - /url: /tutorials/clusters/
                    - img [ref=e71]
                    - text: Clusters
                  - button "Toggle the collapsible sidebar category 'Clusters'" [ref=e77] [cursor=pointer]
                - list [ref=e78]:
                  - listitem [ref=e79]:
                    - link "Edge" [expanded] [ref=e81] [cursor=pointer]:
                      - /url: "#"
                    - list [ref=e82]:
                      - listitem [ref=e83]:
                        - link "Deploy an Edge Cluster on VMware" [ref=e84] [cursor=pointer]:
                          - /url: /tutorials/clusters/edge/deploy-cluster/
                      - listitem [ref=e85]:
                        - link "Deploy an Edge Cluster on VirtualBox" [ref=e86] [cursor=pointer]:
                          - /url: /tutorials/clusters/edge/deploy-cluster-virtualbox/
                  - listitem [ref=e87]:
                    - link "Private Cloud Gateway" [ref=e89] [cursor=pointer]:
                      - /url: "#"
              - listitem [ref=e90]:
                - generic [ref=e91]:
                  - link "Palette Dev Engine" [ref=e92] [cursor=pointer]:
                    - /url: /tutorials/pde/
                    - img [ref=e94]
                    - text: Palette Dev Engine
                  - button "Toggle the collapsible sidebar category 'Palette Dev Engine'" [ref=e96] [cursor=pointer]
              - listitem [ref=e97]:
                - button "Privacy Settings" [ref=e98] [cursor=pointer]
      - main [ref=e99]:
        - generic [ref=e101]:
          - generic [ref=e103]:
            - article [ref=e104]:
              - navigation "Breadcrumbs" [ref=e105]:
                - list [ref=e106]:
                  - listitem [ref=e107]:
                    - link "Home page" [ref=e108] [cursor=pointer]:
                      - /url: /
                      - img [ref=e109]
                  - listitem [ref=e111]:
                    - link "Clusters" [ref=e112] [cursor=pointer]:
                      - /url: /tutorials/clusters/
                  - listitem [ref=e113]:
                    - generic [ref=e114]: Edge
                  - listitem [ref=e115]:
                    - generic [ref=e116]: Deploy an Edge Cluster on VMware
              - generic [ref=e117]:
                - heading "Deploy an Edge Cluster on VMware" [level=1] [ref=e119]
                - paragraph [ref=e120]: Palette supports deploying Kubernetes clusters in remote locations to support edge computing workloads. Palette's Edge solution enables you to deploy your edge devices, also called Edge hosts, which contain all the required software dependencies to support Palette-managed Kubernetes cluster deployment.
                - paragraph [ref=e121]: Maintaining consistency while preparing edge devices at scale can be challenging for operation teams. For example, imagine you are an IT administrator for a retail company that has decided to expand to 1000 new stores this year. The company needs you to deploy Kubernetes clusters in each new store using edge devices, such as Intel NUC, and ensure each device has the same software and security configurations. Your job is to prepare each device so the development team can deploy Kubernetes clusters on each device. You have decided to use Palette's Edge solution to help you meet the organizational requirements. You will prepare a small set of Edge devices and deploy a Kubernetes cluster to verify readiness for consistent deployment across all physical sites.
                - paragraph [ref=e122]: "The following points summarize the primary stages of Edge cluster deployment to a production environment:"
                - list [ref=e123]:
                  - listitem [ref=e124]:
                    - paragraph [ref=e125]: Create Edge artifacts such as the Edge Installer ISO, provider images, and content bundles.
                  - listitem [ref=e126]:
                    - paragraph [ref=e127]: Initialize the Edge device with the Edge installer ISO. The ISO includes a base Operating System (OS) and other configurations such as networking, proxy, security, tooling, and user privileges.
                  - listitem [ref=e128]:
                    - paragraph [ref=e129]: Create a cluster profile to ensure consistency in all the Edge hosts. The cluster profile lets you declare the desired software dependencies for each Kubernetes cluster.
                - paragraph [ref=e130]: Following the primary stages outlined above, this tutorial will guide you to build the Edge artifacts (Edge installer ISO image and provider images) and use the Edge installer ISO image to prepare Edge hosts. Next, you will use the provider image to create a cluster profile and then deploy a cluster on those Edge hosts. You will use VMware to deploy the Edge hosts to simulate a bare metal environment.
                - paragraph [ref=e131]: For learning purposes, you will set up Virtual Machines (VMs) as Edge hosts and deploy a cluster on Edge host VMs. VMs provide a more accessible Edge learning experience, as you do not require connecting to physical Edge devices. The diagram below shows the main steps to prepare Edge hosts and deploy a cluster.
                - paragraph [ref=e132]:
                  - img "An overarching diagram showing the tutorial workflow." [ref=e133]
                - heading "PrerequisitesDirect link to Prerequisites" [level=2] [ref=e134]:
                  - text: Prerequisites
                  - link "Direct link to Prerequisites" [ref=e135] [cursor=pointer]:
                    - /url: "#prerequisites"
                    - text: "#"
                - paragraph [ref=e136]: "To complete this tutorial, you will need the following:"
                - list [ref=e137]:
                  - listitem [ref=e138]:
                    - paragraph [ref=e139]: Access to a VMware vCenter environment where you will provision VMs as Edge hosts. You will need the server URL, login credentials, and names of the data center, data store, resource pool, folder, cluster, and DHCP-enabled network.
                  - listitem [ref=e140]:
                    - paragraph [ref=e141]:
                      - text: The VMs you will prepare as Edge hosts must be attached to a DHCP-enabled network. To ensure DHCP is enabled on the network, review the network settings on your ESXi Host. You can refer to the
                      - link "Prepare the DHCP Server for vSphere" [ref=e142] [cursor=pointer]:
                        - /url: https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.esxi.install.doc/GUID-9D8333F5-5F5B-4658-8166-119B44895098.html
                      - text: guide from VMware to configure a DHCP server on the network.
                  - listitem [ref=e143]:
                    - paragraph [ref=e144]:
                      - text: A physical or virtual Linux machine with
                      - emphasis [ref=e145]: AMD64
                      - text: (also known as
                      - emphasis [ref=e146]: x86_64
                      - text: ) processor architecture to build the Edge artifacts. You can issue the following command in the terminal to check your processor architecture.
                    - generic [ref=e148]:
                      - code [ref=e150]:
                        - generic [ref=e151]: uname -m
                      - button "Copy code to clipboard" [ref=e153] [cursor=pointer]:
                        - generic [ref=e154]:
                          - img [ref=e155]
                          - img [ref=e157]
                    - generic [ref=e159]:
                      - generic [ref=e160]:
                        - img [ref=e162]
                        - text: warning
                      - paragraph [ref=e165]: The Linux machine must have network connectivity to your VMware vCenter environment.
                  - listitem [ref=e166]:
                    - paragraph [ref=e167]: "The following minimum hardware configuration:"
                    - list [ref=e168]:
                      - listitem [ref=e169]: 4 CPU
                      - listitem [ref=e170]: 8 GB memory
                      - listitem [ref=e171]: 50 GB storage
                  - listitem [ref=e172]:
                    - paragraph [ref=e173]:
                      - link "Git" [ref=e174] [cursor=pointer]:
                        - /url: https://git-scm.com/downloads
                      - text: . Ensure git installation by issuing the
                      - code [ref=e175]: git --version
                      - text: command.
                  - listitem [ref=e176]:
                    - paragraph [ref=e177]:
                      - text: (Optional)
                      - link "Earthly" [ref=e178] [cursor=pointer]:
                        - /url: https://earthly.dev/
                      - text: is installed and available. If you do not install Earthly, you can still build the artifacts, but it would require root privileges, and some of the resulting artifacts will be owned by the root user.
                  - listitem [ref=e179]:
                    - paragraph [ref=e180]:
                      - text: An image management tool such as
                      - link "Docker" [ref=e181] [cursor=pointer]:
                        - /url: https://docs.docker.com/engine/install/
                      - text: or
                      - link "crane" [ref=e182] [cursor=pointer]:
                        - /url: https://github.com/google/go-containerregistry/blob/main/cmd/crane/README.md
                      - text: is installed and available.
                    - generic [ref=e183]:
                      - generic [ref=e184]:
                        - img [ref=e186]
                        - text: info
                      - paragraph [ref=e189]: If you do not install Earthly, you must install Docker.
                  - listitem [ref=e190]:
                    - paragraph [ref=e191]:
                      - text: A
                      - link "Spectro Cloud" [ref=e192] [cursor=pointer]:
                        - /url: https://console.spectrocloud.com
                      - text: account. If you have not signed up, you can sign up for an account
                      - link "here" [ref=e193] [cursor=pointer]:
                        - /url: https://www.spectrocloud.com/get-started
                      - text: .
                  - listitem [ref=e194]:
                    - paragraph [ref=e195]:
                      - text: A Palette registration token for pairing Edge hosts with Palette. You will need tenant admin access to Palette to generate a new registration token. For detailed instructions, refer to the
                      - link "Create Registration Token" [ref=e196] [cursor=pointer]:
                        - /url: /clusters/edge/site-deployment/site-installation/create-registration-token/
                      - text: guide. Copy the newly created token to a clipboard or notepad file to use later in this tutorial.
                    - paragraph [ref=e197]:
                      - text: The screenshot below shows a sample registration token in the
                      - strong [ref=e198]: Tenant Settings
                      - text: ">"
                      - strong [ref=e199]: Registration Tokens
                      - text: section in Palette.
                    - paragraph [ref=e200]:
                      - img "A screenshot of a registration token in Palette" [ref=e201]
                - heading "Build Edge ArtifactsDirect link to Build Edge Artifacts" [level=2] [ref=e202]:
                  - text: Build Edge Artifacts
                  - link "Direct link to Build Edge Artifacts" [ref=e203] [cursor=pointer]:
                    - /url: "#build-edge-artifacts"
                    - text: "#"
                - paragraph [ref=e204]:
                  - text: In this section, you will use the
                  - link "CanvOS" [ref=e205] [cursor=pointer]:
                    - /url: https://github.com/spectrocloud/CanvOS/blob/main/README.md
                  - text: utility to build an Edge installer ISO image and provider images for all the Palette-supported Kubernetes versions. The utility builds multiple provider images, so you can use any image that matches the desired Kubernetes version you want to use with your cluster profile. You must perform this part of the tutorial on a Linux machine with an AMD64(x86_64) processor architecture that has network connectivity to your VMware vCenter environment.
                - paragraph [ref=e206]: This tutorial builds and uses the provider image compatible with K3s v1.32.1.
                - heading "Check Out Starter CodeDirect link to Check Out Starter Code" [level=3] [ref=e207]:
                  - text: Check Out Starter Code
                  - link "Direct link to Check Out Starter Code" [ref=e208] [cursor=pointer]:
                    - /url: "#check-out-starter-code"
                    - text: "#"
                - paragraph [ref=e209]: Issue the following and subsequent command-line instructions on your Linux machine, which this tutorial refers to as the development environment.
                - paragraph [ref=e210]:
                  - text: Clone the
                  - link "CanvOS" [ref=e211] [cursor=pointer]:
                    - /url: https://github.com/spectrocloud/CanvOS
                  - text: GitHub repository containing the starter code to build Edge artifacts.
                - generic [ref=e213]:
                  - code [ref=e215]:
                    - generic [ref=e216]: git clone https://github.com/spectrocloud/CanvOS.git
                  - button "Copy code to clipboard" [ref=e218] [cursor=pointer]:
                    - generic [ref=e219]:
                      - img [ref=e220]
                      - img [ref=e222]
                - paragraph [ref=e224]:
                  - text: Change to the
                  - code [ref=e225]: CanvOS
                  - text: directory.
                - generic [ref=e227]:
                  - code [ref=e229]:
                    - generic [ref=e230]: cd CanvOS
                  - button "Copy code to clipboard" [ref=e232] [cursor=pointer]:
                    - generic [ref=e233]:
                      - img [ref=e234]
                      - img [ref=e236]
                - paragraph [ref=e238]:
                  - text: View the available
                  - link "git tags" [ref=e239] [cursor=pointer]:
                    - /url: https://github.com/spectrocloud/CanvOS/tags
                  - text: .
                - generic [ref=e241]:
                  - code [ref=e243]:
                    - generic [ref=e244]: git tag
                  - button "Copy code to clipboard" [ref=e246] [cursor=pointer]:
                    - generic [ref=e247]:
                      - img [ref=e248]
                      - img [ref=e250]
                - paragraph [ref=e252]:
                  - text: Check out the newest available tag. This guide uses
                  - strong [ref=e253]: v4.6.12
                  - text: tag as an example.
                - generic [ref=e255]:
                  - code [ref=e257]:
                    - generic [ref=e258]: git checkout v4.6.12
                  - button "Copy code to clipboard" [ref=e260] [cursor=pointer]:
                    - generic [ref=e261]:
                      - img [ref=e262]
                      - img [ref=e264]
                - heading "Define ArgumentsDirect link to Define Arguments" [level=2] [ref=e266]:
                  - text: Define Arguments
                  - link "Direct link to Define Arguments" [ref=e267] [cursor=pointer]:
                    - /url: "#define-arguments"
                    - text: "#"
                - paragraph [ref=e268]:
                  - text: CanvOS requires arguments such as image tag, registry, repository, and OS distribution. The arguments are defined in the
                  - code [ref=e269]: .arg
                  - text: file. In this step, you will create the
                  - code [ref=e270]: .arg
                  - text: file and define all the required arguments.
                - paragraph [ref=e271]:
                  - text: Issue the command below to assign an image tag value for the provider images. This guide uses the default value
                  - code [ref=e272]: demo
                  - text: as an example. However, you can assign any lowercase and alphanumeric string to the
                  - code [ref=e273]: CUSTOM_TAG
                  - text: variable.
                - generic [ref=e275]:
                  - code [ref=e277]:
                    - generic [ref=e278]: export CUSTOM_TAG=demo
                  - button "Copy code to clipboard" [ref=e280] [cursor=pointer]:
                    - generic [ref=e281]:
                      - img [ref=e282]
                      - img [ref=e284]
                - paragraph [ref=e286]:
                  - text: Issue the command below to create the
                  - code [ref=e287]: .arg
                  - text: file with the custom tag. The remaining arguments will use the default values. For example,
                  - code [ref=e288]: ubuntu
                  - text: is the default operating system,
                  - code [ref=e289]: demo
                  - text: is the default tag, and
                  - link "ttl.sh" [ref=e290] [cursor=pointer]:
                    - /url: https://ttl.sh/
                  - text: is the default image registry. The default ttl.sh image registry is free and does not require a sign-up. Images pushed to ttl.sh are ephemeral and will expire after the 24 hrs time limit.
                - paragraph [ref=e291]:
                  - text: Using the arguments defined in the
                  - code [ref=e292]: .arg
                  - text: file, the final provider images you generate will have the following naming convention,
                  - code [ref=e293]: "[IMAGE_REGISTRY]/[IMAGE_REPO]:[CUSTOM_TAG]"
                  - text: . In this example, the provider images will be
                  - code [ref=e294]: ttl.sh/ubuntu:k3s-1.32.1-v4.6.12-demo
                  - text: . Refer to the
                  - code [ref=e295]: .arg.template
                  - text: sample file in the current directory or the
                  - link "README" [ref=e296] [cursor=pointer]:
                    - /url: https://github.com/spectrocloud/CanvOS#readme
                  - text: to learn more about the default values.
                - generic [ref=e298]:
                  - code [ref=e300]:
                    - generic [ref=e301]: cat << EOF > .arg
                    - generic [ref=e302]: CUSTOM_TAG=$CUSTOM_TAG
                    - generic [ref=e303]: IMAGE_REGISTRY=ttl.sh
                    - generic [ref=e304]: OS_DISTRIBUTION=ubuntu
                    - generic [ref=e305]: IMAGE_REPO=ubuntu
                    - generic [ref=e306]: OS_VERSION=22
                    - generic [ref=e307]: K8S_DISTRIBUTION=k3s
                    - generic [ref=e308]: ISO_NAME=palette-edge-installer
                    - generic [ref=e309]: ARCH=amd64
                    - generic [ref=e310]: UPDATE_KERNEL=false
                    - generic [ref=e311]: EOF
                  - button "Copy code to clipboard" [ref=e313] [cursor=pointer]:
                    - generic [ref=e314]:
                      - img [ref=e315]
                      - img [ref=e317]
                - generic [ref=e319]:
                  - generic [ref=e320]:
                    - img [ref=e322]
                    - text: warning
                  - paragraph [ref=e325]:
                    - text: Future versions of CanvOS may require different arguments. Refer to the CanvOS
                    - link "README" [ref=e326] [cursor=pointer]:
                      - /url: https://github.com/spectrocloud/CanvOS#readme
                    - text: to learn more about the arguments needed for each version tag.
                - paragraph [ref=e327]: View the newly created file to ensure the arguments are defined per your requirements.
                - generic [ref=e329]:
                  - code [ref=e331]:
                    - generic [ref=e332]: cat .arg
                  - button "Copy code to clipboard" [ref=e334] [cursor=pointer]:
                    - generic [ref=e335]:
                      - img [ref=e336]
                      - img [ref=e338]
                - paragraph [ref=e340]:
                  - text: Refer to the
                  - link "Build Edge Artifacts" [ref=e341] [cursor=pointer]:
                    - /url: /clusters/edge/edgeforge-workflow/palette-canvos/
                  - text: guide to learn more about customizing arguments.
                - heading "Create User DataDirect link to Create User Data" [level=2] [ref=e342]:
                  - text: Create User Data
                  - link "Direct link to Create User Data" [ref=e343] [cursor=pointer]:
                    - /url: "#create-user-data"
                    - text: "#"
                - paragraph [ref=e344]:
                  - text: Next, you will create a
                  - link "user-data" [ref=e345] [cursor=pointer]:
                    - /url: /clusters/edge/edgeforge-workflow/prepare-user-data/
                    - code [ref=e346]: user-data
                  - text: file that embeds your
                  - link "tenant registration token" [ref=e347] [cursor=pointer]:
                    - /url: /clusters/edge/site-deployment/site-installation/create-registration-token/
                  - text: and Edge host's login credentials in the Edge Installer ISO image.
                - paragraph [ref=e348]:
                  - text: Issue the command below to save your tenant registration token to a local variable. Replace
                  - code [ref=e349]: <your-palette-registration-token>
                  - text: with your actual registration token.
                - generic [ref=e351]:
                  - code [ref=e353]:
                    - generic [ref=e354]: export TOKEN=<your-palette-registration-token>
                  - button "Copy code to clipboard" [ref=e356] [cursor=pointer]:
                    - generic [ref=e357]:
                      - img [ref=e358]
                      - img [ref=e360]
                - paragraph [ref=e362]:
                  - text: Use the following command to create the
                  - code [ref=e363]: user-data
                  - text: file containing the tenant registration token.
                - generic [ref=e365]:
                  - code [ref=e367]:
                    - generic [ref=e368]: cat << EOF > user-data
                    - generic [ref=e369]: "#cloud-config"
                    - generic [ref=e370]: "stylus:"
                    - generic [ref=e371]: "site:"
                    - generic [ref=e372]: "edgeHostToken: $TOKEN"
                    - generic [ref=e373]: "paletteEndpoint: api.spectrocloud.com"
                    - generic [ref=e374]: "users:"
                    - generic [ref=e375]: "- name: kairos"
                    - generic [ref=e376]: "passwd: kairos"
                    - generic [ref=e377]: "install:"
                    - generic [ref=e378]: "poweroff: true"
                    - generic [ref=e379]: EOF
                  - button "Copy code to clipboard" [ref=e381] [cursor=pointer]:
                    - generic [ref=e382]:
                      - img [ref=e383]
                      - img [ref=e385]
                - generic [ref=e387]:
                  - generic [ref=e388]:
                    - img [ref=e390]
                    - text: warning
                  - generic [ref=e392]:
                    - paragraph [ref=e393]:
                      - text: If you haven't set a default project for the registration token, ensure that you provide the
                      - code [ref=e394]: stylus.site.projectName
                      - text: parameter with the value
                      - code [ref=e395]: Default
                      - text: in
                      - code [ref=e396]: user-data
                      - text: .
                    - paragraph [ref=e397]:
                      - text: Ensure that you include the
                      - code [ref=e398]: install.poweroff.true
                      - text: parameter. This ensures that the Edge host will power off after installation. If you do not include this parameter, this could lead to a VM you will use in a subsequent step to refuse to power off automatically and cause a timeout error unless you manually shut down the VM.
                - paragraph [ref=e399]:
                  - text: Review the newly created
                  - code [ref=e400]: user-data
                  - text: file.
                - generic [ref=e402]:
                  - code [ref=e404]:
                    - generic [ref=e405]: cat user-data
                  - button "Copy code to clipboard" [ref=e407] [cursor=pointer]:
                    - generic [ref=e408]:
                      - img [ref=e409]
                      - img [ref=e411]
                - paragraph [ref=e413]:
                  - text: The expected output should show that the
                  - code [ref=e414]: edgeHostToken
                  - text: and login credentials for Edge hosts are set correctly. The
                  - code [ref=e415]: edgeHostToken
                  - text: value must match your Palette registration token. Otherwise, your Edge hosts will not register with Palette. Below is a sample output with the token masked.
                - code [ref=e419]:
                  - generic [ref=e420]: "#cloud-config"
                  - generic [ref=e421]: "stylus:"
                  - generic [ref=e422]: "site:"
                  - generic [ref=e423]: "paletteEndpoint: api.spectrocloud.com"
                  - generic [ref=e424]: "edgeHostToken: ********************************"
                  - generic [ref=e425]: "users:"
                  - generic [ref=e426]: "- name: kairos"
                  - generic [ref=e427]: "passwd: kairos"
                - heading "Build ArtifactsDirect link to Build Artifacts" [level=2] [ref=e428]:
                  - text: Build Artifacts
                  - link "Direct link to Build Artifacts" [ref=e429] [cursor=pointer]:
                    - /url: "#build-artifacts"
                    - text: "#"
                - paragraph [ref=e430]:
                  - text: The CanvOS utility uses
                  - link "Earthly" [ref=e431] [cursor=pointer]:
                    - /url: https://earthly.dev/
                  - text: to build the target artifacts. Issue the following command to start the build process.
                - generic [ref=e432]:
                  - generic [ref=e433]:
                    - img [ref=e435]
                    - text: warning
                  - generic [ref=e437]:
                    - paragraph [ref=e438]:
                      - text: Make sure your machine has sufficient disk space for the provider images. Each image is about 4 - 5 GB in size, and images are created for all the Palette-supported Kubernetes versions by default. In the
                      - strong [ref=e439]: 4.6.12
                      - text: branch of
                      - code [ref=e440]: CanvOS
                      - text: used in this tutorial, the script builds 60 images. If your machine does not have enough disk space, the build process will fail silently.
                    - paragraph [ref=e441]:
                      - text: Open the
                      - code [ref=e442]: k8s_version.json
                      - text: file in the
                      - code [ref=e443]: CanvOS
                      - text: directory. Remove the Kubernetes versions that you don't need from the JSON object corresponding to your Kubernetes distribution.
                    - paragraph [ref=e444]:
                      - text: This speeds up build process and reduces the amount of space required for the build process. For an example of excluding a version from build, refer to
                      - link "Build Edge Artifacts guide" [ref=e445] [cursor=pointer]:
                        - /url: /clusters/edge/edgeforge-workflow/palette-canvos/
                      - text: .
                - generic [ref=e446]:
                  - tablist [ref=e447]:
                    - tab "Earthly Installed" [selected] [ref=e448] [cursor=pointer]
                    - tab "Earthly Not Installed" [ref=e449] [cursor=pointer]
                  - tabpanel [ref=e451]:
                    - generic [ref=e453]:
                      - code [ref=e455]:
                        - generic [ref=e456]: earthly +build-all-images
                      - button "Copy code to clipboard" [ref=e458] [cursor=pointer]:
                        - generic [ref=e459]:
                          - img [ref=e460]
                          - img [ref=e462]
                - code [ref=e467]:
                  - generic [ref=e468]: "# Output condensed for readability"
                  - generic [ref=e469]: ===================== Earthly Build SUCCESS =====================
                  - generic [ref=e470]: Share your logs with an Earthly account (experimental)! Register for one at https://ci.earthly.dev.
                - paragraph [ref=e471]:
                  - text: This command may take 15-20 minutes to finish depending on the hardware resources of the host machine. Upon completion, the command will display the manifest, as shown in the example below, that you will use in your cluster profile later in this tutorial. Note that the
                  - code [ref=e472]: system.xxxxx
                  - text: attribute values in the manifest example are the same as what you defined earlier in the
                  - code [ref=e473]: .arg
                  - text: file.
                - paragraph [ref=e474]: Copy and save the output attributes in a notepad or clipboard to use later in your cluster profile.
                - generic [ref=e476]:
                  - code [ref=e478]:
                    - generic [ref=e479]: "pack:"
                    - generic [ref=e480]: "content:"
                    - generic [ref=e481]: "images:"
                    - generic [ref=e482]: "- image: \"{{.spectro.pack.edge-native-byoi.options.system.uri}}\""
                    - generic [ref=e483]: "options:"
                    - generic [ref=e484]: "system.uri: \"{{ .spectro.pack.edge-native-byoi.options.system.registry }}/{{ .spectro.pack.edge-native-byoi.options.system.repo }}:{{ .spectro.pack.edge-native-byoi.options.system.k8sDistribution }}-{{ .spectro.system.kubernetes.version }}-{{ .spectro.pack.edge-native-byoi.options.system.peVersion }}-{{ .spectro.pack.edge-native-byoi.options.system.customTag }}\""
                    - generic [ref=e485]: "system.registry: ttl.sh"
                    - generic [ref=e486]: "system.repo: ubuntu"
                    - generic [ref=e487]: "system.k8sDistribution: k3s"
                    - generic [ref=e488]: "system.osName: ubuntu"
                    - generic [ref=e489]: "system.peVersion: v4.6.12"
                    - generic [ref=e490]: "system.customTag: demo"
                    - generic [ref=e491]: "system.osVersion: 22"
                  - generic [ref=e492]:
                    - button "Toggle word wrap" [ref=e493] [cursor=pointer]:
                      - img [ref=e494]
                    - button "Copy code to clipboard" [ref=e496] [cursor=pointer]:
                      - generic [ref=e497]:
                        - img [ref=e498]
                        - img [ref=e500]
                - heading "View ArtifactsDirect link to View Artifacts" [level=2] [ref=e502]:
                  - text: View Artifacts
                  - link "Direct link to View Artifacts" [ref=e503] [cursor=pointer]:
                    - /url: "#view-artifacts"
                    - text: "#"
                - paragraph [ref=e504]:
                  - text: After completing the build process, list the edge installer ISO image and checksum by issuing the following command from the
                  - code [ref=e505]: CanvOS
                  - text: directory.
                - generic [ref=e507]:
                  - code [ref=e509]:
                    - generic [ref=e510]: ls build/
                  - button "Copy code to clipboard" [ref=e512] [cursor=pointer]:
                    - generic [ref=e513]:
                      - img [ref=e514]
                      - img [ref=e516]
                - code [ref=e521]:
                  - generic [ref=e522]: palette-edge-installer.iso
                  - generic [ref=e523]: palette-edge-installer.iso.sha256
                - paragraph [ref=e524]:
                  - text: Export the path to the ISO file, the
                  - code [ref=e525]: build
                  - text: directory, in the
                  - code [ref=e526]: ISOFILEPATH
                  - text: local variable. Later in the tutorial, you will use this local variable to mount the
                  - code [ref=e527]: build
                  - text: directory to a Docker container.
                - generic [ref=e529]:
                  - code [ref=e531]:
                    - generic [ref=e532]: export ISOFILEPATH=$PWD/build
                    - generic [ref=e533]: echo $ISOFILEPATH
                  - button "Copy code to clipboard" [ref=e535] [cursor=pointer]:
                    - generic [ref=e536]:
                      - img [ref=e537]
                      - img [ref=e539]
                - paragraph [ref=e541]:
                  - text: List the Docker images to review the created provider images. By default, provider images are created for all the Palette-supported Kubernetes versions. You can identify the provider images by the image tag value you used in the
                  - code [ref=e542]: .arg
                  - text: file's
                  - code [ref=e543]: CUSTOM_TAG
                  - text: variable.
                - generic [ref=e545]:
                  - code [ref=e547]:
                    - generic [ref=e548]: docker images --filter=reference='*/*:*demo*'
                  - button "Copy code to clipboard" [ref=e550] [cursor=pointer]:
                    - generic [ref=e551]:
                      - img [ref=e552]
                      - img [ref=e554]
                - code [ref=e559]:
                  - generic [ref=e560]: REPOSITORY TAG IMAGE ID CREATED SIZE
                  - generic [ref=e561]: ttl.sh/ubuntu k3s-1.32.1-v4.6.12-demo 145bc25ff5b4 2 hours ago 4.97GB
                  - generic [ref=e562]: ttl.sh/ubuntu k3s-1.32.1-v4.6.12-demo_linux_amd64 145bc25ff5b4 2 hours ago 4.97GB
                  - generic [ref=e563]: ttl.sh/ubuntu k3s-1.31.5-v4.6.12-demo 52ba5288cccd 2 hours ago 4.96GB
                  - generic [ref=e564]: ttl.sh/ubuntu k3s-1.31.5-v4.6.12-demo_linux_amd64 52ba5288cccd 2 hours ago 4.96GB
                  - generic [ref=e565]: ttl.sh/ubuntu k3s-1.31.4-v4.6.12-demo 8e089cc7292f 2 hours ago 4.96GB
                  - generic [ref=e566]: ttl.sh/ubuntu k3s-1.31.4-v4.6.12-demo_linux_amd64 8e089cc7292f 2 hours ago 4.96GB
                  - generic [ref=e567]: ttl.sh/ubuntu k3s-1.31.1-v4.6.12-demo 6ecfc962d208 2 hours ago 4.96GB
                  - generic [ref=e568]: ttl.sh/ubuntu k3s-1.31.1-v4.6.12-demo_linux_amd64 6ecfc962d208 2 hours ago 4.96GB
                  - generic [ref=e569]: ttl.sh/ubuntu k3s-1.30.9-v4.6.12-demo 34cdeab9d894 2 hours ago 4.96GB
                  - generic [ref=e570]: ttl.sh/ubuntu k3s-1.30.9-v4.6.12-demo_linux_amd64 34cdeab9d894 2 hours ago 4.96GB
                  - generic [ref=e571]: ttl.sh/ubuntu k3s-1.30.8-v4.6.12-demo 6491f9c28be5 2 hours ago 4.96GB
                  - generic [ref=e572]: ttl.sh/ubuntu k3s-1.30.8-v4.6.12-demo_linux_amd64 6491f9c28be5 2 hours ago 4.96GB
                  - generic [ref=e573]: ttl.sh/ubuntu k3s-1.30.6-v4.6.12-demo dee339f3ceaa 2 hours ago 4.95GB
                  - generic [ref=e574]: ttl.sh/ubuntu k3s-1.30.6-v4.6.12-demo_linux_amd64 dee339f3ceaa 2 hours ago 4.95GB
                  - generic [ref=e575]: ttl.sh/ubuntu k3s-1.30.5-v4.6.12-demo 80f451092b91 2 hours ago 4.96GB
                  - generic [ref=e576]: ttl.sh/ubuntu k3s-1.30.5-v4.6.12-demo_linux_amd64 80f451092b91 2 hours ago 4.96GB
                  - generic [ref=e577]: ...
                - heading "Push Provider ImagesDirect link to Push Provider Images" [level=2] [ref=e578]:
                  - text: Push Provider Images
                  - link "Direct link to Push Provider Images" [ref=e579] [cursor=pointer]:
                    - /url: "#push-provider-images"
                    - text: "#"
                - paragraph [ref=e580]:
                  - text: Push the provider images to the image registry indicated in the
                  - code [ref=e581]: .arg
                  - text: file so that you can reference the provider image later in your cluster profile.
                - paragraph [ref=e582]:
                  - text: Since we used the provider image compatible with K3s v1.32 in the cluster profile, you would use the following command to push the provider image compatible with K3s v1.32 to the image registry. If you want to use the other provider image, push that version to the image registry. The example below and default behavior uses the
                  - link "ttl.sh" [ref=e583] [cursor=pointer]:
                    - /url: https://ttl.sh/
                  - text: image registry. This image registry is free and does not require you to sign up to use it. Images pushed to ttl.sh are ephemeral and will expire after 24 hours.
                - generic [ref=e585]:
                  - code [ref=e587]:
                    - generic [ref=e588]: docker push ttl.sh/ubuntu:k3s-1.32.1-v4.6.12-demo
                  - button "Copy code to clipboard" [ref=e590] [cursor=pointer]:
                    - generic [ref=e591]:
                      - img [ref=e592]
                      - img [ref=e594]
                - generic [ref=e596]:
                  - generic [ref=e597]:
                    - img [ref=e599]
                    - text: warning
                  - paragraph [ref=e602]:
                    - text: As a reminder,
                    - link "ttl.sh" [ref=e603] [cursor=pointer]:
                      - /url: https://ttl.sh/
                    - text: is a short-lived image registry. If you do not use these provider images in your cluster profile within 24 hours of pushing to
                    - emphasis [ref=e604]: ttl.sh
                    - text: ", they will expire and must be re-pushed. If you want to use a different image registry, refer to the Advanced workflow in the"
                    - link "Build Edge Artifacts" [ref=e605] [cursor=pointer]:
                      - /url: /clusters/edge/edgeforge-workflow/palette-canvos/
                    - text: guide to learn how to use another registry.
                - heading "Provision Virtual MachinesDirect link to Provision Virtual Machines" [level=2] [ref=e606]:
                  - text: Provision Virtual Machines
                  - link "Direct link to Provision Virtual Machines" [ref=e607] [cursor=pointer]:
                    - /url: "#provision-virtual-machines"
                    - text: "#"
                - paragraph [ref=e608]:
                  - text: In this section, you will create a VM template in VMware vCenter from the Edge installer ISO image and clone that VM template to provision three VMs. Think of a VM template as a snapshot that can be used to provision new VMs. You cannot modify templates after you create them, so cloning the VM template will ensure all VMs have
                  - emphasis [ref=e609]: consistent
                  - text: guest OS, dependencies, and user data configurations installed.
                - paragraph [ref=e610]:
                  - text: This tutorial example will use
                  - link "Packer" [ref=e611] [cursor=pointer]:
                    - /url: https://www.packer.io/
                  - text: to create a VM template from the Edge installer ISO image. Later, it will use
                  - link "GOVC" [ref=e612] [cursor=pointer]:
                    - /url: https://github.com/vmware/govmomi/tree/main/govc#govc
                  - text: to clone the VM template to provision three VMs. You do not have to install Packer or GOVC in your Linux development environment. You will use our official tutorials container that already contains the required tools.
                - heading "Create a VM TemplateDirect link to Create a VM Template" [level=3] [ref=e613]:
                  - text: Create a VM Template
                  - link "Direct link to Create a VM Template" [ref=e614] [cursor=pointer]:
                    - /url: "#create-a-vm-template"
                    - text: "#"
                - paragraph [ref=e615]:
                  - text: You will use the
                  - code [ref=e616]: heredoc
                  - text: script to create a VM template. The script prompts you to enter your VMware vCenter environment details and saves them as environment variables in a file named
                  - code [ref=e617]: .packerenv
                  - text: . Packer reads the environment variables during the build process.
                - paragraph [ref=e618]:
                  - text: Before you invoke the
                  - code [ref=e619]: heredoc
                  - text: script, have values handy in a notepad for the VMWare vCenter environment variables listed in the table.
                - table [ref=e620]:
                  - rowgroup [ref=e621]:
                    - row "Variable Description How to find its value?" [ref=e622]:
                      - cell "Variable" [ref=e623]:
                        - strong [ref=e624]: Variable
                      - cell "Description" [ref=e625]:
                        - strong [ref=e626]: Description
                      - cell "How to find its value?" [ref=e627]:
                        - strong [ref=e628]: How to find its value?
                  - rowgroup [ref=e629]:
                    - 'row "PKR_VAR_vcenter_server vCenter server URL Check with your VMware data center administrator. Omit http:// or https:// in the URL. Example: vcenter.spectrocloud.dev." [ref=e630]':
                      - cell "PKR_VAR_vcenter_server" [ref=e631]:
                        - code [ref=e632]: PKR_VAR_vcenter_server
                      - cell "vCenter server URL" [ref=e633]
                      - 'cell "Check with your VMware data center administrator. Omit http:// or https:// in the URL. Example: vcenter.spectrocloud.dev." [ref=e634]':
                        - text: Check with your VMware data center administrator. Omit
                        - code [ref=e635]: http://
                        - text: or
                        - code [ref=e636]: https://
                        - text: "in the URL. Example:"
                        - code [ref=e637]: vcenter.spectrocloud.dev
                        - text: .
                    - 'row "PKR_VAR_vcenter_username vSphere client username Request credentials from your VMware data center administrator. Example: myusername@vsphere.local" [ref=e638]':
                      - cell "PKR_VAR_vcenter_username" [ref=e639]:
                        - code [ref=e640]: PKR_VAR_vcenter_username
                      - cell "vSphere client username" [ref=e641]
                      - 'cell "Request credentials from your VMware data center administrator. Example: myusername@vsphere.local" [ref=e642]':
                        - text: "Request credentials from your VMware data center administrator. Example:"
                        - code [ref=e643]: myusername@vsphere.local
                    - row "PKR_VAR_vcenter_password vSphere client password --" [ref=e644]:
                      - cell "PKR_VAR_vcenter_password" [ref=e645]:
                        - code [ref=e646]: PKR_VAR_vcenter_password
                      - cell "vSphere client password" [ref=e647]
                      - cell "--" [ref=e648]
                    - row "PKR_VAR_vcenter_datacenter Data center name Expand your vSphere client's main menu and select Inventory > Hosts and Clusters. The data center name is displayed in the left navigation tree." [ref=e649]:
                      - cell "PKR_VAR_vcenter_datacenter" [ref=e650]:
                        - code [ref=e651]: PKR_VAR_vcenter_datacenter
                      - cell "Data center name" [ref=e652]
                      - cell "Expand your vSphere client's main menu and select Inventory > Hosts and Clusters. The data center name is displayed in the left navigation tree." [ref=e653]:
                        - text: Expand your vSphere client's main menu and select
                        - strong [ref=e654]: Inventory
                        - text: ">"
                        - strong [ref=e655]: Hosts and Clusters
                        - text: . The data center name is displayed in the left navigation tree.
                    - row "PKR_VAR_vcenter_cluster Cluster name Expand the data center inventory to view the cluster name in the left navigation tree." [ref=e656]:
                      - cell "PKR_VAR_vcenter_cluster" [ref=e657]:
                        - code [ref=e658]: PKR_VAR_vcenter_cluster
                      - cell "Cluster name" [ref=e659]
                      - cell "Expand the data center inventory to view the cluster name in the left navigation tree." [ref=e660]
                    - row "PKR_VAR_vcenter_resource_pool Resource pool name Expand the cluster inventory to view the resource pool name." [ref=e661]:
                      - cell "PKR_VAR_vcenter_resource_pool" [ref=e662]:
                        - code [ref=e663]: PKR_VAR_vcenter_resource_pool
                      - cell "Resource pool name" [ref=e664]
                      - cell "Expand the cluster inventory to view the resource pool name." [ref=e665]
                    - row "PKR_VAR_vcenter_folder Folder name Switch to the VMs and Templates view in your vSphere client. The folder name is displayed in the left navigation tree." [ref=e666]:
                      - cell "PKR_VAR_vcenter_folder" [ref=e667]:
                        - code [ref=e668]: PKR_VAR_vcenter_folder
                      - cell "Folder name" [ref=e669]
                      - cell "Switch to the VMs and Templates view in your vSphere client. The folder name is displayed in the left navigation tree." [ref=e670]:
                        - text: Switch to the
                        - strong [ref=e671]: VMs and Templates
                        - text: view in your vSphere client. The folder name is displayed in the left navigation tree.
                    - row "PKR_VAR_vcenter_datastore Datastore name Switch to the Storage view in your vSphere client. The datastore name is displayed in the left navigation tree." [ref=e672]:
                      - cell "PKR_VAR_vcenter_datastore" [ref=e673]:
                        - code [ref=e674]: PKR_VAR_vcenter_datastore
                      - cell "Datastore name" [ref=e675]
                      - cell "Switch to the Storage view in your vSphere client. The datastore name is displayed in the left navigation tree." [ref=e676]:
                        - text: Switch to the
                        - strong [ref=e677]: Storage
                        - text: view in your vSphere client. The datastore name is displayed in the left navigation tree.
                    - row "PKR_VAR_vcenter_network Network name Switch to the Networking view in your vSphere client. The network name is displayed in the left navigation tree." [ref=e678]:
                      - cell "PKR_VAR_vcenter_network" [ref=e679]:
                        - code [ref=e680]: PKR_VAR_vcenter_network
                      - cell "Network name" [ref=e681]
                      - cell "Switch to the Networking view in your vSphere client. The network name is displayed in the left navigation tree." [ref=e682]:
                        - text: Switch to the
                        - strong [ref=e683]: Networking
                        - text: view in your vSphere client. The network name is displayed in the left navigation tree.
                - paragraph [ref=e684]:
                  - text: Use the
                  - code [ref=e685]: heredoc
                  - text: script to create the
                  - code [ref=e686]: .packerenv
                  - text: file shown below that contains the VMware vCenter details as environment variables.
                - generic [ref=e688]:
                  - code [ref=e690]:
                    - generic [ref=e691]: cat << EOF > .packerenv
                    - generic [ref=e692]: "PKR_VAR_vcenter_server=$(read -ep 'Enter vCenter Server URL without http:// or https://, for example: vcenter.spectrocloud.dev ' vcenter_server && echo $vcenter_server)"
                    - generic [ref=e693]: "PKR_VAR_vcenter_username=$(read -ep 'Enter vCenter Username value: ' vcenter_username && echo $vcenter_username)"
                    - generic [ref=e694]: "PKR_VAR_vcenter_password=$(read -ep 'Enter vCenter Password value: ' vcenter_password && echo $vcenter_password)"
                    - generic [ref=e695]: "PKR_VAR_vcenter_datacenter=$(read -ep 'Enter vCenter Datacenter name: ' vcenter_datacenter && echo $vcenter_datacenter)"
                    - generic [ref=e696]: "PKR_VAR_vcenter_cluster=$(read -ep 'Enter vCenter Cluster name: ' vcenter_cluster && echo $vcenter_cluster)"
                    - generic [ref=e697]: "PKR_VAR_vcenter_resource_pool=$(read -ep 'Enter vCenter Resource Pool name: ' vcenter_resource_pool && echo $vcenter_resource_pool)"
                    - generic [ref=e698]: "PKR_VAR_vcenter_folder=$(read -ep 'Enter vCenter Folder name: ' vcenter_folder && echo $vcenter_folder)"
                    - generic [ref=e699]: "PKR_VAR_vcenter_datastore=$(read -ep 'Enter vCenter Datastore name: ' vcenter_datastore && echo $vcenter_datastore)"
                    - generic [ref=e700]: "PKR_VAR_vcenter_network=$(read -ep 'Enter vCenter Network name: ' vcenter_network && echo $vcenter_network)"
                    - generic [ref=e701]: EOF
                  - generic [ref=e702]:
                    - button "Toggle word wrap" [ref=e703] [cursor=pointer]:
                      - img [ref=e704]
                    - button "Copy code to clipboard" [ref=e706] [cursor=pointer]:
                      - generic [ref=e707]:
                        - img [ref=e708]
                        - img [ref=e710]
                - paragraph [ref=e712]: View the file to ensure you have filled in the details correctly.
                - generic [ref=e714]:
                  - code [ref=e716]:
                    - generic [ref=e717]: cat .packerenv
                  - button "Copy code to clipboard" [ref=e719] [cursor=pointer]:
                    - generic [ref=e720]:
                      - img [ref=e721]
                      - img [ref=e723]
                - paragraph [ref=e725]:
                  - text: You will use the
                  - code [ref=e726]: .packerenv
                  - text: file later in the tutorial when you start Packer.
                - paragraph [ref=e727]:
                  - text: After you create the
                  - code [ref=e728]: .packerenv
                  - text: file, source this file to set the variables in your environment. Echo one of the variables to ensure the variables are accessible on your host machine.
                - generic [ref=e730]:
                  - code [ref=e732]:
                    - generic [ref=e733]: source .packerenv
                    - generic [ref=e734]: echo $PKR_VAR_vcenter_server
                  - button "Copy code to clipboard" [ref=e736] [cursor=pointer]:
                    - generic [ref=e737]:
                      - img [ref=e738]
                      - img [ref=e740]
                - paragraph [ref=e742]:
                  - text: After you create the
                  - code [ref=e743]: .packerenv
                  - text: file, create another environment variable file named
                  - code [ref=e744]: .goenv
                  - text: .
                  - link "GOVC" [ref=e745] [cursor=pointer]:
                    - /url: https://github.com/vmware/govmomi/blob/main/govc/USAGE.md
                  - text: is the tool you will be using to interact with vSphere, and it requires the same variables that you provided to Packer.
                - generic [ref=e747]:
                  - code [ref=e749]:
                    - generic [ref=e750]: cat << EOF > .goenv
                    - generic [ref=e751]: vcenter_server=$PKR_VAR_vcenter_server
                    - generic [ref=e752]: vcenter_username=$PKR_VAR_vcenter_username
                    - generic [ref=e753]: vcenter_password=$PKR_VAR_vcenter_password
                    - generic [ref=e754]: vcenter_datacenter=$PKR_VAR_vcenter_datacenter
                    - generic [ref=e755]: vcenter_datastore=$PKR_VAR_vcenter_datastore
                    - generic [ref=e756]: vcenter_resource_pool=$PKR_VAR_vcenter_resource_pool
                    - generic [ref=e757]: vcenter_folder=$PKR_VAR_vcenter_folder
                    - generic [ref=e758]: vcenter_cluster=$PKR_VAR_vcenter_cluster
                    - generic [ref=e759]: vcenter_network=$PKR_VAR_vcenter_network
                    - generic [ref=e760]: EOF
                  - button "Copy code to clipboard" [ref=e762] [cursor=pointer]:
                    - generic [ref=e763]:
                      - img [ref=e764]
                      - img [ref=e766]
                - paragraph [ref=e768]: View the file to ensure variable values are set correctly.
                - generic [ref=e770]:
                  - code [ref=e772]:
                    - generic [ref=e773]: cat .goenv
                  - button "Copy code to clipboard" [ref=e775] [cursor=pointer]:
                    - generic [ref=e776]:
                      - img [ref=e777]
                      - img [ref=e779]
                - paragraph [ref=e781]:
                  - text: Next, verify the
                  - code [ref=e782]: ISOFILEPATH
                  - text: local variable has the path to the ISO file. The
                  - code [ref=e783]: docker run
                  - text: command uses this variable to bind mount the host's
                  - code [ref=e784]: build
                  - text: directory to the container.
                - generic [ref=e786]:
                  - code [ref=e788]:
                    - generic [ref=e789]: echo $ISOFILEPATH
                  - button "Copy code to clipboard" [ref=e791] [cursor=pointer]:
                    - generic [ref=e792]:
                      - img [ref=e793]
                      - img [ref=e795]
                - generic [ref=e797]:
                  - generic [ref=e798]:
                    - img [ref=e800]
                    - text: info
                  - paragraph [ref=e803]:
                    - text: The environment variable you set using
                    - code [ref=e804]: export [var-name]=[var-value]
                    - text: will not persist across terminal sessions. If you opened a new terminal session in your development environment, you will lose the
                    - code [ref=e805]: ISOFILEPATH
                    - text: variable and will need to reset it.
                - paragraph [ref=e806]:
                  - text: The next step is to use the following
                  - code [ref=e807]: docker run
                  - text: "command to trigger Packer build process to create a VM template. Here is an explanation of the options and sub-commands used below:"
                - list [ref=e808]:
                  - listitem [ref=e809]:
                    - paragraph [ref=e810]:
                      - text: The
                      - code [ref=e811]: "--env-file"
                      - text: option reads the
                      - code [ref=e812]: .packerenv
                      - text: file.
                  - listitem [ref=e813]:
                    - paragraph [ref=e814]:
                      - text: The
                      - code [ref=e815]: "--volume"
                      - text: option mounts a local directory to our official tutorials container,
                      - code [ref=e816]: ghcr.io/spectrocloud/tutorials:1.1.13
                      - text: .
                  - listitem [ref=e817]:
                    - paragraph [ref=e818]:
                      - text: The
                      - code [ref=e819]: sh -c "source /edge/vmware/clone_vm_template/setenv.sh "
                      - text: shell sub-command defines the GOVC environment variables, the number of VMs, a prefix string for the VM name, and the VM template name. Most of the GOVC environment variables refer to the variables you have defined in the
                      - code [ref=e820]: .goenv
                      - text: file.
                  - listitem [ref=e821]:
                    - paragraph [ref=e822]:
                      - text: The
                      - code [ref=e823]: cd /edge/vmware/packer/ && packer build -force --var-file=vsphere.hcl build.pkr.hcl
                      - text: shell sub-command changes to the container's
                      - code [ref=e824]: /edge/vmware/packer
                      - text: directory and invokes
                      - code [ref=e825]: packer build
                      - text: to create the VM template. The
                      - code [ref=e826]: packer build
                      - text: "command has the following options:"
                    - list [ref=e827]:
                      - listitem [ref=e828]:
                        - text: The
                        - code [ref=e829]: "-force"
                        - text: flag destroys any existing template.
                      - listitem [ref=e830]:
                        - text: The
                        - code [ref=e831]: "--var-file"
                        - text: option reads the
                        - code [ref=e832]: vsphere.hcl
                        - text: file from the container. This file contains the VM template name, VM configuration, and ISO file name to use. The VM configuration conforms to the
                        - link "minimum device requirements" [ref=e833] [cursor=pointer]:
                          - /url: /clusters/edge/hardware-requirements/
                        - text: .
                    - paragraph [ref=e834]:
                      - text: The
                      - code [ref=e835]: vsphere.hcl
                      - text: file content is shown below for your reference. This tutorial does not require you to modify these configurations.
                    - code [ref=e839]:
                      - generic [ref=e840]: "# VM Template Name"
                      - generic [ref=e841]: vm_name = "palette-edge-template"
                      - generic [ref=e842]: "# VM Settings"
                      - generic [ref=e843]: vm_guest_os_type = "ubuntu64Guest"
                      - generic [ref=e844]: vm_version = 14
                      - generic [ref=e845]: vm_firmware = "bios"
                      - generic [ref=e846]: vm_cdrom_type = "sata"
                      - generic [ref=e847]: vm_cpu_sockets = 4
                      - generic [ref=e848]: vm_cpu_cores = 1
                      - generic [ref=e849]: vm_mem_size = 8192
                      - generic [ref=e850]: vm_disk_size = 153600
                      - generic [ref=e851]: thin_provision = true
                      - generic [ref=e852]: disk_eagerly_scrub = false
                      - generic [ref=e853]: vm_disk_controller_type = ["pvscsi"]
                      - generic [ref=e854]: vm_network_card = "vmxnet3"
                      - generic [ref=e855]: vm_boot_wait = "5s"
                      - generic [ref=e856]: "# ISO Objects"
                      - generic [ref=e857]: iso = "build/palette-edge-installer.iso"
                      - generic [ref=e858]: iso_checksum = "build/palette-edge-installer.iso.sha256"
                    - generic [ref=e859]:
                      - generic [ref=e860]:
                        - img [ref=e862]
                        - text: info
                      - paragraph [ref=e865]:
                        - text: Should you need to change the VM template name or VM settings defined in the
                        - code [ref=e866]: vsphere.hcl
                        - text: file, or review the Packer script, you must open a bash session into the container using the
                        - code [ref=e867]: "docker run --interactive --tty --env-file .packerenv --volume \"${ISOFILEPATH}:/edge/vmware/packer/build\" ghcr.io/spectrocloud/tutorials:1.1.13 bash"
                        - text: command, and change to the
                        - code [ref=e868]: edge/vmware/packer
                        - text: directory to make the modifications. After you finish the modifications, issue the
                        - code [ref=e869]: packer build -force --var-file=vsphere.hcl build.pkr.hcl
                        - text: command inside the container to trigger the Packer build process. This command creates a VM template, so that you can skip the next step.
                - paragraph [ref=e870]:
                  - text: Issue the following command to trigger the Packer build process to create a VM template in the VMware vCenter. It will also delete any existing
                  - code [ref=e871]: packer_cache
                  - text: before uploading and keeping a copy of the
                  - code [ref=e872]: palette-edge-installer.iso
                  - text: to the
                  - code [ref=e873]: packer_cache
                  - text: directory in the specified datastore.
                - generic [ref=e875]:
                  - code [ref=e877]:
                    - generic [ref=e878]: docker run --interactive --tty --rm \
                    - generic [ref=e879]: "--env-file .packerenv \\"
                    - generic [ref=e880]: "--env-file .goenv \\"
                    - generic [ref=e881]: "--volume \"${ISOFILEPATH}:/edge/vmware/packer/build\" \\"
                    - generic [ref=e882]: ghcr.io/spectrocloud/tutorials:1.1.13 \
                    - generic [ref=e883]: sh -c "source /edge/vmware/clone_vm_template/setenv.sh && cd /edge/vmware/packer/ && packer init build.pkr.hcl && packer build -force --var-file=vsphere.hcl build.pkr.hcl"
                  - generic [ref=e884]:
                    - button "Toggle word wrap" [ref=e885] [cursor=pointer]:
                      - img [ref=e886]
                    - button "Copy code to clipboard" [ref=e888] [cursor=pointer]:
                      - generic [ref=e889]:
                        - img [ref=e890]
                        - img [ref=e892]
                - paragraph [ref=e894]: Depending on your machine and network, the build process can take 7-10 minutes to finish.
                - code [ref=e898]:
                  - generic [ref=e899]: "# Sample output"
                  - generic [ref=e900]: "==> vsphere-iso.edge-template: Power on VM..."
                  - generic [ref=e901]: "vsphere-iso.edge-template: Please shutdown virtual machine within 20m0s."
                  - generic [ref=e902]: "==> vsphere-iso.edge-template: Deleting Floppy drives..."
                  - generic [ref=e903]: "==> vsphere-iso.edge-template: Eject CD-ROM drives..."
                  - generic [ref=e904]: "==> vsphere-iso.edge-template: Deleting CD-ROM drives..."
                  - generic [ref=e905]: "==> vsphere-iso.edge-template: Convert VM into template..."
                  - generic [ref=e906]: Build 'vsphere-iso.edge-template' finished after 7 minutes 13 seconds.
                  - generic [ref=e907]: ==> Wait completed after 7 minutes 13 seconds
                  - generic [ref=e908]: "==> Builds finished. The artifacts of successful builds are:"
                  - generic [ref=e909]: "--> vsphere-iso.edge-template: palette-edge-template"
                - heading "Provision VMsDirect link to Provision VMs" [level=3] [ref=e910]:
                  - text: Provision VMs
                  - link "Direct link to Provision VMs" [ref=e911] [cursor=pointer]:
                    - /url: "#provision-vms"
                    - text: "#"
                - paragraph [ref=e912]:
                  - text: Once Packer creates the VM template, you can use the template when provisioning VMs. In the next steps, you will use the
                  - link "GOVC" [ref=e913] [cursor=pointer]:
                    - /url: https://github.com/vmware/govmomi/tree/main/govc#govc
                  - text: tool to deploy a VM and reference the VM template that Packer created. Remember that the VM instances you are deploying simulate bare metal devices.
                - paragraph [ref=e914]:
                  - text: GOVC requires the same VMware vCenter details as the environment variables you defined earlier in the
                  - code [ref=e915]: .goenv
                  - text: file.
                - paragraph [ref=e916]:
                  - text: The next step is to use the following
                  - code [ref=e917]: docker run
                  - text: "command to clone the VM template and provision three VMs. Here is an explanation of the options and sub-commands used below:"
                - list [ref=e918]:
                  - listitem [ref=e919]:
                    - paragraph [ref=e920]:
                      - text: The
                      - code [ref=e921]: "--env-file"
                      - text: option reads the
                      - code [ref=e922]: .goenv
                      - text: file in our official
                      - code [ref=e923]: ghcr.io/spectrocloud/tutorials:1.1.13
                      - text: tutorials container.
                  - listitem [ref=e924]:
                    - paragraph [ref=e925]:
                      - text: The
                      - code [ref=e926]: sh -c "cd edge/vmware/clone_vm_template/ && ./deploy-edge-host.sh"
                      - text: shell sub-command changes to the container's
                      - code [ref=e927]: edge/vmware/clone_vm_template
                      - text: directory and invokes the
                      - code [ref=e928]: deploy-edge-host.sh
                      - text: shell script.
                - paragraph [ref=e929]:
                  - text: The
                  - code [ref=e930]: edge/vmware/clone_vm_template
                  - text: "directory in the container has the following files:"
                - list [ref=e931]:
                  - listitem [ref=e932]:
                    - paragraph [ref=e933]:
                      - code [ref=e934]: deploy-edge-host.sh
                      - text: "- Provisions the VMs."
                  - listitem [ref=e935]:
                    - paragraph [ref=e936]:
                      - code [ref=e937]: delete-edge-host.sh
                      - text: "- Deletes the VMs."
                  - listitem [ref=e938]:
                    - paragraph [ref=e939]:
                      - code [ref=e940]: setenv.sh
                      - text: "- Defines the GOVC environment variables, the number of VMs, a prefix string for the VM name, and the VM template name. Most of the GOVC environment variables refer to the variables you have defined in the"
                      - code [ref=e941]: .goenv
                      - text: file.
                - paragraph [ref=e942]:
                  - text: Below is the
                  - code [ref=e943]: setenv.sh
                  - text: file content for your reference. This tutorial does not require you to modify these configurations.
                - generic [ref=e945]:
                  - code [ref=e947]:
                    - generic [ref=e948]: "#!/bin/bash"
                    - generic [ref=e949]: "# Number of VMs to provision"
                    - generic [ref=e950]: export NO_OF_VMS=3
                    - generic [ref=e951]: export VM_PREFIX="demo"
                    - generic [ref=e952]: export INSTALLER_TEMPLATE="palette-edge-template"
                    - generic [ref=e953]: "#### DO NOT MODIFY BELOW HERE ####################"
                    - generic [ref=e954]: "# GOVC Properties"
                    - generic [ref=e955]: "export GOVC_URL=\"https://${vcenter_server}\" # Use HTTPS. For example, https://vcenter.company.com"
                    - generic [ref=e956]: "export GOVC_USERNAME=\"${vcenter_username}\""
                    - generic [ref=e957]: "export GOVC_PASSWORD=\"${vcenter_password}\""
                    - generic [ref=e958]: "export GOVC_INSECURE=1 #1 if insecure"
                    - generic [ref=e959]: "export GOVC_DATACENTER=\"${vcenter_datacenter}\""
                    - generic [ref=e960]: "export GOVC_DATASTORE=\"${vcenter_datastore}\""
                    - generic [ref=e961]: "export GOVC_NETWORK=\"${vcenter_network}\""
                    - generic [ref=e962]: "export GOVC_RESOURCE_POOL=\"${vcenter_resource_pool}\""
                    - generic [ref=e963]: "export GOVC_FOLDER=\"${vcenter_folder}\""
                  - button "Toggle word wrap" [ref=e965] [cursor=pointer]:
                    - img [ref=e966]
                - generic [ref=e968]:
                  - generic [ref=e969]:
                    - img [ref=e971]
                    - text: info
                  - paragraph [ref=e974]:
                    - text: Suppose you have changed the VM template name in the previous step or need to change the number of VMs to provision. In that case, you must modify the
                    - code [ref=e975]: setenv.sh
                    - text: script. To do so, you can reuse the container bash session from the previous step if it is still active, or you can open another bash session into the container using the
                    - code [ref=e976]: docker run --interactive --tty --env-file .goenv ghcr.io/spectrocloud/tutorials:1.1.13 bash
                    - text: command. If you use an existing container bash session, create the
                    - code [ref=e977]: .goenv
                    - text: file described above and source it in your container environment. Next, change to the
                    - code [ref=e978]: edge/vmware/clone_vm_template
                    - text: directory to modify the
                    - code [ref=e979]: setenv.sh
                    - text: script, and issue the
                    - code [ref=e980]: ./deploy-edge-host.sh
                    - text: command to deploy the VMs.
                - paragraph [ref=e981]: Issue the following command to clone the VM template and provision three VMs.
                - generic [ref=e983]:
                  - code [ref=e985]:
                    - generic [ref=e986]: docker run --interactive --tty --rm \
                    - generic [ref=e987]: "--env-file .goenv \\"
                    - generic [ref=e988]: ghcr.io/spectrocloud/tutorials:1.1.13 \
                    - generic [ref=e989]: sh -c "cd edge/vmware/clone_vm_template/ && ./deploy-edge-host.sh"
                  - generic [ref=e990]:
                    - button "Toggle word wrap" [ref=e991] [cursor=pointer]:
                      - img [ref=e992]
                    - button "Copy code to clipboard" [ref=e994] [cursor=pointer]:
                      - generic [ref=e995]:
                        - img [ref=e996]
                        - img [ref=e998]
                - paragraph [ref=e1000]: The cloning process can take 3-4 minutes to finish and displays output similar to that shown below. The output displays the Edge host ID for each VM, as highlighted in the sample output below. VMs use this host ID to auto-register with Palette.
                - generic [ref=e1002]:
                  - code [ref=e1004]:
                    - generic [ref=e1005]: "# Sample output for one VM"
                    - generic [ref=e1006]: Cloning /Datacenter/vm/sp-sudhanshu/palette-edge-template to demo-1...OK
                    - generic [ref=e1007]: Cloned VM demo-1
                    - generic [ref=e1008]: Powering on VM demo-1
                    - generic [ref=e1009]: Powering on VirtualMachine:vm-13436... OK
                    - generic [ref=e1010]: Getting UUID demo-1
                    - generic [ref=e1011]: "Edge Host ID VM demo-1 : edge-97f2384233b498f6aa8dec90c3437c28"
                  - button "Toggle word wrap" [ref=e1013] [cursor=pointer]:
                    - img [ref=e1014]
                - paragraph [ref=e1016]:
                  - text: For each of the three VMs, copy the Edge host ID. An Edge host ID looks similar to
                  - code [ref=e1017]: edge-97f2384233b498f6aa8dec90c3437c28
                  - text: .
                - generic [ref=e1018]:
                  - generic [ref=e1019]:
                    - img [ref=e1021]
                    - text: warning
                  - paragraph [ref=e1024]: You must copy the Edge host IDs for future reference. In addition, if auto registration fails you will need the Edge host IDs to manually register Edge hosts in Palette.
                - heading "Verify Host RegistrationDirect link to Verify Host Registration" [level=2] [ref=e1025]:
                  - text: Verify Host Registration
                  - link "Direct link to Verify Host Registration" [ref=e1026] [cursor=pointer]:
                    - /url: "#verify-host-registration"
                    - text: "#"
                - paragraph [ref=e1027]: Before deploying a cluster, you must verify Edge host registration status in Palette.
                - paragraph [ref=e1028]:
                  - text: Open a web browser and log in to
                  - link "Palette" [ref=e1029] [cursor=pointer]:
                    - /url: https://console.spectrocloud.com
                  - text: . Navigate to the left
                  - strong [ref=e1030]: Main Menu
                  - text: and select
                  - strong [ref=e1031]: Clusters
                  - text: . Click on the
                  - strong [ref=e1032]: Edge Hosts
                  - text: tab and verify the three VMs you created are registered with Palette.
                - paragraph [ref=e1033]:
                  - img "A screenshot showing the VMs automatically registered with Palette." [ref=e1034]
                - paragraph [ref=e1035]:
                  - text: If the three Edge hosts are not displayed in the
                  - strong [ref=e1036]: Edge hosts
                  - text: tab, the automatic registration failed. If this happens, you can manually register hosts by clicking the
                  - strong [ref=e1037]: Add Edge Hosts
                  - text: button and pasting the Edge host ID. Repeat this host registration process for each of the three VMs. If you need help, the detailed instructions are available in the
                  - link "Register Edge Host" [ref=e1038] [cursor=pointer]:
                    - /url: /clusters/edge/site-deployment/site-installation/edge-host-registration/
                  - text: guide.
                - heading "Deploy a ClusterDirect link to Deploy a Cluster" [level=2] [ref=e1039]:
                  - text: Deploy a Cluster
                  - link "Direct link to Deploy a Cluster" [ref=e1040] [cursor=pointer]:
                    - /url: "#deploy-a-cluster"
                    - text: "#"
                - paragraph [ref=e1041]: Once you verify the host registration, the next step is to deploy a cluster. In this section, you will use the Palette User Interface (UI) to deploy a cluster that is made up of the three Edge hosts you deployed.
                - heading "Create a Cluster ProfileDirect link to Create a Cluster Profile" [level=2] [ref=e1042]:
                  - text: Create a Cluster Profile
                  - link "Direct link to Create a Cluster Profile" [ref=e1043] [cursor=pointer]:
                    - /url: "#create-a-cluster-profile"
                    - text: "#"
                - paragraph [ref=e1044]:
                  - text: Validate you are in the
                  - strong [ref=e1045]: Default
                  - text: project scope before creating a cluster profile.
                - paragraph [ref=e1046]:
                  - img "A screenshot of Palette&#39;s Default scope selected." [ref=e1047]
                - paragraph [ref=e1048]:
                  - text: Next, create a cluster profile with the core infrastructure layers and a manifest of a sample application,
                  - link "Hello Universe" [ref=e1049] [cursor=pointer]:
                    - /url: https://github.com/spectrocloud/hello-universe#hello-universe
                  - text: . Navigate to the left
                  - strong [ref=e1050]: Main Menu
                  - text: and select
                  - strong [ref=e1051]: Profiles
                  - text: . Click on the
                  - strong [ref=e1052]: Add Cluster Profile
                  - text: button, and fill out the required input fields. The cluster profile wizard contains the following sections.
                - heading "Basic InformationDirect link to Basic Information" [level=3] [ref=e1053]:
                  - text: Basic Information
                  - link "Direct link to Basic Information" [ref=e1054] [cursor=pointer]:
                    - /url: "#basic-information"
                    - text: "#"
                - paragraph [ref=e1055]:
                  - text: Use the following values when filling out the
                  - strong [ref=e1056]: Basic Information
                  - text: section.
                - table [ref=e1057]:
                  - rowgroup [ref=e1058]:
                    - row "Field Value" [ref=e1059]:
                      - cell "Field" [ref=e1060]:
                        - strong [ref=e1061]: Field
                      - cell "Value" [ref=e1062]:
                        - strong [ref=e1063]: Value
                  - rowgroup [ref=e1064]:
                    - row "Name docs-ubuntu-k3s" [ref=e1065]:
                      - cell "Name" [ref=e1066]
                      - cell "docs-ubuntu-k3s" [ref=e1067]
                    - row "Version 1.0.0" [ref=e1068]:
                      - cell "Version" [ref=e1069]
                      - cell "1.0.0" [ref=e1070]:
                        - code [ref=e1071]: 1.0.0
                    - row "Description Cluster profile as part of the edge cluster deployment tutorial." [ref=e1072]:
                      - cell "Description" [ref=e1073]
                      - cell "Cluster profile as part of the edge cluster deployment tutorial." [ref=e1074]
                    - row "Type Full" [ref=e1075]:
                      - cell "Type" [ref=e1076]
                      - cell "Full" [ref=e1077]
                    - row "Tags spectro-cloud-education, app:hello-universe, terraform_managed:false" [ref=e1078]:
                      - cell "Tags" [ref=e1079]
                      - cell "spectro-cloud-education, app:hello-universe, terraform_managed:false" [ref=e1080]:
                        - code [ref=e1081]: spectro-cloud-education, app:hello-universe, terraform_managed:false
                - paragraph [ref=e1082]:
                  - text: Click on
                  - strong [ref=e1083]: Next
                  - text: to continue.
                - heading "Cloud TypeDirect link to Cloud Type" [level=3] [ref=e1084]:
                  - text: Cloud Type
                  - link "Direct link to Cloud Type" [ref=e1085] [cursor=pointer]:
                    - /url: "#cloud-type"
                    - text: "#"
                - paragraph [ref=e1086]:
                  - text: In the
                  - strong [ref=e1087]: Cloud Type
                  - text: section, choose
                  - strong [ref=e1088]: Edge Native
                  - text: and click on
                  - strong [ref=e1089]: Next
                  - text: at the bottom to proceed to the next section.
                - heading "Profile LayersDirect link to Profile Layers" [level=3] [ref=e1090]:
                  - text: Profile Layers
                  - link "Direct link to Profile Layers" [ref=e1091] [cursor=pointer]:
                    - /url: "#profile-layers"
                    - text: "#"
                - paragraph [ref=e1092]:
                  - text: In the
                  - strong [ref=e1093]: Profile Layers
                  - text: section, add the following
                  - link "BYOS Edge OS" [ref=e1094] [cursor=pointer]:
                    - /url: /integrations/packs/?pack=generic-byoi
                  - text: pack to the OS layer.
                - table [ref=e1095]:
                  - rowgroup [ref=e1096]:
                    - row "Pack Type Registry Pack Name Pack Version" [ref=e1097]:
                      - cell "Pack Type" [ref=e1098]:
                        - strong [ref=e1099]: Pack Type
                      - cell "Registry" [ref=e1100]:
                        - strong [ref=e1101]: Registry
                      - cell "Pack Name" [ref=e1102]:
                        - strong [ref=e1103]: Pack Name
                      - cell "Pack Version" [ref=e1104]:
                        - strong [ref=e1105]: Pack Version
                  - rowgroup [ref=e1106]:
                    - row "OS Public Repo BYOS Edge OS Not applicable" [ref=e1107]:
                      - cell "OS" [ref=e1108]
                      - cell "Public Repo" [ref=e1109]
                      - cell "BYOS Edge OS" [ref=e1110]
                      - cell "Not applicable" [ref=e1111]
                - paragraph [ref=e1112]:
                  - text: Replace the OS layer manifest with the custom manifest so that the cluster profile can pull the provider image from the
                  - emphasis [ref=e1113]: ttl.sh
                  - text: image registry. You may recall that the CanvOS script returned an output containing a custom manifest after building the Edge artifacts. Copy the CanvOS output into the cluster profile's BYOOS pack YAML file.
                - paragraph [ref=e1114]:
                  - text: The
                  - code [ref=e1115]: system.xxxxx
                  - text: attribute values in the manifest are as same as those you defined in the
                  - code [ref=e1116]: .arg
                  - text: file while building the Edge artifacts. The code snippet below serves as an example.
                - generic [ref=e1118]:
                  - code [ref=e1120]:
                    - generic [ref=e1121]: "pack:"
                    - generic [ref=e1122]: "content:"
                    - generic [ref=e1123]: "images:"
                    - generic [ref=e1124]: "- image: \"{{.spectro.pack.edge-native-byoi.options.system.uri}}\""
                    - generic [ref=e1125]: "options:"
                    - generic [ref=e1126]: "system.uri:"
                    - generic [ref=e1127]: "\"{{ .spectro.pack.edge-native-byoi.options.system.registry }}/{{ .spectro.pack.edge-native-byoi.options.system.repo"
                    - generic [ref=e1128]: "}}:{{ .spectro.pack.edge-native-byoi.options.system.k8sDistribution }}-{{ .spectro.system.kubernetes.version }}-{{"
                    - generic [ref=e1129]: ".spectro.pack.edge-native-byoi.options.system.peVersion }}-{{"
                    - generic [ref=e1130]: ".spectro.pack.edge-native-byoi.options.system.customTag }}\""
                    - generic [ref=e1131]: "system.registry: ttl.sh"
                    - generic [ref=e1132]: "system.repo: ubuntu"
                    - generic [ref=e1133]: "system.k8sDistribution: k3s"
                    - generic [ref=e1134]: "system.osName: ubuntu"
                    - generic [ref=e1135]: "system.peVersion: v4.6.12"
                    - generic [ref=e1136]: "system.customTag: demo"
                    - generic [ref=e1137]: "system.osVersion: 22"
                  - generic [ref=e1138]:
                    - button "Toggle word wrap" [ref=e1139] [cursor=pointer]:
                      - img [ref=e1140]
                    - button "Copy code to clipboard" [ref=e1142] [cursor=pointer]:
                      - generic [ref=e1143]:
                        - img [ref=e1144]
                        - img [ref=e1146]
                - paragraph [ref=e1148]:
                  - text: The screenshot below shows you how to reference your provider OS image in a cluster profile by using the utility build output with the BYOOS pack.
                  - img "A screenshot of k3s OS layer in a cluster profile." [ref=e1149]
                - generic [ref=e1150]:
                  - generic [ref=e1151]:
                    - img [ref=e1153]
                    - text: warning
                  - paragraph [ref=e1156]:
                    - emphasis [ref=e1157]: ttl.sh
                    - text: is a short-lived image registry. If you do not use the provider image in your cluster profile within 24 hours of pushing to
                    - emphasis [ref=e1158]: ttl.sh
                    - text: ", they will no longer exist and must be re-pushed. In a production environment, use a custom registry for hosting provider images."
                - paragraph [ref=e1159]:
                  - text: Click on the
                  - strong [ref=e1160]: Next layer
                  - text: button to add the following Kubernetes layer to your cluster profile.
                - table [ref=e1161]:
                  - rowgroup [ref=e1162]:
                    - row "Pack Type Registry Pack Name Pack Version" [ref=e1163]:
                      - cell "Pack Type" [ref=e1164]:
                        - strong [ref=e1165]: Pack Type
                      - cell "Registry" [ref=e1166]:
                        - strong [ref=e1167]: Registry
                      - cell "Pack Name" [ref=e1168]:
                        - strong [ref=e1169]: Pack Name
                      - cell "Pack Version" [ref=e1170]:
                        - strong [ref=e1171]: Pack Version
                  - rowgroup [ref=e1172]:
                    - row "Kubernetes Public Repo Palette Optimized K3s 1.32.1" [ref=e1173]:
                      - cell "Kubernetes" [ref=e1174]
                      - cell "Public Repo" [ref=e1175]
                      - cell "Palette Optimized K3s" [ref=e1176]
                      - cell "1.32.1" [ref=e1177]:
                        - code [ref=e1178]: 1.32.1
                - paragraph [ref=e1179]:
                  - text: The pack version must match the version pushed to the
                  - emphasis [ref=e1180]: ttl.sh
                  - text: image registry. The
                  - code [ref=e1181]: system.uri
                  - text: attribute of the BYOOS pack will reference the Kubernetes version you select using the
                  - code [ref=e1182]: "{{ .spectro.system.kubernetes.version }}"
                  - link "macro" [ref=e1183] [cursor=pointer]:
                    - /url: /clusters/cluster-management/macros/
                  - text: .
                - paragraph [ref=e1184]:
                  - text: Click on the
                  - strong [ref=e1185]: Next layer
                  - text: button, and add the following network layer. This example uses the Calico Container Network Interface (CNI). However, you can choose a different CNI pack that fits your needs, such as Flannel, Cilium, or Custom CNI.
                - table [ref=e1186]:
                  - rowgroup [ref=e1187]:
                    - row "Pack Type Registry Pack Name Pack Version" [ref=e1188]:
                      - cell "Pack Type" [ref=e1189]:
                        - strong [ref=e1190]: Pack Type
                      - cell "Registry" [ref=e1191]:
                        - strong [ref=e1192]: Registry
                      - cell "Pack Name" [ref=e1193]:
                        - strong [ref=e1194]: Pack Name
                      - cell "Pack Version" [ref=e1195]:
                        - strong [ref=e1196]: Pack Version
                  - rowgroup [ref=e1197]:
                    - row "Network Public Repo Calico 3.25.x" [ref=e1198]:
                      - cell "Network" [ref=e1199]
                      - cell "Public Repo" [ref=e1200]
                      - cell "Calico" [ref=e1201]
                      - cell "3.25.x" [ref=e1202]:
                        - code [ref=e1203]: 3.25.x
                - paragraph [ref=e1204]:
                  - text: Click on the
                  - strong [ref=e1205]: Confirm
                  - text: button to complete the core infrastructure stack. Palette displays the newly created infrastructure profile as a layered diagram.
                - paragraph [ref=e1206]:
                  - text: Finally, click on the
                  - strong [ref=e1207]: Add Manifest
                  - text: button to add the
                  - link "Hello Universe" [ref=e1208] [cursor=pointer]:
                    - /url: https://github.com/spectrocloud/hello-universe#readme
                  - text: application manifest.
                - paragraph [ref=e1209]:
                  - img "A screenshot of the add Manifest button." [ref=e1210]
                - paragraph [ref=e1211]: Use the following values to add the Hello Universe manifest metadata.
                - table [ref=e1212]:
                  - rowgroup [ref=e1213]:
                    - row "Field Value" [ref=e1214]:
                      - cell "Field" [ref=e1215]:
                        - strong [ref=e1216]: Field
                      - cell "Value" [ref=e1217]:
                        - strong [ref=e1218]: Value
                  - rowgroup [ref=e1219]:
                    - row "Layer name hello-universe" [ref=e1220]:
                      - cell "Layer name" [ref=e1221]
                      - cell "hello-universe" [ref=e1222]
                    - row "Layer values (Optional) Leave default" [ref=e1223]:
                      - cell "Layer values (Optional)" [ref=e1224]
                      - cell "Leave default" [ref=e1225]
                    - row "Install order (Optional) Leave default" [ref=e1226]:
                      - cell "Install order (Optional)" [ref=e1227]
                      - cell "Leave default" [ref=e1228]
                    - row "Manifests Add new manifest, and name it hello-universe" [ref=e1229]:
                      - cell "Manifests" [ref=e1230]
                      - cell "Add new manifest, and name it hello-universe" [ref=e1231]:
                        - text: Add new manifest, and name it
                        - code [ref=e1232]: hello-universe
                - paragraph [ref=e1233]:
                  - text: When you provide the
                  - code [ref=e1234]: hello-universe
                  - text: value in the
                  - strong [ref=e1235]: Manifest
                  - text: field, a blank text editor opens at right. Copy the following manifest and paste it into the text editor.
                - generic [ref=e1237]:
                  - code [ref=e1239]:
                    - generic [ref=e1240]: "apiVersion: v1"
                    - generic [ref=e1241]: "kind: Service"
                    - generic [ref=e1242]: "metadata:"
                    - generic [ref=e1243]: "name: hello-universe-service"
                    - generic [ref=e1244]: "spec:"
                    - generic [ref=e1245]: "type: NodePort"
                    - generic [ref=e1246]: "selector:"
                    - generic [ref=e1247]: "app: hello-universe"
                    - generic [ref=e1248]: "ports:"
                    - generic [ref=e1249]: "- protocol: TCP"
                    - generic [ref=e1250]: "port: 8080"
                    - generic [ref=e1251]: "targetPort: 8080"
                    - generic [ref=e1252]: "---"
                    - generic [ref=e1253]: "apiVersion: apps/v1"
                    - generic [ref=e1254]: "kind: Deployment"
                    - generic [ref=e1255]: "metadata:"
                    - generic [ref=e1256]: "name: hello-universe-deployment"
                    - generic [ref=e1257]: "spec:"
                    - generic [ref=e1258]: "replicas: 2"
                    - generic [ref=e1259]: "selector:"
                    - generic [ref=e1260]: "matchLabels:"
                    - generic [ref=e1261]: "app: hello-universe"
                    - generic [ref=e1262]: "template:"
                    - generic [ref=e1263]: "metadata:"
                    - generic [ref=e1264]: "labels:"
                    - generic [ref=e1265]: "app: hello-universe"
                    - generic [ref=e1266]: "spec:"
                    - generic [ref=e1267]: "containers:"
                    - generic [ref=e1268]: "- name: hello-universe"
                    - generic [ref=e1269]: "image: ghcr.io/spectrocloud/hello-universe:1.0.12"
                    - generic [ref=e1270]: "imagePullPolicy: IfNotPresent"
                    - generic [ref=e1271]: "ports:"
                    - generic [ref=e1272]: "- containerPort: 8080"
                  - button "Copy code to clipboard" [ref=e1274] [cursor=pointer]:
                    - generic [ref=e1275]:
                      - img [ref=e1276]
                      - img [ref=e1278]
                - paragraph [ref=e1280]:
                  - text: The screenshot below shows the manifest pasted into the text editor. Click on the
                  - strong [ref=e1281]: Confirm & Create
                  - text: button to finish adding the manifest.
                - paragraph [ref=e1282]:
                  - img "A screenshot of Hello Universe application manifest." [ref=e1283]
                - paragraph [ref=e1284]:
                  - text: If there are no errors or compatibility issues, Palette displays the newly created full cluster profile for review. Verify the layers you added, and click on the
                  - strong [ref=e1285]: Next
                  - text: button.
                - paragraph [ref=e1286]:
                  - text: Review all layers and click
                  - strong [ref=e1287]: Finish Configuration
                  - text: to create the cluster profile.
                - heading "Create a ClusterDirect link to Create a Cluster" [level=2] [ref=e1288]:
                  - text: Create a Cluster
                  - link "Direct link to Create a Cluster" [ref=e1289] [cursor=pointer]:
                    - /url: "#create-a-cluster"
                    - text: "#"
                - paragraph [ref=e1290]:
                  - text: Click on the newly created cluster profile to view its details page. Click the
                  - strong [ref=e1291]: Deploy
                  - text: button to deploy a new Edge cluster.
                - paragraph [ref=e1292]:
                  - img "Screenshot of the Profile Layers success." [ref=e1293]
                - paragraph [ref=e1294]: The cluster deployment wizard displays the following sections.
                - heading "Basic InformationDirect link to Basic Information" [level=3] [ref=e1295]:
                  - text: Basic Information
                  - link "Direct link to Basic Information" [ref=e1296] [cursor=pointer]:
                    - /url: "#basic-information-1"
                    - text: "#"
                - paragraph [ref=e1297]:
                  - text: Use the following values in the
                  - strong [ref=e1298]: Basic Information
                  - text: section.
                - table [ref=e1299]:
                  - rowgroup [ref=e1300]:
                    - row "Field Value" [ref=e1301]:
                      - cell "Field" [ref=e1302]:
                        - strong [ref=e1303]: Field
                      - cell "Value" [ref=e1304]:
                        - strong [ref=e1305]: Value
                  - rowgroup [ref=e1306]:
                    - row "Cluster name docs-tutorial-cluster" [ref=e1307]:
                      - cell "Cluster name" [ref=e1308]
                      - cell "docs-tutorial-cluster" [ref=e1309]
                    - row "Description Cluster as part of the Edge tutorial." [ref=e1310]:
                      - cell "Description" [ref=e1311]
                      - cell "Cluster as part of the Edge tutorial." [ref=e1312]
                    - row "Tags spectro-cloud-education, app:hello-universe, terraform_managed:false" [ref=e1313]:
                      - cell "Tags" [ref=e1314]
                      - cell "spectro-cloud-education, app:hello-universe, terraform_managed:false" [ref=e1315]:
                        - code [ref=e1316]: spectro-cloud-education, app:hello-universe, terraform_managed:false
                - paragraph [ref=e1317]:
                  - text: Click
                  - strong [ref=e1318]: Next
                  - text: to continue.
                - heading "ParametersDirect link to Parameters" [level=3] [ref=e1319]:
                  - text: Parameters
                  - link "Direct link to Parameters" [ref=e1320] [cursor=pointer]:
                    - /url: "#parameters"
                    - text: "#"
                - paragraph [ref=e1321]:
                  - text: The
                  - strong [ref=e1322]: Parameters
                  - text: section offers you another opportunity to change the profile configuration. For example, clicking on the
                  - strong [ref=e1323]: BYOS Edge OS 1.0.0
                  - text: layer allows you to configure the
                  - code [ref=e1324]: system.registry
                  - text: ","
                  - code [ref=e1325]: system.repo
                  - text: ", and other available attributes."
                - paragraph [ref=e1326]:
                  - text: Use the default values for all attributes across all layers and click
                  - strong [ref=e1327]: Next
                  - text: .
                - heading "Cluster configurationDirect link to Cluster configuration" [level=3] [ref=e1328]:
                  - text: Cluster configuration
                  - link "Direct link to Cluster configuration" [ref=e1329] [cursor=pointer]:
                    - /url: "#cluster-configuration"
                    - text: "#"
                - paragraph [ref=e1330]: Provide the Virtual IP (VIP) address for the host cluster to use during the cluster configuration process. An Edge cluster virtual IP represents the entire cluster, and external clients or applications can use it to access services the Edge cluster provides. Ask your system administrator for an IP address you can use. It must be unique and not conflict with any other IP addresses in the network.
                - paragraph [ref=e1331]: If available, you can optionally select an SSH key to remote into the host cluster and provide a Network Time Protocol (NTP) server list.
                - paragraph [ref=e1332]:
                  - text: Click
                  - strong [ref=e1333]: Next
                  - text: to continue.
                - heading "Nodes configurationDirect link to Nodes configuration" [level=3] [ref=e1334]:
                  - text: Nodes configuration
                  - link "Direct link to Nodes configuration" [ref=e1335] [cursor=pointer]:
                    - /url: "#nodes-configuration"
                    - text: "#"
                - paragraph [ref=e1336]: In this section, you will use the Edge hosts to create the cluster nodes. Use one of the Edge hosts as the control plane node and the remaining two as worker nodes. In this example, the control plane node is called the control plane pool, and the set of worker nodes is the worker pool.
                - paragraph [ref=e1337]:
                  - text: In the
                  - strong [ref=e1338]: CONTROL-PLANE POOL CONFIGURATION
                  - text: section, under
                  - strong [ref=e1339]: Pool Configuration
                  - text: ", select"
                  - strong [ref=e1340]: Add Edge Hosts
                  - text: ", and choose one of the registered Edge hosts. The screenshot below shows an Edge host added to the control plane pool."
                - paragraph [ref=e1341]:
                  - img "Screenshot of an Edge host added to the control plane pool." [ref=e1342]
                - paragraph [ref=e1343]:
                  - text: This tutorial does not require you to modify the default values of the
                  - strong [ref=e1344]: CONTROL-PLANE POOL CONFIGURATION
                  - text: fields or configure the hosts.
                - paragraph [ref=e1345]:
                  - text: In the
                  - strong [ref=e1346]: WORKER POOL CONFIGURATION
                  - text: section, under
                  - strong [ref=e1347]: Pool Configuration
                  - text: ", select"
                  - strong [ref=e1348]: Add Edge Hosts
                  - text: ", and choose the remaining two Edge hosts. The screenshot below shows two Edge hosts added to the worker pool."
                - paragraph [ref=e1349]:
                  - img "Screenshot of Edge hosts added to the worker pool." [ref=e1350]
                - paragraph [ref=e1351]:
                  - text: This tutorial does not require you to modify the default values of the
                  - strong [ref=e1352]: WORKER POOL CONFIGURATION
                  - text: fields or configure the hosts.
                - paragraph [ref=e1353]:
                  - text: Click
                  - strong [ref=e1354]: Next
                  - text: to continue.
                - heading "SettingsDirect link to Settings" [level=3] [ref=e1355]:
                  - text: Settings
                  - link "Direct link to Settings" [ref=e1356] [cursor=pointer]:
                    - /url: "#settings"
                    - text: "#"
                - paragraph [ref=e1357]:
                  - text: This section displays options for OS patching, scheduled scans, scheduled backups, cluster role binding, and location. Use the default values, and click on the
                  - strong [ref=e1358]: Validate
                  - text: button.
                - heading "ReviewDirect link to Review" [level=3] [ref=e1359]:
                  - text: Review
                  - link "Direct link to Review" [ref=e1360] [cursor=pointer]:
                    - /url: "#review"
                    - text: "#"
                - paragraph [ref=e1361]:
                  - text: Review all configurations in this section. The
                  - strong [ref=e1362]: Review
                  - text: page displays the cluster name, tags, node pools, and layers. If everything looks good, click on the
                  - strong [ref=e1363]: Finish Configuration
                  - text: button to finish deploying the cluster. Deployment may take up to
                  - emphasis [ref=e1364]: 20 minutes
                  - text: to finish.
                - paragraph [ref=e1365]:
                  - text: While deployment is in progress, Palette displays the cluster status as
                  - strong [ref=e1366]: Provisioning
                  - text: . While you wait for the cluster to finish deploying, you can explore the various tabs on the cluster details page, such as
                  - strong [ref=e1367]: Overview
                  - text: ","
                  - strong [ref=e1368]: Workloads
                  - text: ", and"
                  - strong [ref=e1369]: Events
                  - text: .
                - heading "ValidateDirect link to Validate" [level=2] [ref=e1370]:
                  - text: Validate
                  - link "Direct link to Validate" [ref=e1371] [cursor=pointer]:
                    - /url: "#validate"
                    - text: "#"
                - paragraph [ref=e1372]:
                  - text: In Palette, navigate to the left
                  - strong [ref=e1373]: Main Menu
                  - text: and select
                  - strong [ref=e1374]: Clusters
                  - text: . Select your cluster to display the cluster
                  - strong [ref=e1375]: Overview
                  - text: page and monitor cluster provisioning progress.
                - paragraph [ref=e1376]:
                  - text: When cluster status displays
                  - strong [ref=e1377]: Running
                  - text: and
                  - strong [ref=e1378]: Healthy
                  - text: ", you can access the application from the exposed service URL with the port number displayed. One random port between 30000-32767 is exposed for the Hello Universe application. Click on the port number to access the application."
                - paragraph [ref=e1379]: The screenshot below highlights the NodePort to access the application.
                - paragraph [ref=e1380]:
                  - img "Screenshot of highlighted NodePort to access the application." [ref=e1381]
                - paragraph [ref=e1382]: Clicking on the exposed NodePort displays the Hello Universe application.
                - generic [ref=e1383]:
                  - generic [ref=e1384]:
                    - img [ref=e1386]
                    - text: warning
                  - paragraph [ref=e1389]: We recommend waiting to click on the service URL, as it takes one to three minutes for DNS to properly resolve the public NodePort URL. This prevents the browser from caching an unresolved DNS request.
                - paragraph [ref=e1390]:
                  - img "Screenshot of successfully accessing the Hello Universe application." [ref=e1391]
                - paragraph [ref=e1392]: You have successfully provisioned an Edge cluster and deployed the Hello Universe application on it.
                - heading "CleanupDirect link to Cleanup" [level=2] [ref=e1393]:
                  - text: Cleanup
                  - link "Direct link to Cleanup" [ref=e1394] [cursor=pointer]:
                    - /url: "#cleanup"
                    - text: "#"
                - paragraph [ref=e1395]: The following steps will guide you in cleaning up your environment, including the cluster, cluster profile, and Edge hosts.
                - heading "Delete Cluster and ProfileDirect link to Delete Cluster and Profile" [level=3] [ref=e1396]:
                  - text: Delete Cluster and Profile
                  - link "Direct link to Delete Cluster and Profile" [ref=e1397] [cursor=pointer]:
                    - /url: "#delete-cluster-and-profile"
                    - text: "#"
                - paragraph [ref=e1398]:
                  - text: In Palette, display the cluster details page. Click on the
                  - strong [ref=e1399]: Settings
                  - text: button to expand the
                  - strong [ref=e1400]: drop-down Menu
                  - text: ", and select the"
                  - strong [ref=e1401]: Delete Cluster
                  - text: option, as shown in the screenshot below.
                - paragraph [ref=e1402]:
                  - img "Screenshot of deleting a cluster." [ref=e1403]
                - paragraph [ref=e1404]:
                  - text: Palette prompts you to enter the cluster name and confirm the delete action. Type the cluster name to delete the cluster. The cluster status changes to
                  - strong [ref=e1405]: Deleting
                  - text: . Deletion takes up to 10 minutes.
                - paragraph [ref=e1406]:
                  - text: After you delete the cluster, click
                  - strong [ref=e1407]: Profiles
                  - text: on the left
                  - strong [ref=e1408]: Main Menu
                  - text: ", and select the profile to delete. Choose the"
                  - strong [ref=e1409]: Delete
                  - text: option in the
                  - strong [ref=e1410]: three-dot Menu
                  - text: ", as shown in the screenshot below."
                - paragraph [ref=e1411]:
                  - img "Screenshot of deleting a cluster profile." [ref=e1412]
                - paragraph [ref=e1413]: Wait for Palette to successfully delete the resources.
                - heading "Delete Edge HostsDirect link to Delete Edge Hosts" [level=3] [ref=e1414]:
                  - text: Delete Edge Hosts
                  - link "Direct link to Delete Edge Hosts" [ref=e1415] [cursor=pointer]:
                    - /url: "#delete-edge-hosts"
                    - text: "#"
                - paragraph [ref=e1416]:
                  - text: Switch back to the
                  - code [ref=e1417]: CanvOS
                  - text: directory in the Linux development environment containing the
                  - code [ref=e1418]: .goenv
                  - text: file, and use the following command to delete the Edge hosts.
                - generic [ref=e1420]:
                  - code [ref=e1422]:
                    - generic [ref=e1423]: docker run --interactive --tty --rm --env-file .goenv \
                    - generic [ref=e1424]: ghcr.io/spectrocloud/tutorials:1.1.13 \
                    - generic [ref=e1425]: sh -c "cd edge/vmware/clone_vm_template/ && ./delete-edge-host.sh"
                  - generic [ref=e1426]:
                    - button "Toggle word wrap" [ref=e1427] [cursor=pointer]:
                      - img [ref=e1428]
                    - button "Copy code to clipboard" [ref=e1430] [cursor=pointer]:
                      - generic [ref=e1431]:
                        - img [ref=e1432]
                        - img [ref=e1434]
                - heading "Delete Edge ArtifactsDirect link to Delete Edge Artifacts" [level=3] [ref=e1436]:
                  - text: Delete Edge Artifacts
                  - link "Direct link to Delete Edge Artifacts" [ref=e1437] [cursor=pointer]:
                    - /url: "#delete-edge-artifacts"
                    - text: "#"
                - paragraph [ref=e1438]:
                  - text: If you want to delete Edge artifacts from your Linux development environment, delete the Edge installer ISO image and its checksum by issuing the following commands from the
                  - code [ref=e1439]: CanvOS
                  - text: directory.
                - generic [ref=e1441]:
                  - code [ref=e1443]:
                    - generic [ref=e1444]: rm build/palette-edge-installer.iso
                    - generic [ref=e1445]: rm build/palette-edge-installer.iso.sha256
                  - button "Copy code to clipboard" [ref=e1447] [cursor=pointer]:
                    - generic [ref=e1448]:
                      - img [ref=e1449]
                      - img [ref=e1451]
                - paragraph [ref=e1453]: Issue the following command to list all images in your current development environment.
                - generic [ref=e1455]:
                  - code [ref=e1457]:
                    - generic [ref=e1458]: docker images
                  - button "Copy code to clipboard" [ref=e1460] [cursor=pointer]:
                    - generic [ref=e1461]:
                      - img [ref=e1462]
                      - img [ref=e1464]
                - paragraph [ref=e1466]: Note the provider image name and tags, and use the following command syntax to remove all provider images.
                - generic [ref=e1468]:
                  - code [ref=e1470]:
                    - generic [ref=e1471]: docker rmi ttl.sh/ubuntu:k3s-1.32.1-v4.6.12-demo
                    - generic [ref=e1472]: docker rmi ttl.sh/ubuntu:k3s-1.32.1-v4.6.12-demo_linux_amd64
                    - generic [ref=e1473]: docker rmi ttl.sh/ubuntu:k3s-1.31.5-v4.6.12-demo
                    - generic [ref=e1474]: docker rmi ttl.sh/ubuntu:k3s-1.31.5-v4.6.12-demo_linux_amd64
                    - generic [ref=e1475]: docker rmi ttl.sh/ubuntu:k3s-1.31.4-v4.6.12-demo
                    - generic [ref=e1476]: docker rmi ttl.sh/ubuntu:k3s-1.31.4-v4.6.12-demo_linux_amd64
                    - generic [ref=e1477]: docker rmi ttl.sh/ubuntu:k3s-1.31.1-v4.6.12-demo
                    - generic [ref=e1478]: docker rmi ttl.sh/ubuntu:k3s-1.31.1-v4.6.12-demo_linux_amd64
                    - generic [ref=e1479]: docker rmi ttl.sh/ubuntu:k3s-1.30.9-v4.6.12-demo
                    - generic [ref=e1480]: docker rmi ttl.sh/ubuntu:k3s-1.30.9-v4.6.12-demo_linux_amd64
                    - generic [ref=e1481]: docker rmi ttl.sh/ubuntu:k3s-1.30.8-v4.6.12-demo
                    - generic [ref=e1482]: docker rmi ttl.sh/ubuntu:k3s-1.30.8-v4.6.12-demo_linux_amd64
                    - generic [ref=e1483]: docker rmi ttl.sh/ubuntu:k3s-1.30.6-v4.6.12-demo
                    - generic [ref=e1484]: docker rmi ttl.sh/ubuntu:k3s-1.30.6-v4.6.12-demo_linux_amd64
                    - generic [ref=e1485]: docker rmi ttl.sh/ubuntu:k3s-1.30.5-v4.6.12-demo
                    - generic [ref=e1486]: docker rmi ttl.sh/ubuntu:k3s-1.30.5-v4.6.12-demo_linux_amd64
                    - generic [ref=e1487]: ...
                  - button "Copy code to clipboard" [ref=e1489] [cursor=pointer]:
                    - generic [ref=e1490]:
                      - img [ref=e1491]
                      - img [ref=e1493]
                - heading "Delete VMware vSphere ResourcesDirect link to Delete VMware vSphere Resources" [level=3] [ref=e1495]:
                  - text: Delete VMware vSphere Resources
                  - link "Direct link to Delete VMware vSphere Resources" [ref=e1496] [cursor=pointer]:
                    - /url: "#delete-vmware-vsphere-resources"
                    - text: "#"
                - paragraph [ref=e1497]:
                  - text: Navigate to
                  - strong [ref=e1498]: Inventory
                  - text: ">"
                  - strong [ref=e1499]: VMs and Templates
                  - text: in your vSphere client. To delete the
                  - strong [ref=e1500]: palette-edge-template
                  - text: VM template, right-click on it and choose
                  - strong [ref=e1501]: Delete
                  - text: option from the
                  - strong [ref=e1502]: drop-down Menu
                  - text: .
                - paragraph [ref=e1503]:
                  - text: Switch to the
                  - strong [ref=e1504]: Storage
                  - text: view in your vSphere client. To delete the
                  - code [ref=e1505]: palette-edge-installer.iso
                  - text: file from the
                  - code [ref=e1506]: packer_cache
                  - text: directory in the VMware vCenter datastore, right-click on it and choose
                  - strong [ref=e1507]: Delete
                  - text: option from the
                  - strong [ref=e1508]: drop-down Menu
                  - text: .
                - heading "Wrap-UpDirect link to Wrap-Up" [level=2] [ref=e1509]:
                  - text: Wrap-Up
                  - link "Direct link to Wrap-Up" [ref=e1510] [cursor=pointer]:
                    - /url: "#wrap-up"
                    - text: "#"
                - paragraph [ref=e1511]: Building Edge artifacts allows you to prepare Edge hosts and deploy Palette-managed Edge clusters. Edge artifacts consist of an Edge installer ISO and provider images for all the Palette-supported Kubernetes versions. An Edge installer ISO assists in preparing the Edge hosts, and the provider image is used in the cluster profile.
                - paragraph [ref=e1512]: In this tutorial, you learned how to build Edge artifacts, prepare VMware VMs as Edge hosts using the Edge installer ISO, create a cluster profile referencing a provider image, and deploy a cluster.
                - paragraph [ref=e1513]: Palette's Edge solution allows you to prepare your Edge hosts with the desired OS, dependencies, and user data configurations. It supports multiple Kubernetes versions while building the Edge artifacts and creating cluster profiles, enabling you to choose the desired Kubernetes version for your cluster deployment.
                - paragraph [ref=e1514]: Before you plan a production-level deployment at scale, you can prepare a small set of Edge devices for development testing and to validate the devices' state and installed applications. Once the validation is satisfactory and meets your requirements, you can roll out Edge artifacts and cluster profiles for deployment in production. This approach maintains consistency while deploying Kubernetes clusters at scale across all physical sites, be it 1000 or more sites. In addition, you can use Palette to manage the entire lifecycle of Edge clusters.
                - paragraph [ref=e1515]: To learn more about Edge, check out the resources below.
                - list [ref=e1516]:
                  - listitem [ref=e1517]:
                    - paragraph [ref=e1518]:
                      - link "Build Edge Artifacts" [ref=e1519] [cursor=pointer]:
                        - /url: /clusters/edge/edgeforge-workflow/palette-canvos/
                  - listitem [ref=e1520]:
                    - paragraph [ref=e1521]:
                      - link "Build Content Bundle" [ref=e1522] [cursor=pointer]:
                        - /url: /clusters/edge/edgeforge-workflow/palette-canvos/build-content-bundle/
                  - listitem [ref=e1523]:
                    - paragraph [ref=e1524]:
                      - link "Model Edge Native Cluster Profile" [ref=e1525] [cursor=pointer]:
                        - /url: /clusters/edge/site-deployment/model-profile/
                  - listitem [ref=e1526]:
                    - paragraph [ref=e1527]:
                      - link "Prepare Edge Hosts for Installation" [ref=e1528] [cursor=pointer]:
                        - /url: /clusters/edge/site-deployment/stage/
                  - listitem [ref=e1529]:
                    - paragraph [ref=e1530]:
                      - link "Perform Site Install" [ref=e1531] [cursor=pointer]:
                        - /url: /clusters/edge/site-deployment/site-installation/
              - generic [ref=e1532]:
                - generic [ref=e1534]:
                  - text: "Tags:"
                  - list [ref=e1535]:
                    - listitem [ref=e1536]:
                      - link "edge" [ref=e1537] [cursor=pointer]:
                        - /url: /tags/edge/
                    - listitem [ref=e1538]:
                      - link "tutorial" [ref=e1539] [cursor=pointer]:
                        - /url: /tags/tutorial/
                - link "Edit this page" [ref=e1542] [cursor=pointer]:
                  - /url: https://github.com/spectrocloud/librarium/blob/master/docs/docs-content/tutorials/clusters/edge/deploy-cluster.md
                  - img [ref=e1543]
                  - text: Edit this page
            - navigation "Docs pages" [ref=e1547]:
              - link "Previous « Clusters" [ref=e1548] [cursor=pointer]:
                - /url: /tutorials/clusters/
                - generic [ref=e1549]: Previous
                - generic [ref=e1550]: « Clusters
              - link "Next Deploy an Edge Cluster on VirtualBox »" [ref=e1551] [cursor=pointer]:
                - /url: /tutorials/clusters/edge/deploy-cluster-virtualbox/
                - generic [ref=e1552]: Next
                - generic [ref=e1553]: Deploy an Edge Cluster on VirtualBox »
          - list [ref=e1556]:
            - listitem [ref=e1557]:
              - link "Prerequisites" [ref=e1558] [cursor=pointer]:
                - /url: "#prerequisites"
            - listitem [ref=e1559]:
              - link "Build Edge Artifacts" [ref=e1560] [cursor=pointer]:
                - /url: "#build-edge-artifacts"
              - list [ref=e1561]:
                - listitem [ref=e1562]:
                  - link "Check Out Starter Code" [ref=e1563] [cursor=pointer]:
                    - /url: "#check-out-starter-code"
            - listitem [ref=e1564]:
              - link "Define Arguments" [ref=e1565] [cursor=pointer]:
                - /url: "#define-arguments"
            - listitem [ref=e1566]:
              - link "Create User Data" [ref=e1567] [cursor=pointer]:
                - /url: "#create-user-data"
            - listitem [ref=e1568]:
              - link "Build Artifacts" [ref=e1569] [cursor=pointer]:
                - /url: "#build-artifacts"
            - listitem [ref=e1570]:
              - link "View Artifacts" [ref=e1571] [cursor=pointer]:
                - /url: "#view-artifacts"
            - listitem [ref=e1572]:
              - link "Push Provider Images" [ref=e1573] [cursor=pointer]:
                - /url: "#push-provider-images"
            - listitem [ref=e1574]:
              - link "Provision Virtual Machines" [ref=e1575] [cursor=pointer]:
                - /url: "#provision-virtual-machines"
              - list [ref=e1576]:
                - listitem [ref=e1577]:
                  - link "Create a VM Template" [ref=e1578] [cursor=pointer]:
                    - /url: "#create-a-vm-template"
                - listitem [ref=e1579]:
                  - link "Provision VMs" [ref=e1580] [cursor=pointer]:
                    - /url: "#provision-vms"
            - listitem [ref=e1581]:
              - link "Verify Host Registration" [ref=e1582] [cursor=pointer]:
                - /url: "#verify-host-registration"
            - listitem [ref=e1583]:
              - link "Deploy a Cluster" [ref=e1584] [cursor=pointer]:
                - /url: "#deploy-a-cluster"
            - listitem [ref=e1585]:
              - link "Create a Cluster Profile" [ref=e1586] [cursor=pointer]:
                - /url: "#create-a-cluster-profile"
              - list [ref=e1587]:
                - listitem [ref=e1588]:
                  - link "Basic Information" [ref=e1589] [cursor=pointer]:
                    - /url: "#basic-information"
                - listitem [ref=e1590]:
                  - link "Cloud Type" [ref=e1591] [cursor=pointer]:
                    - /url: "#cloud-type"
                - listitem [ref=e1592]:
                  - link "Profile Layers" [ref=e1593] [cursor=pointer]:
                    - /url: "#profile-layers"
            - listitem [ref=e1594]:
              - link "Create a Cluster" [ref=e1595] [cursor=pointer]:
                - /url: "#create-a-cluster"
              - list [ref=e1596]:
                - listitem [ref=e1597]:
                  - link "Basic Information" [ref=e1598] [cursor=pointer]:
                    - /url: "#basic-information-1"
                - listitem [ref=e1599]:
                  - link "Parameters" [ref=e1600] [cursor=pointer]:
                    - /url: "#parameters"
                - listitem [ref=e1601]:
                  - link "Cluster configuration" [ref=e1602] [cursor=pointer]:
                    - /url: "#cluster-configuration"
                - listitem [ref=e1603]:
                  - link "Nodes configuration" [ref=e1604] [cursor=pointer]:
                    - /url: "#nodes-configuration"
                - listitem [ref=e1605]:
                  - link "Settings" [ref=e1606] [cursor=pointer]:
                    - /url: "#settings"
                - listitem [ref=e1607]:
                  - link "Review" [ref=e1608] [cursor=pointer]:
                    - /url: "#review"
            - listitem [ref=e1609]:
              - link "Validate" [ref=e1610] [cursor=pointer]:
                - /url: "#validate"
            - listitem [ref=e1611]:
              - link "Cleanup" [ref=e1612] [cursor=pointer]:
                - /url: "#cleanup"
              - list [ref=e1613]:
                - listitem [ref=e1614]:
                  - link "Delete Cluster and Profile" [ref=e1615] [cursor=pointer]:
                    - /url: "#delete-cluster-and-profile"
                - listitem [ref=e1616]:
                  - link "Delete Edge Hosts" [ref=e1617] [cursor=pointer]:
                    - /url: "#delete-edge-hosts"
                - listitem [ref=e1618]:
                  - link "Delete Edge Artifacts" [ref=e1619] [cursor=pointer]:
                    - /url: "#delete-edge-artifacts"
                - listitem [ref=e1620]:
                  - link "Delete VMware vSphere Resources" [ref=e1621] [cursor=pointer]:
                    - /url: "#delete-vmware-vsphere-resources"
            - listitem [ref=e1622]:
              - link "Wrap-Up" [ref=e1623] [cursor=pointer]:
                - /url: "#wrap-up"
  - button "Project Logo Ask AI" [ref=e1624] [cursor=pointer]:
    - generic [ref=e1627]:
      - img "Project Logo" [ref=e1628]
      - paragraph [ref=e1629]: Ask AI
```