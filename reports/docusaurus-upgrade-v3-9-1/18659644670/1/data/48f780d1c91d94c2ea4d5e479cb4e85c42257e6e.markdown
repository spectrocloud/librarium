# Page snapshot

```yaml
- generic [active] [ref=e1]:
  - generic [ref=e2]:
    - region "Skip to main content":
      - link "Skip to main content" [ref=e3] [cursor=pointer]:
        - /url: "#__docusaurus_skipToContent_fallback"
    - navigation "Main" [ref=e4]:
      - generic [ref=e5]:
        - generic [ref=e6]:
          - link "Spectro cloud logo" [ref=e7] [cursor=pointer]:
            - /url: /
            - img "Spectro cloud logo" [ref=e9]
          - link "Docs" [ref=e10] [cursor=pointer]:
            - /url: /release-notes/
          - link "Tutorials" [ref=e11] [cursor=pointer]:
            - /url: /tutorials/
          - link "Downloads" [ref=e12] [cursor=pointer]:
            - /url: /downloads/
          - link "API" [ref=e13] [cursor=pointer]:
            - /url: /api/introduction/
          - button "latest" [ref=e15] [cursor=pointer]
        - generic [ref=e16]:
          - link "GitHub repository" [ref=e17] [cursor=pointer]:
            - /url: https://github.com/spectrocloud/librarium
          - button "Switch between dark and light mode (currently system mode)" [ref=e19] [cursor=pointer]:
            - img [ref=e20]
          - button "Search (Control+k)" [ref=e23] [cursor=pointer]:
            - generic [ref=e24]:
              - img [ref=e25]
              - generic [ref=e28]: Search
    - generic [ref=e32]:
      - complementary [ref=e33]:
        - generic [ref=e35]:
          - link "Spectro cloud logo" [ref=e36] [cursor=pointer]:
            - /url: /
            - img "Spectro cloud logo" [ref=e37]
          - navigation "Docs sidebar" [ref=e38]:
            - list [ref=e39]:
              - listitem [ref=e40]:
                - link "Palette Tutorials" [ref=e41] [cursor=pointer]:
                  - /url: /tutorials/
                  - img [ref=e43]
                  - text: Palette Tutorials
              - listitem [ref=e45]:
                - generic [ref=e46]:
                  - link "Getting Started" [ref=e47] [cursor=pointer]:
                    - /url: /tutorials/getting-started/
                    - img [ref=e49]
                    - text: Getting Started
                  - button "Toggle the collapsible sidebar category 'Getting Started'" [ref=e51] [cursor=pointer]
              - listitem [ref=e52]:
                - generic [ref=e53]:
                  - link "Packs and Registries" [expanded] [ref=e54] [cursor=pointer]:
                    - /url: /tutorials/packs-registries/
                    - img [ref=e56]
                    - text: Packs and Registries
                  - button "Toggle the collapsible sidebar category 'Packs and Registries'" [ref=e58] [cursor=pointer]
                - list [ref=e59]:
                  - listitem [ref=e60]:
                    - link "Deploy a Custom Pack" [ref=e61] [cursor=pointer]:
                      - /url: /tutorials/packs-registries/deploy-pack/
              - listitem [ref=e62]:
                - generic [ref=e63]:
                  - link "Profiles" [ref=e64] [cursor=pointer]:
                    - /url: /tutorials/profiles/
                    - img [ref=e66]
                    - text: Profiles
                  - button "Toggle the collapsible sidebar category 'Profiles'" [ref=e70] [cursor=pointer]
              - listitem [ref=e71]:
                - generic [ref=e72]:
                  - link "Clusters" [ref=e73] [cursor=pointer]:
                    - /url: /tutorials/clusters/
                    - img [ref=e75]
                    - text: Clusters
                  - button "Toggle the collapsible sidebar category 'Clusters'" [ref=e81] [cursor=pointer]
              - listitem [ref=e82]:
                - generic [ref=e83]:
                  - link "Palette Dev Engine" [ref=e84] [cursor=pointer]:
                    - /url: /tutorials/pde/
                    - img [ref=e86]
                    - text: Palette Dev Engine
                  - button "Toggle the collapsible sidebar category 'Palette Dev Engine'" [ref=e88] [cursor=pointer]
              - listitem [ref=e89]:
                - button "Privacy Settings" [ref=e90] [cursor=pointer]
      - main [ref=e91]:
        - generic [ref=e93]:
          - generic [ref=e95]:
            - article [ref=e96]:
              - navigation "Breadcrumbs" [ref=e97]:
                - list [ref=e98]:
                  - listitem [ref=e99]:
                    - link "Home page" [ref=e100] [cursor=pointer]:
                      - /url: /
                      - img [ref=e101]
                  - listitem [ref=e103]:
                    - link "Packs and Registries" [ref=e104] [cursor=pointer]:
                      - /url: /tutorials/packs-registries/
                  - listitem [ref=e105]:
                    - generic [ref=e106]: Deploy a Custom Pack
              - generic [ref=e107]:
                - heading "Deploy a Custom Pack" [level=1] [ref=e109]
                - paragraph [ref=e110]: "Custom add-on packs allow you to deploy Kubernetes applications in clusters and reuse them in multiple deployments. This ensures uniformity across your clusters. The primary use cases for creating custom packs are:"
                - list [ref=e111]:
                  - listitem [ref=e112]:
                    - paragraph [ref=e113]: Aggregated configuration and application dependencies simplify deployment and consumption.
                  - listitem [ref=e114]:
                    - paragraph [ref=e115]: Open source contributors can add new Kubernetes applications to a custom add-on pack for the community.
                  - listitem [ref=e116]:
                    - paragraph [ref=e117]: Enterprises can add proprietary Kubernetes applications to a custom add-on pack.
                - paragraph [ref=e118]:
                  - text: In this tutorial, you will create a custom add-on pack to package a sample Kubernetes application,
                  - link "Hello Universe" [ref=e119] [cursor=pointer]:
                    - /url: https://github.com/spectrocloud/hello-universe#hello-universe
                  - text: ", and deploy the application to a cluster. You will learn to create the pack in two ways - using manifest files and Helm charts."
                - paragraph [ref=e120]: After defining the custom pack, you will set up a new registry server or leverage an existing Open Container Initiative (OCI) registry. Then, you will publish the pack to the registry and configure the registry server in Palette. Lastly, you will create a cluster profile that contains your custom pack and apply the profile to a cluster using either Palette or Terraform.
                - paragraph [ref=e121]: The following diagram illustrates the sequential steps required to successfully complete this tutorial.
                - paragraph [ref=e122]:
                  - img "Architecture Diagram of the Deploy a Custom Pack Tutorial" [ref=e123]
                - heading "PrerequisitesDirect link to Prerequisites" [level=2] [ref=e124]:
                  - text: Prerequisites
                  - link "Direct link to Prerequisites" [ref=e125] [cursor=pointer]:
                    - /url: "#prerequisites"
                    - text: "#"
                - paragraph [ref=e126]: "To complete this tutorial, ensure you have the following prerequisites in place:"
                - list [ref=e127]:
                  - listitem [ref=e128]: A Palette account.
                  - listitem [ref=e129]: Tenant admin access to Palette for the purpose of adding a new registry server.
                  - listitem [ref=e130]:
                    - text: An Amazon Web Services (AWS) account added to your Palette project settings. Refer to the
                    - link "Add an AWS Account to Palette" [ref=e131] [cursor=pointer]:
                      - /url: https://docs.spectrocloud.com/clusters/public-cloud/aws/add-aws-accounts
                    - text: guide for instructions.
                  - listitem [ref=e132]: An SSH key available in the region where you plan to deploy the cluster.
                  - listitem [ref=e133]:
                    - link "Docker" [ref=e134] [cursor=pointer]:
                      - /url: https://docs.docker.com/get-docker/
                    - text: or
                    - link "Podman" [ref=e135] [cursor=pointer]:
                      - /url: https://podman.io/docs/installation
                    - text: installed on your local machine to start the tutorial container.
                  - listitem [ref=e136]:
                    - text: Basic knowledge of containers and Kubernetes manifest file attributes. Refer to the
                    - link "Docker Get Started" [ref=e137] [cursor=pointer]:
                      - /url: https://docs.docker.com/get-started/
                    - text: guide and the
                    - link "Learn Kubernetes Basics" [ref=e138] [cursor=pointer]:
                      - /url: https://kubernetes.io/docs/tutorials/kubernetes-basics/
                    - text: tutorial to start learning.
                - paragraph [ref=e139]: If you choose to use an OCI registry, you will need the following item.
                - list [ref=e140]:
                  - listitem [ref=e141]:
                    - text: An active OCI registry such as
                    - link "Amazon Elastic Container Registry (ECR)" [ref=e142] [cursor=pointer]:
                      - /url: https://aws.amazon.com/ecr/
                    - text: or
                    - link "Harbor" [ref=e143] [cursor=pointer]:
                      - /url: https://goharbor.io/
                    - text: .
                - paragraph [ref=e144]: If you opt for an ECR OCI registry, you will require the following.
                - list [ref=e145]:
                  - listitem [ref=e146]:
                    - paragraph [ref=e147]: An AWS Identity and Access Management (IAM) user with the following permissions.
                    - list [ref=e148]:
                      - listitem [ref=e149]:
                        - code [ref=e150]: ecr:CreateRepository
                      - listitem [ref=e151]:
                        - code [ref=e152]: ecr:InitiateLayerUpload
                      - listitem [ref=e153]:
                        - code [ref=e154]: ecr:CompleteLayerUpload
                      - listitem [ref=e155]:
                        - code [ref=e156]: ecr:InitiateLayerUpload
                      - listitem [ref=e157]:
                        - code [ref=e158]: ecr:PutImage
                      - listitem [ref=e159]:
                        - code [ref=e160]: ecr:UploadLayerPart
                      - listitem [ref=e161]:
                        - code [ref=e162]: ecr:BatchCheckLayerAvailability
                      - listitem [ref=e163]:
                        - code [ref=e164]: ecr:ListImages
                      - listitem [ref=e165]:
                        - code [ref=e166]: ecr:DescribeImages
                      - listitem [ref=e167]:
                        - code [ref=e168]: ecr:BatchDeleteImage
                      - listitem [ref=e169]:
                        - code [ref=e170]: ecr:DeleteRepository
                - generic [ref=e171]:
                  - generic [ref=e172]:
                    - img [ref=e174]
                    - text: warning
                  - paragraph [ref=e177]: AWS expenses are associated with this tutorial. An estimated hourly cost is provided by Palette during the cluster creation step. After completing the tutorial, make sure to delete the infrastructure to avoid additional charges.
                - heading "Set Up the Tutorial EnvironmentDirect link to Set Up the Tutorial Environment" [level=2] [ref=e178]:
                  - text: Set Up the Tutorial Environment
                  - link "Direct link to Set Up the Tutorial Environment" [ref=e179] [cursor=pointer]:
                    - /url: "#set-up-the-tutorial-environment"
                    - text: "#"
                - paragraph [ref=e180]:
                  - text: In this tutorial, you will work in a container pre-configured with the necessary tools. Alternatively, you can choose to follow along with the tutorial in any
                  - code [ref=e181]: linux/amd64
                  - text: or
                  - code [ref=e182]: x86_64
                  - text: environment by installing the
                  - link "required tools" [ref=e183] [cursor=pointer]:
                    - /url: https://github.com/spectrocloud/tutorials/blob/main/docs/docker.md#docker
                  - text: and cloning the
                  - link "GitHub repository" [ref=e184] [cursor=pointer]:
                    - /url: https://github.com/spectrocloud/tutorials/
                  - text: that contains the tutorial files. To initialize the tutorial container, follow the steps described below.
                - generic [ref=e185]:
                  - tablist [ref=e186]:
                    - tab "Docker" [selected] [ref=e187] [cursor=pointer]
                    - tab "Podman" [ref=e188] [cursor=pointer]
                  - tabpanel [ref=e190]:
                    - paragraph [ref=e191]: Start Docker Desktop on your local machine and ensure that the Docker daemon is available by issuing a command to list the currently active containers.
                    - generic [ref=e193]:
                      - code [ref=e195]:
                        - generic [ref=e196]: docker ps
                      - button "Copy code to clipboard" [ref=e198] [cursor=pointer]:
                        - generic [ref=e199]:
                          - img [ref=e200]
                          - img [ref=e202]
                    - paragraph [ref=e204]:
                      - text: Use the following command to download the
                      - code [ref=e205]: ghcr.io/spectrocloud/tutorials:1.3.0
                      - text: image to your local machine. This Docker image includes the necessary tools.
                    - generic [ref=e207]:
                      - code [ref=e209]:
                        - generic [ref=e210]: docker pull ghcr.io/spectrocloud/tutorials:1.3.0
                      - button "Copy code to clipboard" [ref=e212] [cursor=pointer]:
                        - generic [ref=e213]:
                          - img [ref=e214]
                          - img [ref=e216]
                    - paragraph [ref=e218]: Next, start the container and open a bash session into it.
                    - generic [ref=e220]:
                      - code [ref=e222]:
                        - generic [ref=e223]: docker run --name tutorialContainer --publish 7000:5000 --interactive --tty ghcr.io/spectrocloud/tutorials:1.3.0 bash
                      - generic [ref=e224]:
                        - button "Toggle word wrap" [ref=e225] [cursor=pointer]:
                          - img [ref=e226]
                        - button "Copy code to clipboard" [ref=e228] [cursor=pointer]:
                          - generic [ref=e229]:
                            - img [ref=e230]
                            - img [ref=e232]
                - paragraph [ref=e234]: If the port 7000 on your local machine is unavailable, you can use any other port of your choice.
                - generic [ref=e235]:
                  - generic [ref=e236]:
                    - img [ref=e238]
                    - text: warning
                  - paragraph [ref=e241]: Do not exit the container until the tutorial is complete. Otherwise, you may lose your progress.
                - heading "Build a PackDirect link to Build a Pack" [level=2] [ref=e242]:
                  - text: Build a Pack
                  - link "Direct link to Build a Pack" [ref=e243] [cursor=pointer]:
                    - /url: "#build-a-pack"
                    - text: "#"
                - paragraph [ref=e244]:
                  - text: Building a custom pack involves defining specific files. As outlined in the
                  - link "Adding Add-on Packs" [ref=e245] [cursor=pointer]:
                    - /url: /registries-and-packs/adding-add-on-packs/
                  - text: "guide, there are two ways to define a custom pack: using manifest files or Helm charts. The file structure differs for manifest-based packs and Helm chart-based packs. Below is the reference file structure for each."
                - generic [ref=e246]:
                  - tablist [ref=e247]:
                    - tab "Manifests-based pack" [selected] [ref=e248] [cursor=pointer]
                    - tab "Helm charts-based pack" [ref=e249] [cursor=pointer]
                  - tabpanel [ref=e251]:
                    - code [ref=e255]:
                      - generic [ref=e256]: .
                      - generic [ref=e257]: "├── pack.json # Mandatory."
                      - generic [ref=e258]: "├── values.yaml # Mandatory."
                      - generic [ref=e259]: "├── manifests # Mandatory."
                      - generic [ref=e260]: ├── manifest-1.yaml
                      - generic [ref=e261]: ├── manifest-2.yaml
                      - generic [ref=e262]: │ └── manifest-3.yaml
                      - generic [ref=e263]: "├── logo.png # Mandatory."
                      - generic [ref=e264]: "└── README.md # Optional."
                - paragraph [ref=e265]:
                  - text: For your convenience, we provide you with the manifest-based pack files for the Hello Universe application. These files are located in the
                  - strong [ref=e266]: packs/hello-universe-pack
                  - text: folder.
                - paragraph [ref=e267]:
                  - text: Navigate to the
                  - strong [ref=e268]: packs/hello-universe-pack
                  - text: directory and list its files.
                - generic [ref=e270]:
                  - code [ref=e272]:
                    - generic [ref=e273]: cd /packs/hello-universe-pack && ls -ll
                  - button "Copy code to clipboard" [ref=e275] [cursor=pointer]:
                    - generic [ref=e276]:
                      - img [ref=e277]
                      - img [ref=e279]
                - paragraph [ref=e281]: Ensure you have the following files in the current directory.
                - code [ref=e285]:
                  - generic [ref=e286]: .
                  - generic [ref=e287]: "├── pack.json # Mandatory."
                  - generic [ref=e288]: "├── values.yaml # Mandatory."
                  - generic [ref=e289]: "├── manifests # Mandatory."
                  - generic [ref=e290]: │ └── hello-universe.yaml
                  - generic [ref=e291]: "├── logo.png # Mandatory."
                  - generic [ref=e292]: "└── README.md # Optional."
                - heading "Pack File StructureDirect link to Pack File Structure" [level=3] [ref=e293]:
                  - text: Pack File Structure
                  - link "Direct link to Pack File Structure" [ref=e294] [cursor=pointer]:
                    - /url: "#pack-file-structure"
                    - text: "#"
                - paragraph [ref=e295]:
                  - text: Review each of the following five files in the
                  - strong [ref=e296]: hello-universe-pack
                  - text: folder.
                - list [ref=e297]:
                  - listitem [ref=e298]:
                    - paragraph [ref=e299]:
                      - strong [ref=e300]: pack.json
                      - text: "- This file contains the pack metadata such as"
                      - code [ref=e301]: addonType
                      - text: ","
                      - code [ref=e302]: cloudTypes
                      - text: ", and the"
                      - code [ref=e303]: kubeManifests
                      - text: "array. The array consists of a list of manifest files:"
                      - code [ref=e304]: layer
                      - text: ","
                      - code [ref=e305]: name
                      - text: ", and"
                      - code [ref=e306]: version
                      - text: . Refer to the
                      - link "JSON Schema" [ref=e307] [cursor=pointer]:
                        - /url: /registries-and-packs/add-custom-packs/#json-schema
                      - text: for a list of attributes and respective data types. The schema validation happens when you push a pack to the registry.
                    - generic [ref=e309]:
                      - code [ref=e311]:
                        - generic [ref=e312]: "{"
                        - generic [ref=e313]: "\"addonType\": \"app services\","
                        - generic [ref=e314]: "\"annotations\": {"
                        - generic [ref=e315]: "\"source\": \"community\","
                        - generic [ref=e316]: "\"contributor\": \"spectrocloud\","
                        - generic [ref=e317]: "}"
                        - generic [ref=e318]: "\"cloudTypes\": [\"all\"],"
                        - generic [ref=e319]: "\"displayName\": \"Hello Universe\","
                        - generic [ref=e320]: "\"kubeManifests\": [\"manifests/hello-universe.yaml\"],"
                        - generic [ref=e321]: "\"layer\": \"addon\","
                        - generic [ref=e322]: "\"name\": \"hellouniverse\","
                        - generic [ref=e323]: "\"version\": \"1.2.0\""
                        - generic [ref=e324]: "}"
                      - button "Copy code to clipboard" [ref=e326] [cursor=pointer]:
                        - generic [ref=e327]:
                          - img [ref=e328]
                          - img [ref=e330]
                  - listitem [ref=e332]:
                    - paragraph [ref=e333]:
                      - strong [ref=e334]: values.yaml
                      - text: "- This file contains configurable parameters you can define while adding the current pack to a cluster profile. In the"
                      - strong [ref=e335]: values.yaml
                      - text: file for this tutorial, the
                      - code [ref=e336]: pack/namespace
                      - text: attribute specifies the namespace on the target cluster to deploy the pack. If the
                      - strong [ref=e337]: values.yaml
                      - text: specifies a namespace value, then Palette first checks to confirm if the namespace has been created. If so, Palette uses the existing namespace. If the namespace has not yet been created, Palette creates a new one using the value specified in the YAML file.
                    - paragraph [ref=e338]:
                      - text: Keep in mind that if the
                      - strong [ref=e339]: values.yaml
                      - text: does not specify a namespace value, Palette will deploy the application to the default namespace.
                    - paragraph [ref=e340]:
                      - text: The
                      - code [ref=e341]: manifests
                      - text: section exposes the configurable parameters for each manifest file listed in the
                      - strong [ref=e342]: manifests
                      - text: directory. For example, in the sample code snippet below, the
                      - code [ref=e343]: hello-universe
                      - text: attribute exposes the
                      - code [ref=e344]: registry
                      - text: ","
                      - code [ref=e345]: repository
                      - text: ", and"
                      - code [ref=e346]: tag
                      - text: parameters.
                    - generic [ref=e348]:
                      - code [ref=e350]:
                        - generic [ref=e351]: "pack:"
                        - generic [ref=e352]: "namespace: \"hello-universe\""
                        - generic [ref=e353]: "manifests:"
                        - generic [ref=e354]: "hello-universe:"
                        - generic [ref=e355]: "registry: ghcr.io"
                        - generic [ref=e356]: "repository: spectrocloud/hello-universe"
                        - generic [ref=e357]: "tag: 1.2.0"
                      - button "Copy code to clipboard" [ref=e359] [cursor=pointer]:
                        - generic [ref=e360]:
                          - img [ref=e361]
                          - img [ref=e363]
                    - paragraph [ref=e365]:
                      - text: Optionally, you can define
                      - emphasis [ref=e366]: presets
                      - text: ", which are pack configuration values predefined in a file called"
                      - strong [ref=e367]: presets.yaml
                      - text: within the pack. Once defined, the
                      - strong [ref=e368]: Presets
                      - text: field becomes visible in both the
                      - strong [ref=e369]: Clusters
                      - text: and
                      - strong [ref=e370]: Profile
                      - text: sections of the Palette UI. Users can select any preset from the available pack presets, and upon selection, the predefined values of the chosen preset are applied to the pack. Refer to
                      - link "Pack Presets" [ref=e371] [cursor=pointer]:
                        - /url: /registries-and-packs/pack-constraints/#preset-attributes
                      - text: for details and examples of how to define presets.
                    - paragraph [ref=e372]:
                      - text: The example below shows the parameters you can configure in the
                      - strong [ref=e373]: values.yaml
                      - text: file for the
                      - code [ref=e374]: hello-universe
                      - text: manifest during the creation of the cluster profile.
                - paragraph [ref=e375]:
                  - img "Screenshot of the configurable parameters in the values.yaml file." [ref=e376]
                - list [ref=e377]:
                  - listitem [ref=e378]:
                    - paragraph [ref=e379]:
                      - strong [ref=e380]: manifests
                      - text: "- This directory contains the manifest files for your Kubernetes application. This tutorial has only one manifest,"
                      - strong [ref=e381]: hello-universe.yaml
                      - text: . Note that the
                      - strong [ref=e382]: values.yaml
                      - text: file has a corresponding
                      - code [ref=e383]: manifests/hello-universe
                      - text: element with the same name as the YAML file.
                  - listitem [ref=e384]:
                    - paragraph [ref=e385]:
                      - strong [ref=e386]: logo.png
                      - text: "- This file contains a logo that displays when you create a cluster profile."
                  - listitem [ref=e387]:
                    - paragraph [ref=e388]:
                      - strong [ref=e389]: README.md
                      - text: "- This file may contain the pack description, purpose, authors, and other relevant information. The README in the current example introduces the application used in the pack."
                - paragraph [ref=e390]: After completing the review of all files in the pack directory, the next step is to set up a registry server, publish the pack to the registry, and configure the registry in Palette.
                - heading "Set Up the Registry ServerDirect link to Set Up the Registry Server" [level=2] [ref=e391]:
                  - text: Set Up the Registry Server
                  - link "Direct link to Set Up the Registry Server" [ref=e392] [cursor=pointer]:
                    - /url: "#set-up-the-registry-server"
                    - text: "#"
                - paragraph [ref=e393]: You can set up a registry server using either the Spectro registry or an OCI-compliant registry. Palette supports all OCI-compliant registries.
                - generic [ref=e394]:
                  - generic [ref=e395]:
                    - img [ref=e397]
                    - text: info
                  - paragraph [ref=e400]:
                    - text: We recommend using an OCI registry to store and maintain your packs. Refer to the
                    - link "OCI registry" [ref=e401] [cursor=pointer]:
                      - /url: /registries-and-packs/registries/oci-registry/
                    - text: section for more information.
                - paragraph [ref=e402]:
                  - text: The tutorial environment already includes the Spectro registry service and other necessary tools. For OCI registries, as per the
                  - link "Prerequisites" [ref=e403] [cursor=pointer]:
                    - /url: "#prerequisites"
                  - text: "section, ensure you have an active OCI registry. Two types of OCI authentication are available:"
                  - strong [ref=e404]: Amazon (ECR)
                  - text: and
                  - strong [ref=e405]: Basic
                  - text: . To learn more about Amazon ECR, consult the
                  - link "What is ECR" [ref=e406] [cursor=pointer]:
                    - /url: https://docs.aws.amazon.com/AmazonECR/latest/userguide/what-is-ecr.html
                  - text: user guide.
                - paragraph [ref=e407]:
                  - text: For Basic OCI Authentication, this tutorial uses a
                  - link "Harbor registry" [ref=e408] [cursor=pointer]:
                    - /url: https://goharbor.io/
                  - text: as an example. However, you have the flexibility to opt for the OCI registry of your choice. Learn how to set up a Harbor registry server using the
                  - link "Harbor Installation and Configuration" [ref=e409] [cursor=pointer]:
                    - /url: https://goharbor.io/docs/2.9.0/install-config/
                  - text: guide.
                - paragraph [ref=e410]: The following sections will guide you through starting the registry server, authenticating, pushing your custom add-on pack, and, finally, configuring the registry server in Palette. Select the tab below corresponding to the registry type you want to use.
                - heading "Start the Registry ServerDirect link to Start the Registry Server" [level=3] [ref=e411]:
                  - text: Start the Registry Server
                  - link "Direct link to Start the Registry Server" [ref=e412] [cursor=pointer]:
                    - /url: "#start-the-registry-server"
                    - text: "#"
                - generic [ref=e413]:
                  - tablist [ref=e414]:
                    - tab "Basic" [selected] [ref=e415] [cursor=pointer]
                    - tab "ECR" [ref=e416] [cursor=pointer]
                    - tab "Spectro Registry" [ref=e417] [cursor=pointer]
                  - tabpanel [ref=e419]:
                    - paragraph [ref=e420]:
                      - text: Once you have an active Harbor registry server, access its domain on your web browser and log in using your Harbor credentials. If you have kept the default credentials, the username and password are
                      - strong [ref=e421]: admin
                      - text: and
                      - strong [ref=e422]: Harbor12345
                      - text: ", respectively."
                    - paragraph [ref=e423]:
                      - img "Screenshot of Harbor login" [ref=e424]
                    - paragraph [ref=e425]:
                      - text: In the
                      - strong [ref=e426]: Projects
                      - text: section, click on
                      - strong [ref=e427]: New Project
                      - text: . A project in Harbor contains all repositories of an application. This tutorial uses
                      - strong [ref=e428]: spectro-oci-registry
                      - text: as the project name. Keep the default settings for the remaining configuration options and proceed by clicking
                      - strong [ref=e429]: OK
                      - text: .
                    - paragraph [ref=e430]:
                      - img "Screenshot of Harbor project" [ref=e431]
                - heading "Log in to the Registry ServerDirect link to Log in to the Registry Server" [level=3] [ref=e432]:
                  - text: Log in to the Registry Server
                  - link "Direct link to Log in to the Registry Server" [ref=e433] [cursor=pointer]:
                    - /url: "#log-in-to-the-registry-server"
                    - text: "#"
                - generic [ref=e434]:
                  - tablist [ref=e435]:
                    - tab "Basic" [selected] [ref=e436] [cursor=pointer]
                    - tab "ECR" [ref=e437] [cursor=pointer]
                    - tab "Spectro Registry" [ref=e438] [cursor=pointer]
                  - tabpanel [ref=e440]:
                    - paragraph [ref=e441]:
                      - text: After creating the projects, proceed with the Harbor authentication. In the tutorial container bash session, export the
                      - code [ref=e442]: HARBOR_ADDRESS
                      - text: variable, which will store your Harbor address. Do not include the "https://" prefix.
                    - generic [ref=e444]:
                      - code [ref=e446]:
                        - generic [ref=e447]: export HARBOR_ADDRESS=<Your_Harbor_Address>
                      - button "Copy code to clipboard" [ref=e449] [cursor=pointer]:
                        - generic [ref=e450]:
                          - img [ref=e451]
                          - img [ref=e453]
                    - paragraph [ref=e455]:
                      - text: Now, issue the command
                      - code [ref=e456]: oras login
                      - text: .
                      - link "ORAS" [ref=e457] [cursor=pointer]:
                        - /url: https://oras.land/docs/
                      - text: is a CLI tool to push and pull OCI artifacts to and from OCI registries.
                    - generic [ref=e458]:
                      - generic [ref=e459]:
                        - img [ref=e461]
                        - text: warning
                      - paragraph [ref=e464]:
                        - text: If you are not using the tutorial container, ensure you have ORAS version
                        - code [ref=e465]: 1.0.0
                        - text: installed. This version is explicitly required for pushing packs to OCI registries.
                    - generic [ref=e467]:
                      - code [ref=e469]:
                        - generic [ref=e470]: oras login $HARBOR_ADDRESS
                      - button "Copy code to clipboard" [ref=e472] [cursor=pointer]:
                        - generic [ref=e473]:
                          - img [ref=e474]
                          - img [ref=e476]
                    - paragraph [ref=e478]: You will be prompted for your Harbor username and password. If the login is successful, you will receive the following confirmation message.
                    - code [ref=e482]:
                      - generic [ref=e483]: "Username: admin"
                      - generic [ref=e484]: "Password:"
                      - generic [ref=e485]: Login Succeeded
                - heading "Push the Pack to the Registry ServerDirect link to Push the Pack to the Registry Server" [level=3] [ref=e486]:
                  - text: Push the Pack to the Registry Server
                  - link "Direct link to Push the Pack to the Registry Server" [ref=e487] [cursor=pointer]:
                    - /url: "#push-the-pack-to-the-registry-server"
                    - text: "#"
                - generic [ref=e488]:
                  - tablist [ref=e489]:
                    - tab "Basic" [selected] [ref=e490] [cursor=pointer]
                    - tab "ECR" [ref=e491] [cursor=pointer]
                    - tab "Spectro Registry" [ref=e492] [cursor=pointer]
                  - tabpanel [ref=e494]:
                    - paragraph [ref=e495]: Once you are authenticated to your Harbor registry, export the following variables, which you will use to create the Harbor repository and push the pack.
                    - list [ref=e496]:
                      - listitem [ref=e497]:
                        - code [ref=e498]: HARBOR_PROJECT
                        - text: "- the name of your Harbor project. This tutorial uses"
                        - strong [ref=e499]: spectro-oci-registry
                        - text: .
                      - listitem [ref=e500]:
                        - code [ref=e501]: NAME
                        - text: "- the pack's name, which must match the name in the"
                        - strong [ref=e502]: pack.json
                        - text: file.
                      - listitem [ref=e503]:
                        - code [ref=e504]: VERSION
                        - text: "- the pack's version, which must match the version in the"
                        - strong [ref=e505]: pack.json
                        - text: file.
                    - generic [ref=e506]:
                      - generic [ref=e507]:
                        - img [ref=e509]
                        - text: warning
                      - paragraph [ref=e512]:
                        - text: Ensure that the variables
                        - code [ref=e513]: NAME
                        - text: and
                        - code [ref=e514]: VERSION
                        - text: match the pack name and version in the
                        - strong [ref=e515]: pack.json
                        - text: file. This is a requirement for the pack to be correctly pushed to the registry.
                    - generic [ref=e517]:
                      - code [ref=e519]:
                        - generic [ref=e520]: export HARBOR_PROJECT=spectro-oci-registry
                        - generic [ref=e521]: export NAME=hellouniverse
                        - generic [ref=e522]: export VERSION=1.0.0
                      - button "Copy code to clipboard" [ref=e524] [cursor=pointer]:
                        - generic [ref=e525]:
                          - img [ref=e526]
                          - img [ref=e528]
                    - paragraph [ref=e530]:
                      - text: Next, navigate to the
                      - strong [ref=e531]: packs
                      - text: directory, which contains the pack folder,
                      - strong [ref=e532]: hello-universe-pack
                      - text: .
                    - generic [ref=e534]:
                      - code [ref=e536]:
                        - generic [ref=e537]: cd /packs
                      - button "Copy code to clipboard" [ref=e539] [cursor=pointer]:
                        - generic [ref=e540]:
                          - img [ref=e541]
                          - img [ref=e543]
                    - paragraph [ref=e545]: Before pushing the pack to the registry, compress the contents of the pack folder into an archive file. Issue the command below to create the archive file.
                    - generic [ref=e547]:
                      - code [ref=e549]:
                        - generic [ref=e550]: tar -czvf $NAME-$VERSION.tar.gz hello-universe-pack
                      - button "Copy code to clipboard" [ref=e552] [cursor=pointer]:
                        - generic [ref=e553]:
                          - img [ref=e554]
                          - img [ref=e556]
                    - paragraph [ref=e558]: Harbor creates a repository when the user pushes an artifact to a project. Create a base path repository to store your pack repositories.
                    - generic [ref=e560]:
                      - code [ref=e562]:
                        - generic [ref=e563]: oras push $HARBOR_ADDRESS/$HARBOR_PROJECT/spectro-packs/archive
                      - button "Copy code to clipboard" [ref=e565] [cursor=pointer]:
                        - generic [ref=e566]:
                          - img [ref=e567]
                          - img [ref=e569]
                    - paragraph [ref=e571]: Now, proceed to create the pack repository and push the Hello Universe pack to the Harbor registry.
                    - generic [ref=e573]:
                      - code [ref=e575]:
                        - generic [ref=e576]: oras push $HARBOR_ADDRESS/$HARBOR_PROJECT/spectro-packs/archive/$NAME:$VERSION $NAME-$VERSION.tar.gz
                      - generic [ref=e577]:
                        - button "Toggle word wrap" [ref=e578] [cursor=pointer]:
                          - img [ref=e579]
                        - button "Copy code to clipboard" [ref=e581] [cursor=pointer]:
                          - generic [ref=e582]:
                            - img [ref=e583]
                            - img [ref=e585]
                    - paragraph [ref=e587]:
                      - text: To confirm the presence of the pack in the repository, open your web browser, access your Harbor address, click on
                      - strong [ref=e588]: Projects
                      - text: ", select the"
                      - strong [ref=e589]: spectro-oci-registry
                      - text: project, and then click on the
                      - strong [ref=e590]: spectro-oci-registry/spectro-packs/archive/hellouniverse
                      - text: repository. You should verify the pushed artifact, as shown in the image below.
                    - paragraph [ref=e591]:
                      - img "Screenshot of the Hello Universe Harbor Repository" [ref=e592]
                - heading "Configure the Registry Server in PaletteDirect link to Configure the Registry Server in Palette" [level=3] [ref=e593]:
                  - text: Configure the Registry Server in Palette
                  - link "Direct link to Configure the Registry Server in Palette" [ref=e594] [cursor=pointer]:
                    - /url: "#configure-the-registry-server-in-palette"
                    - text: "#"
                - generic [ref=e595]:
                  - tablist [ref=e596]:
                    - tab "Basic" [selected] [ref=e597] [cursor=pointer]
                    - tab "ECR" [ref=e598] [cursor=pointer]
                    - tab "Spectro Registry" [ref=e599] [cursor=pointer]
                  - tabpanel [ref=e601]:
                    - paragraph [ref=e602]: After pushing the pack to the Harbor registry, follow the next steps to log in to Palette and add the Harbor registry to it.
                    - paragraph [ref=e603]:
                      - text: Log in to
                      - link "Palette" [ref=e604] [cursor=pointer]:
                        - /url: https://console.spectrocloud.com
                      - text: and switch to the
                      - strong [ref=e605]: Tenant Admin
                      - text: view.
                    - paragraph [ref=e606]:
                      - img "Screenshot of Palette tenant settings." [ref=e607]
                    - paragraph [ref=e608]:
                      - text: Navigate to the
                      - strong [ref=e609]: Tenant Settings
                      - text: ">"
                      - strong [ref=e610]: Registries
                      - text: ">"
                      - strong [ref=e611]: OCI Registries
                      - text: section and click on
                      - strong [ref=e612]: Add New OCI Registry
                      - text: . Palette will open a pop-up window prompting you for the required fields to configure an OCI registry.
                    - paragraph [ref=e613]:
                      - img "A screenshot highlighting the fields to configure an OCI registry." [ref=e614]
                    - paragraph [ref=e615]:
                      - text: Provide the registry name. For consistency, we suggest using the registry name
                      - strong [ref=e616]: harbor-registry
                      - text: . Choose
                      - strong [ref=e617]: Pack
                      - text: as the provider and select
                      - strong [ref=e618]: Basic
                      - text: as the OCI authentication type. Complete the
                      - strong [ref=e619]: Endpoint
                      - text: field with your Harbor registry address. Ensure to include "https://" as the prefix.
                    - paragraph [ref=e620]:
                      - text: Next, set the base content path as
                      - strong [ref=e621]: spectro-oci-registry
                      - text: ", which corresponds to your Harbor project name. Then, enter your Harbor credentials in the"
                      - strong [ref=e622]: Username
                      - text: and
                      - strong [ref=e623]: Password
                      - text: fields.
                    - paragraph [ref=e624]:
                      - text: Last, click on
                      - strong [ref=e625]: Validate
                      - text: to ensure the provided URL and credentials are correct. After validation, click on
                      - strong [ref=e626]: Confirm
                      - text: to complete the Harbor registry configuration.
                    - paragraph [ref=e627]:
                      - img "Screenshot of OCI registry fields in Palette tenant settings." [ref=e628]
                    - paragraph [ref=e629]:
                      - text: Palette automatically syncs the registry. However, you can sync it manually by clicking the
                      - strong [ref=e630]: three-dot Menu
                      - text: next to the registry name and selecting
                      - strong [ref=e631]: Sync
                      - text: .
                    - paragraph [ref=e632]:
                      - img "Screenshot of OCI registry sync in Palette" [ref=e633]
                - heading "Create a Cluster Profile and Deploy a ClusterDirect link to Create a Cluster Profile and Deploy a Cluster" [level=2] [ref=e634]:
                  - text: Create a Cluster Profile and Deploy a Cluster
                  - link "Direct link to Create a Cluster Profile and Deploy a Cluster" [ref=e635] [cursor=pointer]:
                    - /url: "#create-a-cluster-profile-and-deploy-a-cluster"
                    - text: "#"
                - paragraph [ref=e636]: "Once you have configured the registry, create a cluster profile and apply the profile to a cluster in Palette. This tutorial provides two workflows from which you can choose: Palette User Interface (UI) or Terraform."
                - generic [ref=e637]:
                  - tablist [ref=e638]:
                    - tab "UI Workflow" [selected] [ref=e639] [cursor=pointer]
                    - tab "Terraform Workflow" [ref=e640] [cursor=pointer]
                  - generic [ref=e641]:
                    - tabpanel [ref=e642]:
                      - heading "Create a Cluster ProfileDirect link to Create a Cluster Profile" [level=3] [ref=e643]:
                        - text: Create a Cluster Profile
                        - link "Direct link to Create a Cluster Profile" [ref=e644] [cursor=pointer]:
                          - /url: "#create-a-cluster-profile"
                          - text: "#"
                      - paragraph [ref=e645]:
                        - text: Switch to the
                        - strong [ref=e646]: Default
                        - text: project scope for creating a cluster profile.
                      - paragraph [ref=e647]:
                        - img "Screenshot of the Palette Default scope." [ref=e648]
                      - paragraph [ref=e649]:
                        - text: Next, select the
                        - strong [ref=e650]: Profiles
                        - text: section in the left
                        - strong [ref=e651]: Menu
                        - text: to create a cluster profile that combines the core infrastructure and add-on layers. Click on the
                        - strong [ref=e652]: Add Cluster Profile
                        - text: button.
                      - heading "Basic InformationDirect link to Basic Information" [level=4] [ref=e653]:
                        - text: Basic Information
                        - link "Direct link to Basic Information" [ref=e654] [cursor=pointer]:
                          - /url: "#basic-information"
                          - text: "#"
                      - paragraph [ref=e655]: Complete the wizard using the values provided below.
                      - table [ref=e656]:
                        - rowgroup [ref=e657]:
                          - row "Field Value" [ref=e658]:
                            - cell "Field" [ref=e659]:
                              - strong [ref=e660]: Field
                            - cell "Value" [ref=e661]:
                              - strong [ref=e662]: Value
                        - rowgroup [ref=e663]:
                          - row "Name pack-tutorial-profile" [ref=e664]:
                            - cell "Name" [ref=e665]
                            - cell "pack-tutorial-profile" [ref=e666]
                          - row "Version 1.0.0" [ref=e667]:
                            - cell "Version" [ref=e668]
                            - cell "1.0.0" [ref=e669]:
                              - code [ref=e670]: 1.0.0
                          - row "Description Cluster profile as part of the Deploy a Custom Pack tutorial." [ref=e671]:
                            - cell "Description" [ref=e672]
                            - cell "Cluster profile as part of the Deploy a Custom Pack tutorial." [ref=e673]
                          - row "Type Full" [ref=e674]:
                            - cell "Type" [ref=e675]
                            - cell "Full" [ref=e676]
                          - row "Tags spectro-cloud-education, app:hello-universe, terraform_managed:false" [ref=e677]:
                            - cell "Tags" [ref=e678]
                            - cell "spectro-cloud-education, app:hello-universe, terraform_managed:false" [ref=e679]:
                              - code [ref=e680]: spectro-cloud-education, app:hello-universe, terraform_managed:false
                      - paragraph [ref=e681]:
                        - text: Click on
                        - strong [ref=e682]: Next
                        - text: to continue.
                      - heading "Cloud TypeDirect link to Cloud Type" [level=4] [ref=e683]:
                        - text: Cloud Type
                        - link "Direct link to Cloud Type" [ref=e684] [cursor=pointer]:
                          - /url: "#cloud-type"
                          - text: "#"
                      - paragraph [ref=e685]:
                        - text: In the
                        - strong [ref=e686]: Cloud Type
                        - text: section, select AWS as the infrastructure provider, and click on
                        - strong [ref=e687]: Next
                        - text: at the bottom to proceed to the next section.
                      - generic [ref=e688]:
                        - generic [ref=e689]:
                          - img [ref=e691]
                          - text: info
                        - paragraph [ref=e694]:
                          - text: If you choose a different cloud provider, note that the options for core infrastructure layers, as outlined in the
                          - strong [ref=e695]: Profile Layers
                          - text: section below, will differ from those presented in this tutorial.
                      - heading "Profile LayersDirect link to Profile Layers" [level=4] [ref=e696]:
                        - text: Profile Layers
                        - link "Direct link to Profile Layers" [ref=e697] [cursor=pointer]:
                          - /url: "#profile-layers"
                          - text: "#"
                      - paragraph [ref=e698]:
                        - text: In the
                        - strong [ref=e699]: Profile Layers
                        - text: section, add the following core infrastructure layers.
                      - table [ref=e700]:
                        - rowgroup [ref=e701]:
                          - row "Pack Type Registry Pack Name Pack Version" [ref=e702]:
                            - cell "Pack Type" [ref=e703]:
                              - strong [ref=e704]: Pack Type
                            - cell "Registry" [ref=e705]:
                              - strong [ref=e706]: Registry
                            - cell "Pack Name" [ref=e707]:
                              - strong [ref=e708]: Pack Name
                            - cell "Pack Version" [ref=e709]:
                              - strong [ref=e710]: Pack Version
                        - rowgroup [ref=e711]:
                          - row "OS Public Repo Ubuntu 22.04" [ref=e712]:
                            - cell "OS" [ref=e713]
                            - cell "Public Repo" [ref=e714]
                            - cell "Ubuntu" [ref=e715]
                            - cell "22.04" [ref=e716]:
                              - code [ref=e717]: "22.04"
                          - row "Kubernetes Public Repo Palette eXtended Kubernetes 1.32.3" [ref=e718]:
                            - cell "Kubernetes" [ref=e719]
                            - cell "Public Repo" [ref=e720]
                            - cell "Palette eXtended Kubernetes" [ref=e721]
                            - cell "1.32.3" [ref=e722]:
                              - code [ref=e723]: 1.32.3
                          - row "Network Public Repo Calico 3.29.3" [ref=e724]:
                            - cell "Network" [ref=e725]
                            - cell "Public Repo" [ref=e726]
                            - cell "Calico" [ref=e727]
                            - cell "3.29.3" [ref=e728]:
                              - code [ref=e729]: 3.29.3
                          - row "Storage Public Repo Amazon EBS CSI 1.41.0" [ref=e730]:
                            - cell "Storage" [ref=e731]
                            - cell "Public Repo" [ref=e732]
                            - cell "Amazon EBS CSI" [ref=e733]
                            - cell "1.41.0" [ref=e734]:
                              - code [ref=e735]: 1.41.0
                      - paragraph [ref=e736]:
                        - text: As you add each layer, click on the
                        - strong [ref=e737]: Next layer
                        - text: button. After adding the
                        - strong [ref=e738]: Storage
                        - text: layer, click on the
                        - strong [ref=e739]: Confirm
                        - text: button to complete the core infrastructure stack. Palette displays the newly created infrastructure profile as a layered diagram. You can select any layer to make further edits or change the version if desired.
                      - paragraph [ref=e740]:
                        - text: Next, proceed to include the add-on layers. Click on the
                        - strong [ref=e741]: Add New Pack
                        - text: button.
                      - paragraph [ref=e742]:
                        - text: Add the Spectro Proxy pack to enable a reverse proxy to connect to the cluster's API. Adding this pack is
                        - emphasis [ref=e743]: optional
                        - text: ", but it will help connect your local machine to the cluster's API for debugging. Refer to the"
                        - link "Spectro Proxy" [ref=e744] [cursor=pointer]:
                          - /url: /integrations/packs/?pack=spectro-proxy
                        - text: guide for more details.
                      - table [ref=e745]:
                        - rowgroup [ref=e746]:
                          - row "Pack Type Registry Pack Name Pack Version" [ref=e747]:
                            - cell "Pack Type" [ref=e748]:
                              - strong [ref=e749]: Pack Type
                            - cell "Registry" [ref=e750]:
                              - strong [ref=e751]: Registry
                            - cell "Pack Name" [ref=e752]:
                              - strong [ref=e753]: Pack Name
                            - cell "Pack Version" [ref=e754]:
                              - strong [ref=e755]: Pack Version
                        - rowgroup [ref=e756]:
                          - row "Authentication Public Repo Spectro Proxy 1.4.x" [ref=e757]:
                            - cell "Authentication" [ref=e758]
                            - cell "Public Repo" [ref=e759]
                            - cell "Spectro Proxy" [ref=e760]
                            - cell "1.4.x" [ref=e761]:
                              - code [ref=e762]: 1.4.x
                      - paragraph [ref=e763]:
                        - text: Click on the
                        - strong [ref=e764]: Confirm & Create
                        - text: button to finish adding the Spectro Proxy pack.
                      - paragraph [ref=e765]:
                        - text: Now, click on the Kubernetes layer and add the following certificate Subject Alternative Name (SAN) value under the
                        - code [ref=e766]: apiServer
                        - text: parameter section to configure the Spectro Proxy pack.
                      - generic [ref=e768]:
                        - code [ref=e770]:
                          - generic [ref=e771]: "certSANs:"
                          - generic [ref=e772]: "- \"cluster-{{ .spectro.system.cluster.uid }}.{{ .spectro.system.reverseproxy.server }}\""
                        - generic [ref=e773]:
                          - button "Toggle word wrap" [ref=e774] [cursor=pointer]:
                            - img [ref=e775]
                          - button "Copy code to clipboard" [ref=e777] [cursor=pointer]:
                            - generic [ref=e778]:
                              - img [ref=e779]
                              - img [ref=e781]
                      - paragraph [ref=e783]:
                        - img "Screenshot of the certificate Subject Alternative Name." [ref=e784]
                      - paragraph [ref=e785]:
                        - text: Finally, add the Hello Universe pack. Click on
                        - strong [ref=e786]: Add New Pack
                        - text: and select the registry you created earlier in this tutorial. The table below specifies the registry name corresponding to the registry type. For example, if you created an ECR registry, select
                        - strong [ref=e787]: ecr-registry
                        - text: .
                      - table [ref=e788]:
                        - rowgroup [ref=e789]:
                          - row "Pack Type Registry Type Registry Name Pack Name Pack Version" [ref=e790]:
                            - cell "Pack Type" [ref=e791]:
                              - strong [ref=e792]: Pack Type
                            - cell "Registry Type" [ref=e793]:
                              - strong [ref=e794]: Registry Type
                            - cell "Registry Name" [ref=e795]:
                              - strong [ref=e796]: Registry Name
                            - cell "Pack Name" [ref=e797]:
                              - strong [ref=e798]: Pack Name
                            - cell "Pack Version" [ref=e799]:
                              - strong [ref=e800]: Pack Version
                        - rowgroup [ref=e801]:
                          - row "App Services Spectro Registry spectro-pack-registry Hello Universe 1.2.0" [ref=e802]:
                            - cell "App Services" [ref=e803]
                            - cell "Spectro Registry" [ref=e804]
                            - cell "spectro-pack-registry" [ref=e805]:
                              - code [ref=e806]: spectro-pack-registry
                            - cell "Hello Universe" [ref=e807]
                            - cell "1.2.0" [ref=e808]:
                              - code [ref=e809]: 1.2.0
                          - row "App Services ECR ecr-registry Hello Universe 1.2.0" [ref=e810]:
                            - cell "App Services" [ref=e811]
                            - cell "ECR" [ref=e812]
                            - cell "ecr-registry" [ref=e813]:
                              - code [ref=e814]: ecr-registry
                            - cell "Hello Universe" [ref=e815]
                            - cell "1.2.0" [ref=e816]:
                              - code [ref=e817]: 1.2.0
                          - row "App Services Basic harbor-registry Hello Universe 1.2.0" [ref=e818]:
                            - cell "App Services" [ref=e819]
                            - cell "Basic" [ref=e820]
                            - cell "harbor-registry" [ref=e821]:
                              - code [ref=e822]: harbor-registry
                            - cell "Hello Universe" [ref=e823]
                            - cell "1.2.0" [ref=e824]:
                              - code [ref=e825]: 1.2.0
                      - paragraph [ref=e826]:
                        - text: Click on the
                        - strong [ref=e827]: Confirm & Create
                        - text: button to finish adding the Hello Universe pack.
                      - paragraph [ref=e828]:
                        - text: If there are no errors or compatibility issues, Palette displays the cluster profile. Verify the layers you added, and click
                        - strong [ref=e829]: Next
                        - text: .
                      - paragraph [ref=e830]:
                        - img "Screenshot of the Profile Layers success." [ref=e831]
                      - heading "ReviewDirect link to Review" [level=4] [ref=e832]:
                        - text: Review
                        - link "Direct link to Review" [ref=e833] [cursor=pointer]:
                          - /url: "#review"
                          - text: "#"
                      - paragraph [ref=e834]:
                        - text: Review the cluster layers and click on
                        - strong [ref=e835]: Finish Configuration
                        - text: to complete the creation of the cluster profile.
                      - heading "Create a ClusterDirect link to Create a Cluster" [level=3] [ref=e836]:
                        - text: Create a Cluster
                        - link "Direct link to Create a Cluster" [ref=e837] [cursor=pointer]:
                          - /url: "#create-a-cluster"
                          - text: "#"
                      - paragraph [ref=e838]:
                        - text: Navigate to the
                        - strong [ref=e839]: Profiles
                        - text: page and select the recently created cluster profile. Click on the
                        - strong [ref=e840]: Deploy
                        - text: button to start the deployment of a new cluster.
                      - heading "Basic InformationDirect link to Basic Information" [level=4] [ref=e841]:
                        - text: Basic Information
                        - link "Direct link to Basic Information" [ref=e842] [cursor=pointer]:
                          - /url: "#basic-information-1"
                          - text: "#"
                      - paragraph [ref=e843]:
                        - text: For the first section,
                        - strong [ref=e844]: Basic information
                        - text: ", use the following values."
                      - table [ref=e845]:
                        - rowgroup [ref=e846]:
                          - row "Field Value" [ref=e847]:
                            - cell "Field" [ref=e848]:
                              - strong [ref=e849]: Field
                            - cell "Value" [ref=e850]:
                              - strong [ref=e851]: Value
                        - rowgroup [ref=e852]:
                          - row "Cluster name pack-tutorial-cluster" [ref=e853]:
                            - cell "Cluster name" [ref=e854]
                            - cell "pack-tutorial-cluster" [ref=e855]
                          - row "Description Cluster as part of the Deploy a Custom Pack tutorial." [ref=e856]:
                            - cell "Description" [ref=e857]
                            - cell "Cluster as part of the Deploy a Custom Pack tutorial." [ref=e858]
                          - row "Tags spectro-cloud-education, app:hello-universe, terraform_managed:false" [ref=e859]:
                            - cell "Tags" [ref=e860]
                            - cell "spectro-cloud-education, app:hello-universe, terraform_managed:false" [ref=e861]:
                              - code [ref=e862]: spectro-cloud-education, app:hello-universe, terraform_managed:false
                          - row "Cloud Account Select the cloud you have registered in Palette for AWS" [ref=e863]:
                            - cell "Cloud Account" [ref=e864]
                            - cell "Select the cloud you have registered in Palette for AWS" [ref=e865]
                      - paragraph [ref=e866]:
                        - text: Click
                        - strong [ref=e867]: Next
                        - text: to proceed.
                      - heading "ParametersDirect link to Parameters" [level=4] [ref=e868]:
                        - text: Parameters
                        - link "Direct link to Parameters" [ref=e869] [cursor=pointer]:
                          - /url: "#parameters"
                          - text: "#"
                      - paragraph [ref=e870]:
                        - text: The
                        - strong [ref=e871]: Parameters
                        - text: section allows you to change the profile configurations. For example, by clicking on the
                        - strong [ref=e872]: Hello Universe 1.0.x
                        - text: layer, you can configure the
                        - code [ref=e873]: registry
                        - text: ","
                        - code [ref=e874]: repository
                        - text: ", and"
                        - code [ref=e875]: tag
                        - text: parameters defined in the
                        - strong [ref=e876]: values.yaml
                        - text: file.
                      - paragraph [ref=e877]:
                        - img "Screenshot of the Cluster layers." [ref=e878]
                      - paragraph [ref=e879]:
                        - text: Keep the default values and click
                        - strong [ref=e880]: Next
                        - text: .
                      - heading "Cluster configDirect link to Cluster config" [level=4] [ref=e881]:
                        - text: Cluster config
                        - link "Direct link to Cluster config" [ref=e882] [cursor=pointer]:
                          - /url: "#cluster-config"
                          - text: "#"
                      - paragraph [ref=e883]:
                        - text: In the
                        - strong [ref=e884]: Cluster config
                        - text: section, make sure to uncheck the
                        - strong [ref=e885]: Static Placement
                        - text: field. If it is checked, the
                        - strong [ref=e886]: Static Placement
                        - text: will deploy the cluster within an existing Virtual Private Cloud (VPC), and you will need to provide the
                        - link "Amazon Resource Names" [ref=e887] [cursor=pointer]:
                          - /url: https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html
                        - text: (ARNs) for the existing subnets, roles, and other resources. This tutorial will use dynamic placement, allowing Palette to create a new VPC along with all necessary resources for the cluster.
                      - paragraph [ref=e888]:
                        - text: In the
                        - strong [ref=e889]: Region
                        - text: field, choose the region of your preference. This tutorial will deploy the cluster in the
                        - strong [ref=e890]: us-east-1
                        - text: region. For the
                        - strong [ref=e891]: SSH Key Pair Name
                        - text: field, select the SSH key pair name available in the chosen region. Ensure that you have already created an SSH key in the AWS region where you plan to deploy the cluster.
                      - paragraph [ref=e892]:
                        - text: Click
                        - strong [ref=e893]: Next
                        - text: to continue.
                      - heading "Nodes configDirect link to Nodes config" [level=4] [ref=e894]:
                        - text: Nodes config
                        - link "Direct link to Nodes config" [ref=e895] [cursor=pointer]:
                          - /url: "#nodes-config"
                          - text: "#"
                      - paragraph [ref=e896]:
                        - text: In the
                        - strong [ref=e897]: Nodes config
                        - text: "section, provide the details for the control plane and worker pools. For this tutorial, you can use the following minimal configuration:"
                      - table [ref=e898]:
                        - rowgroup [ref=e899]:
                          - row "Field Value for the control-plane-pool Value for the worker-pool" [ref=e900]:
                            - cell "Field" [ref=e901]:
                              - strong [ref=e902]: Field
                            - cell "Value for the control-plane-pool" [ref=e903]:
                              - strong [ref=e904]: Value for the control-plane-pool
                            - cell "Value for the worker-pool" [ref=e905]:
                              - strong [ref=e906]: Value for the worker-pool
                        - rowgroup [ref=e907]:
                          - row "Node pool name control-plane-pool worker-pool" [ref=e908]:
                            - cell "Node pool name" [ref=e909]
                            - cell "control-plane-pool" [ref=e910]
                            - cell "worker-pool" [ref=e911]
                          - row "Number of nodes in the pool 1 1" [ref=e912]:
                            - cell "Number of nodes in the pool" [ref=e913]
                            - cell "1" [ref=e914]:
                              - code [ref=e915]: "1"
                            - cell "1" [ref=e916]:
                              - code [ref=e917]: "1"
                          - row "Allow worker capability Checked Not applicable" [ref=e918]:
                            - cell "Allow worker capability" [ref=e919]
                            - cell "Checked" [ref=e920]
                            - cell "Not applicable" [ref=e921]
                          - row "Enable Autoscaler Not applicable No" [ref=e922]:
                            - cell "Enable Autoscaler" [ref=e923]
                            - cell "Not applicable" [ref=e924]
                            - cell "No" [ref=e925]
                          - row "Rolling update Not applicable Expand First. Launch a new node first, then shut down the old one." [ref=e926]:
                            - cell "Rolling update" [ref=e927]
                            - cell "Not applicable" [ref=e928]
                            - cell "Expand First. Launch a new node first, then shut down the old one." [ref=e929]
                      - paragraph [ref=e930]:
                        - text: Keep the
                        - strong [ref=e931]: Cloud Configuration
                        - text: the same for both control plane and worker pools.
                      - table [ref=e932]:
                        - rowgroup [ref=e933]:
                          - row "Field Value" [ref=e934]:
                            - cell "Field" [ref=e935]:
                              - strong [ref=e936]: Field
                            - cell "Value" [ref=e937]:
                              - strong [ref=e938]: Value
                        - rowgroup [ref=e939]:
                          - row "Instance Type General purpose m4.xlarge A minimum allocation of four CPU cores is required for the control plane node." [ref=e940]:
                            - cell "Instance Type" [ref=e941]
                            - cell "General purpose m4.xlarge A minimum allocation of four CPU cores is required for the control plane node." [ref=e942]:
                              - text: General purpose
                              - code [ref=e943]: m4.xlarge
                              - text: A minimum allocation of four CPU cores is required for the control plane node.
                          - row "Availability zones Choose any one availability zone. This tutorial uses the us-east-1a availability zone." [ref=e944]:
                            - cell "Availability zones" [ref=e945]
                            - cell "Choose any one availability zone. This tutorial uses the us-east-1a availability zone." [ref=e946]:
                              - text: Choose any
                              - emphasis [ref=e947]: one
                              - text: availability zone. This tutorial uses the
                              - code [ref=e948]: us-east-1a
                              - text: availability zone.
                          - row "Disk size 60 GiB" [ref=e949]:
                            - cell "Disk size" [ref=e950]
                            - cell "60 GiB" [ref=e951]
                      - paragraph [ref=e952]:
                        - text: Click
                        - strong [ref=e953]: Next
                        - text: to continue.
                      - heading "SettingsDirect link to Settings" [level=4] [ref=e954]:
                        - text: Settings
                        - link "Direct link to Settings" [ref=e955] [cursor=pointer]:
                          - /url: "#settings"
                          - text: "#"
                      - paragraph [ref=e956]:
                        - text: The
                        - strong [ref=e957]: Settings
                        - text: section displays options for OS patching, scheduled scans, scheduled backups, and cluster role binding. Use the default values, and click on the
                        - strong [ref=e958]: Validate
                        - text: button.
                      - heading "ReviewDirect link to Review" [level=4] [ref=e959]:
                        - text: Review
                        - link "Direct link to Review" [ref=e960] [cursor=pointer]:
                          - /url: "#review-1"
                          - text: "#"
                      - paragraph [ref=e961]:
                        - text: Review all configurations in this section. The
                        - strong [ref=e962]: Review
                        - text: page displays the cluster name, tags, cloud account name, node pools, layers, and an estimated hourly cost. If everything is correct, click on the
                        - strong [ref=e963]: Finish Configuration
                        - text: button to complete the cluster deployment, which may take up to
                        - emphasis [ref=e964]: 20 minutes
                        - text: .
                      - paragraph [ref=e965]:
                        - text: While the deployment is in progress, Palette displays the cluster status as
                        - strong [ref=e966]: Provisioning
                        - text: . While you wait for the cluster to finish deploying, you can explore the various tabs on the cluster page, such as
                        - strong [ref=e967]: Overview
                        - text: ","
                        - strong [ref=e968]: Workloads
                        - text: ", and"
                        - strong [ref=e969]: Events
                        - text: .
                    - text: "# # # # #"
                - heading "ValidateDirect link to Validate" [level=2] [ref=e970]:
                  - text: Validate
                  - link "Direct link to Validate" [ref=e971] [cursor=pointer]:
                    - /url: "#validate"
                    - text: "#"
                - paragraph [ref=e972]:
                  - text: In Palette, navigate to the left
                  - strong [ref=e973]: Main Menu
                  - text: and select
                  - strong [ref=e974]: Clusters
                  - text: . Next, select your cluster to display the cluster's
                  - strong [ref=e975]: Overview
                  - text: page and monitor the provisioning progress.
                - paragraph [ref=e976]:
                  - img "Screenshot of the cluster health." [ref=e977]
                - paragraph [ref=e978]:
                  - text: Once the cluster status displays
                  - strong [ref=e979]: Running
                  - text: and
                  - strong [ref=e980]: Healthy
                  - text: ", you can access the application through the exposed service URL along with the displayed port number. For the Hello Universe application, port 8080 is exposed. Click on the"
                  - strong [ref=e981]: Services
                  - text: URL to access the application.
                - generic [ref=e982]:
                  - generic [ref=e983]:
                    - img [ref=e985]
                    - text: warning
                  - paragraph [ref=e988]: We recommend waiting for one to three minutes before clicking on the service URL. This allows DNS to properly resolve the public load balancer URL, preventing the browser from caching an unresolved DNS request.
                - paragraph [ref=e989]:
                  - img "Screenshot of the successful accessing the application using the load balancer URL." [ref=e990]
                - paragraph [ref=e991]:
                  - text: You can also look at real-time metrics, such as CPU and memory consumption, in the cluster's
                  - strong [ref=e992]: Overview
                  - text: tab in Palette.
                - paragraph [ref=e993]:
                  - img "Screenshot of the cluster metrics." [ref=e994]
                - paragraph [ref=e995]:
                  - text: By using your custom pack, you have successfully deployed the
                  - strong [ref=e996]: Hello Universe
                  - text: application to the cluster.
                - heading "CleanupDirect link to Cleanup" [level=2] [ref=e997]:
                  - text: Cleanup
                  - link "Direct link to Cleanup" [ref=e998] [cursor=pointer]:
                    - /url: "#cleanup"
                    - text: "#"
                - paragraph [ref=e999]: The following steps will guide you in cleaning up your environment. Follow the Palette-specific steps if you used Palette to deploy the cluster. Alternatively, use Terraform commands to delete the cluster if you used Terraform for deployment.
                - generic [ref=e1000]:
                  - tablist [ref=e1001]:
                    - tab "Palette UI" [selected] [ref=e1002] [cursor=pointer]
                    - tab "Terraform" [ref=e1003] [cursor=pointer]
                  - generic [ref=e1004]:
                    - tabpanel [ref=e1005]:
                      - heading "Delete the Cluster and Cluster ProfileDirect link to Delete the Cluster and Cluster Profile" [level=4] [ref=e1006]:
                        - text: Delete the Cluster and Cluster Profile
                        - link "Direct link to Delete the Cluster and Cluster Profile" [ref=e1007] [cursor=pointer]:
                          - /url: "#delete-the-cluster-and-cluster-profile"
                          - text: "#"
                      - paragraph [ref=e1008]:
                        - text: Navigate to the
                        - strong [ref=e1009]: Cluster
                        - text: section in Palette's left
                        - strong [ref=e1010]: Main Menu
                        - text: and access the details page for the
                        - strong [ref=e1011]: pack-tutorial-cluster
                        - text: . To delete the cluster, click on the
                        - strong [ref=e1012]: Settings
                        - text: button to expand the
                        - strong [ref=e1013]: drop-down Menu
                        - text: ", and select the"
                        - strong [ref=e1014]: Delete Cluster
                        - text: option. Palette will prompt you to enter the cluster name and confirm the deletion.
                      - paragraph [ref=e1015]:
                        - img "Screenshot of deleting the cluster in Palette." [ref=e1016]
                      - paragraph [ref=e1017]:
                        - text: The cluster status will display
                        - strong [ref=e1018]: Deleting
                        - text: ", and the deletion may take up to 10 minutes."
                      - generic [ref=e1019]:
                        - generic [ref=e1020]:
                          - img [ref=e1022]
                          - text: info
                        - paragraph [ref=e1025]:
                          - text: If a cluster remains in the delete phase for over 15 minutes, it becomes eligible for force deletion. Navigate to the cluster's details page and click on
                          - strong [ref=e1026]: Settings
                          - text: . Select
                          - strong [ref=e1027]: Force Delete Cluster
                          - text: . Palette automatically removes clusters that are stuck in the deletion phase for over 24 hours.
                      - paragraph [ref=e1028]:
                        - text: After deleting the cluster, proceed to delete the cluster profile. In the left
                        - strong [ref=e1029]: Main Menu
                        - text: ", click on"
                        - strong [ref=e1030]: Profiles
                        - text: and select the profile you want to delete. Next, click on the
                        - strong [ref=e1031]: Delete
                        - text: option in the
                        - strong [ref=e1032]: three-dot Menu
                        - text: .
                      - paragraph [ref=e1033]:
                        - img "Screenshot of deleting the profile in Palette." [ref=e1034]
                      - paragraph [ref=e1035]: Wait for the resources to complete cleanup and ensure they are successfully deleted.
                    - text: "#"
                - heading "Delete the Registry ServerDirect link to Delete the Registry Server" [level=4] [ref=e1036]:
                  - text: Delete the Registry Server
                  - link "Direct link to Delete the Registry Server" [ref=e1037] [cursor=pointer]:
                    - /url: "#delete-the-registry-server"
                    - text: "#"
                - paragraph [ref=e1038]:
                  - text: After deleting the cluster and cluster profile, navigate to the
                  - strong [ref=e1039]: Tenant Settings
                  - text: ">"
                  - strong [ref=e1040]: Registries
                  - text: ">"
                  - strong [ref=e1041]: Pack Registries
                  - text: section in Palette to remove the registry configuration.
                - paragraph [ref=e1042]:
                  - img "Screenshot of registry server delete in Palette" [ref=e1043]
                - paragraph [ref=e1044]: Now, delete the registry server. If you used the Spectro registry, stop the registry server by closing the tutorial container bash session that serves the Ngrok reverse proxy server. If you used the ECR registry, you must first remove the pack from the repository before deleting it.
                - paragraph [ref=e1045]: Execute the following command to delete the pack from your ECR repository.
                - generic [ref=e1047]:
                  - code [ref=e1049]:
                    - generic [ref=e1050]: aws ecr batch-delete-image --repository-name $REGISTRY_NAME/spectro-packs/archive/$NAME --image-ids imageDigest=$(aws ecr describe-images --repository-name $REGISTRY_NAME/spectro-packs/archive/$NAME --region $AWS_DEFAULT_REGION --query 'imageDetails[0].imageDigest' --output text)
                  - generic [ref=e1051]:
                    - button "Toggle word wrap" [ref=e1052] [cursor=pointer]:
                      - img [ref=e1053]
                    - button "Copy code to clipboard" [ref=e1055] [cursor=pointer]:
                      - generic [ref=e1056]:
                        - img [ref=e1057]
                        - img [ref=e1059]
                - paragraph [ref=e1061]:
                  - text: The snippet below displays the output of the
                  - code [ref=e1062]: aws ecr batch-delete-image
                  - text: command, confirming the deletion of the Hello Universe pack.
                - code [ref=e1066]:
                  - generic [ref=e1067]: "{"
                  - generic [ref=e1068]: "\"imageIds\": ["
                  - generic [ref=e1069]: "{"
                  - generic [ref=e1070]: "\"imageDigest\": \"sha256:<YourImageSha>\","
                  - generic [ref=e1071]: "\"imageTag\": \"1.0.0\""
                  - generic [ref=e1072]: "}"
                  - generic [ref=e1073]: "],"
                  - generic [ref=e1074]: "\"failures\": []"
                  - generic [ref=e1075]: "}"
                - paragraph [ref=e1076]: Next, proceed to delete the repositories.
                - generic [ref=e1078]:
                  - code [ref=e1080]:
                    - generic [ref=e1081]: aws ecr delete-repository --repository-name $REGISTRY_NAME/spectro-packs/archive
                    - generic [ref=e1082]: aws ecr delete-repository --repository-name $REGISTRY_NAME/spectro-packs/archive/$NAME
                  - generic [ref=e1083]:
                    - button "Toggle word wrap" [ref=e1084] [cursor=pointer]:
                      - img [ref=e1085]
                    - button "Copy code to clipboard" [ref=e1087] [cursor=pointer]:
                      - generic [ref=e1088]:
                        - img [ref=e1089]
                        - img [ref=e1091]
                - paragraph [ref=e1093]: The output should provide information regarding the deleted repositories.
                - generic [ref=e1095]:
                  - code [ref=e1097]:
                    - generic [ref=e1098]: "{"
                    - generic [ref=e1099]: "\"repository\": {"
                    - generic [ref=e1100]: "\"repositoryArn\": \"arn:aws:ecr:us-east-1:<YourAccountId>:repository/spectro-oci-registry/spectro-packs/archive\","
                    - generic [ref=e1101]: "\"registryId\": \"<YourRegistryId>\","
                    - generic [ref=e1102]: "\"repositoryName\": \"spectro-oci-registry/spectro-packs/archive\","
                    - generic [ref=e1103]: "\"repositoryUri\": \"<YourAccountId>.dkr.ecr.us-east-1.amazonaws.com/spectro-oci-registry/spectro-packs/archive\","
                    - generic [ref=e1104]: "\"createdAt\": \"2023-11-28T16:23:20+00:00\","
                    - generic [ref=e1105]: "\"imageTagMutability\": \"MUTABLE\""
                    - generic [ref=e1106]: "}"
                    - generic [ref=e1107]: "\"repository\": {"
                    - generic [ref=e1108]: "\"repositoryArn\": \"arn:aws:ecr:us-east-1:<YourAccountId>:repository/spectro-oci-registry/spectro-packs/archive/hellouniverse\","
                    - generic [ref=e1109]: "\"registryId\": \"<YourRegistryId>\","
                    - generic [ref=e1110]: "\"repositoryName\": \"spectro-oci-registry/spectro-packs/archive/hellouniverse\","
                    - generic [ref=e1111]: "\"repositoryUri\": \"<YourAccountId>.dkr.ecr.us-east-1.amazonaws.com/spectro-oci-registry/spectro-packs/archive/hellouniverse\","
                    - generic [ref=e1112]: "\"createdAt\": \"2023-11-28T16:23:29+00:00\","
                    - generic [ref=e1113]: "\"imageTagMutability\": \"MUTABLE\""
                    - generic [ref=e1114]: "}"
                    - generic [ref=e1115]: "}"
                  - button "Toggle word wrap" [ref=e1117] [cursor=pointer]:
                    - img [ref=e1118]
                - paragraph [ref=e1120]: Last, if you used a Basic registry, such as Harbor, make sure to delete your Harbor registry server.
                - paragraph [ref=e1121]: At this point, you can close all the bash sessions. To remove the container and the image from your local machine, issue the following commands.
                - generic [ref=e1122]:
                  - tablist [ref=e1123]:
                    - tab "Docker" [selected] [ref=e1124] [cursor=pointer]
                    - tab "Podman" [ref=e1125] [cursor=pointer]
                  - tabpanel [ref=e1127]:
                    - generic [ref=e1129]:
                      - code [ref=e1131]:
                        - generic [ref=e1132]: docker stop tutorialContainer && \
                        - generic [ref=e1133]: docker rmi --force ghcr.io/spectrocloud/tutorials:1.3.0
                      - button "Copy code to clipboard" [ref=e1135] [cursor=pointer]:
                        - generic [ref=e1136]:
                          - img [ref=e1137]
                          - img [ref=e1139]
                - heading "Wrap-UpDirect link to Wrap-Up" [level=2] [ref=e1141]:
                  - text: Wrap-Up
                  - link "Direct link to Wrap-Up" [ref=e1142] [cursor=pointer]:
                    - /url: "#wrap-up"
                    - text: "#"
                - paragraph [ref=e1143]: In this tutorial, you learned how to create a custom pack using manifest files. You packaged up an application in a custom pack that you pushed to a registry server and added to Palette.
                - paragraph [ref=e1144]: Next, you created a cluster profile that included all the core infrastructure layers, such as the OS, Kubernetes distribution, and more. Additionally, you added your custom pack to the cluster profile, enabling your application to be deployed to a Kubernetes cluster.
                - paragraph [ref=e1145]: Packs are the building blocks of cluster profiles, allowing you to customize your Kubernetes clusters. Palette enables you to use different packs to create multiple cluster profiles, each for specific purposes. As a result, you can ensure all Kubernetes deployments contain all the required dependencies and applications without developing complicated deployment scripts. All you need to do is maintain the cluster profiles.
                - paragraph [ref=e1146]: To learn more about packs in Palette, we encourage you to check out the reference resources below.
                - list [ref=e1147]:
                  - listitem [ref=e1148]:
                    - link "Custom OS Pack" [ref=e1149] [cursor=pointer]:
                      - /url: /integrations/packs/?pack=generic-byoi
                  - listitem [ref=e1150]:
                    - paragraph [ref=e1151]:
                      - link "Add-on Packs" [ref=e1152] [cursor=pointer]:
                        - /url: /registries-and-packs/adding-add-on-packs/
                  - listitem [ref=e1153]:
                    - paragraph [ref=e1154]:
                      - link "Pack Constraints" [ref=e1155] [cursor=pointer]:
                        - /url: /registries-and-packs/pack-constraints/
                  - listitem [ref=e1156]:
                    - paragraph [ref=e1157]:
                      - link "OCI Registry" [ref=e1158] [cursor=pointer]:
                        - /url: /registries-and-packs/registries/oci-registry/
              - generic [ref=e1159]:
                - generic [ref=e1161]:
                  - text: "Tags:"
                  - list [ref=e1162]:
                    - listitem [ref=e1163]:
                      - link "packs" [ref=e1164] [cursor=pointer]:
                        - /url: /tags/packs/
                    - listitem [ref=e1165]:
                      - link "tutorial" [ref=e1166] [cursor=pointer]:
                        - /url: /tags/tutorial/
                - link "Edit this page" [ref=e1169] [cursor=pointer]:
                  - /url: https://github.com/spectrocloud/librarium/blob/master/docs/docs-content/tutorials/packs-registries/deploy-pack.md
                  - img [ref=e1170]
                  - text: Edit this page
            - navigation "Docs pages" [ref=e1174]:
              - link "Previous « Packs and Registries" [ref=e1175] [cursor=pointer]:
                - /url: /tutorials/packs-registries/
                - generic [ref=e1176]: Previous
                - generic [ref=e1177]: « Packs and Registries
              - link "Next Profiles »" [ref=e1178] [cursor=pointer]:
                - /url: /tutorials/profiles/
                - generic [ref=e1179]: Next
                - generic [ref=e1180]: Profiles »
          - list [ref=e1183]:
            - listitem [ref=e1184]:
              - link "Prerequisites" [ref=e1185] [cursor=pointer]:
                - /url: "#prerequisites"
            - listitem [ref=e1186]:
              - link "Set Up the Tutorial Environment" [ref=e1187] [cursor=pointer]:
                - /url: "#set-up-the-tutorial-environment"
            - listitem [ref=e1188]:
              - link "Build a Pack" [ref=e1189] [cursor=pointer]:
                - /url: "#build-a-pack"
            - listitem [ref=e1190]:
              - link "Set Up the Registry Server" [ref=e1191] [cursor=pointer]:
                - /url: "#set-up-the-registry-server"
            - listitem [ref=e1192]:
              - link "Create a Cluster Profile and Deploy a Cluster" [ref=e1193] [cursor=pointer]:
                - /url: "#create-a-cluster-profile-and-deploy-a-cluster"
            - listitem [ref=e1194]:
              - link "Validate" [ref=e1195] [cursor=pointer]:
                - /url: "#validate"
            - listitem [ref=e1196]:
              - link "Cleanup" [ref=e1197] [cursor=pointer]:
                - /url: "#cleanup"
            - listitem [ref=e1198]:
              - link "Wrap-Up" [ref=e1199] [cursor=pointer]:
                - /url: "#wrap-up"
  - button "Project Logo Ask AI" [ref=e1200] [cursor=pointer]:
    - generic [ref=e1203]:
      - img "Project Logo" [ref=e1204]
      - paragraph [ref=e1205]: Ask AI
```