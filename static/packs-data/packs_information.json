[
  {
    "name": "amazon-linux-eks",
    "description": "The Amazon EKS optimized Amazon Linux AMI is built on top of Amazon Linux 2 (AL2) and Amazon Linux 2023 (AL2023). This image is configured to serve as the base image for Amazon EKS nodes."
  },
  {
    "name": "ambassador",
    "description": "Ambassador is a Kubernetes-native API gateway built on the Envoy Proxy. Ambassador simplifies the process of exposing, securing, and managing traffic to services in Kubernetes clusters, reducing challenges to implement complex networking scenarios in cloud-native environments."
  },
  {
    "name": "antrea",
    "description": "Antrea is a Kubernetes networking solution intended to be Kubernetes native. It operates at Layer 3/4 to provide networking and security services for a Kubernetes cluster, leveraging Open vSwitch as the networking data plane."
  },
  {
    "name": "appdynamics-collector",
    "description": "AppDynamics Collector is a component within the AppDynamics platform that gathers and processes telemetry data from applications, databases, or other monitored systems, and sends this data to the AppDynamics backend for analysis and visualization."
  },
  {
    "name": "appdynamics-operator",
    "description": "AppDynamics Operator is a Kubernetes-native component designed to manage and automate the deployment and configuration of AppDynamics monitoring agents within Kubernetes environments."
  },
  {
    "name": "argo-rollouts",
    "description": "Argo Rollouts is a Kubernetes controller and set of CRDs which provide advanced deployment capabilities such as blue-green, canary, canary analysis, experimentation, and progressive delivery features to Kubernetes."
  },
  {
    "name": "avi",
    "description": "AVI AKO is a Kubernetes operator which works as an ingress controller and performs Avi-specific functions in a Kubernetes environment with the Avi Controller. AKO is deployed as a pod in the cluster and translates the required Kubernetes objects to Avi objects and automates the implementation of ingresses/routes/services on the Service Engines (SE) via the Avi Controller."
  },
  {
    "name": "avi-ako",
    "description": "AVI AKO is a Kubernetes operator which works as an ingress controller and performs Avi-specific functions in a Kubernetes environment with the Avi Controller. AKO is deployed as a pod in the cluster and translates the required Kubernetes objects to Avi objects and automates the implementation of ingresses/routes/services on the Service Engines (SE) via the Avi Controller."
  },
  {
    "name": "aws-eks-calico",
    "description": "Calico is a networking and security solution that enables Kubernetes workloads and non-Kubernetes/legacy workloads to communicate seamlessly and securely. Calico consists of networking to secure network communication, and advanced network policy to secure cloud-native microservices/applications at scale."
  },
  {
    "name": "aws-alb",
    "description": "AWS Load Balancer Controller is a controller to help manage Elastic Load Balancers for a Kubernetes cluster. AWS Load Balancer Controller satisfies Kubernetes Ingress resources by provisioning Application Load Balancers. It also satisfies Kubernetes Service resources by provisioning Network Load Balancers."
  },
  {
    "name": "csi-aws-efs",
    "description": "The Amazon Elastic File System Container Storage Interface (CSI) Driver implements the CSI specification for container orchestrators to manage the lifecycle of Amazon EFS file systems. Amazon EFS CSI driver supports dynamic provisioning and static provisioning. "
  },
  {
    "name": "cni-calico",
    "description": "Calico is a networking and security solution that enables Kubernetes workloads and non-Kubernetes/legacy workloads to communicate seamlessly and securely. Calico consists of networking to secure network communication, and advanced network policy to secure cloud-native microservices/applications at scale."
  },
  {
    "name": "cni-calico-azure",
    "description": "Calico is a networking and security solution that enables Kubernetes workloads and non-Kubernetes/legacy workloads to communicate seamlessly and securely. Calico consists of networking to secure network communication, and advanced network policy to secure cloud-native microservices/applications at scale."
  },
  {
    "name": "",
    "description": ""
  },
  {
    "name": "",
    "description": ""
  },
  {
    "name": "",
    "description": ""
  },
  {
    "name": "",
    "description": ""
  },
  {
    "name": "",
    "description": ""
  },
  {
    "name": "",
    "description": ""
  },
  {
    "name": "centos",
    "description": "CentOS Linux distribution is a stable, predictable, manageable and reproducible platform derived from the sources of RedHat Enterprise Linux (RHEL). It provides a rich base platform for open source communities to build upon. Spectro Cloudprovides CentOS as a development framework for its users."
  },
  {
    "name": "cni-flannel",
    "description": "Flannel is a network layer, layer three, fabric for Kubernetes. It is designed to work with Linux routing infrastructure and creates a virtual network that gives each computing host a subnet. Flannel uses either the Kubernetes API or etcd directly to store the network configuration, the allocated subnets, and any auxiliary data such as the hostâ€™s public IP address."
  },
  {
    "name": "cni-cilium",
    "description": "The Cilium agent runs on all clusters and servers to provide networking, security and observability to the workload running on that node."
  },
  {
    "name": "csi-rook",
    "description": "Rook is a cloud-native storage orchestrator for Kubernetes, providing the platform, framework, and support for a diverse set of storage solutions to natively integrate with cloud-native environments. Rook turns storage"
  },
  {
    "name": "hello-universe",
    "description": "Hello Universe is a demo web application used to help users learn more about Palette and its features. It includes a click counter and funny Spectro Cloud-themed images."
  },
  {
    "name": "cost-analyzer",
    "description": "Kubecost is a cost monitoring and optimization application that offers real-time cost visibility and insights for Kubernetes clusters."
  },
  {
    "name": "aws-cluster-autoscaler",
    "description": "The AWS Cluster Autoscaler pack monitors the cluster workload and utilizes AWS autoscaling groups to dynamically provision or shut down nodes, maximizing the cluster's performance and making it more resilient to failures."
  },
  {
    "name": "crossplane",
    "description": "Crossplane transforms Kubernetes clusters into universal control planes, extending the Kubernetes API and enabling infrastructure resource provisioning and management across major infrastructure providers."
  },
  {
    "name": "kubernetes-microk8s",
    "description": "MicroK8s is a lightweight CNCF-certified Kubernetes distribution developed by Canonical. It deploys all Kubernetes services in a single, fully contained package and offers out-of-the-box add-ons."
  },
  {
    "name": "edge-microk8s",
    "description": "MicroK8s is a lightweight CNCF-certified Kubernetes distribution developed by Canonical. It deploys all Kubernetes services in a single, fully contained package and offers out-of-the-box add-ons."
  },
  {
    "name": "lb-metallb",
    "description": "MetalLB is a load balancer implementation for bare metal Kubernetes clusters that use standard routing protocols."
  },
  {
    "name": "lb-metallb-helm",
    "description": "MetalLB is a load balancer implementation for bare metal Kubernetes clusters that use standard routing protocols."
  },
  {
    "name": "ngrok-ingress-controller",
    "description": "The ngrok Ingress Controller provides secure internet access to Kubernetes workloads by offloading network ingress and middleware execution to ngrok's platform."
  },
  {
    "name": "nutanix-csi",
    "description": "The Nutanix CSI pack uses Nutanix Volumes and Nutanix Files to provide persistent storage for stateful applications."
  }
]
